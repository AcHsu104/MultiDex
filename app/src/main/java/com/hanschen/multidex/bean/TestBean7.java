// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gateway.proto

package com.hanschen.multidex.bean;

public final class TestBean7 {
  private TestBean7() {}
  public static void registerAllExtensions(
          com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
          com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
            (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code com.hanschen.multidex.bean.MessageType}
   */
  public enum MessageType
          implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *登入
     * </pre>
     *
     * <code>LOGIN = 0;</code>
     */
    LOGIN(0),
    /**
     * <code>LOGIN_ACK = 1;</code>
     */
    LOGIN_ACK(1),
    /**
     * <pre>
     *登出(无实质作用, iOS平台需要, AP可不做特殊处理)
     * </pre>
     *
     * <code>LOGOUT = 2;</code>
     */
    LOGOUT(2),
    /**
     * <code>LOGOUT_ACK = 3;</code>
     */
    LOGOUT_ACK(3),
    /**
     * <pre>
     *检测是否绑定
     * </pre>
     *
     * <code>CHECK_USER_BOUND = 4;</code>
     */
    CHECK_USER_BOUND(4),
    /**
     * <code>CHECK_USER_BOUND_ACK = 5;</code>
     */
    CHECK_USER_BOUND_ACK(5),
    /**
     * <pre>
     *获取绑定列表
     * </pre>
     *
     * <code>GET_BOUND_LIST = 6;</code>
     */
    GET_BOUND_LIST(6),
    /**
     * <code>GET_BOUND_LIST_ACK = 7;</code>
     */
    GET_BOUND_LIST_ACK(7),
    /**
     * <pre>
     *获取主机列表
     * </pre>
     *
     * <code>REQUEST_HOST_LIST = 8;</code>
     */
    REQUEST_HOST_LIST(8),
    /**
     * <code>REQUEST_HOST_LIST_ACK = 9;</code>
     */
    REQUEST_HOST_LIST_ACK(9),
    /**
     * <pre>
     *获取AP运行信息
     * </pre>
     *
     * <code>REQUEST_SYSTEM_INFO = 10;</code>
     */
    REQUEST_SYSTEM_INFO(10),
    /**
     * <code>REQUEST_SYSTEM_INFO_ACK = 11;</code>
     */
    REQUEST_SYSTEM_INFO_ACK(11),
    /**
     * <pre>
     *获取WI-FI模式
     * </pre>
     *
     * <code>REQUEST_WIFI_MODE = 12;</code>
     */
    REQUEST_WIFI_MODE(12),
    /**
     * <code>REQUEST_WIFI_MODE_ACK = 13;</code>
     */
    REQUEST_WIFI_MODE_ACK(13),
    /**
     * <pre>
     *设置新的WI-FI模式
     * </pre>
     *
     * <code>SET_WIFI_MODE = 14;</code>
     */
    SET_WIFI_MODE(14),
    /**
     * <code>SET_WIFI_MODE_ACK = 15;</code>
     */
    SET_WIFI_MODE_ACK(15),
    /**
     * <pre>
     *获取客人WI-FI设置
     * </pre>
     *
     * <code>REQUEST_GUEST_WIFI_INFO = 16;</code>
     */
    REQUEST_GUEST_WIFI_INFO(16),
    /**
     * <code>REQUEST_GUEST_WIFI_INFO_ACK = 17;</code>
     */
    REQUEST_GUEST_WIFI_INFO_ACK(17),
    /**
     * <pre>
     *设置客人WI-FI
     * </pre>
     *
     * <code>SET_GUEST_WIFI = 18;</code>
     */
    SET_GUEST_WIFI(18),
    /**
     * <code>SET_GUEST_WIFI_ACK = 19;</code>
     */
    SET_GUEST_WIFI_ACK(19),
    /**
     * <pre>
     *获取被控制的设备
     * </pre>
     *
     * <code>REQUEST_PARENT_CONTROL_DEVICE = 20;</code>
     */
    REQUEST_PARENT_CONTROL_DEVICE(20),
    /**
     * <code>REQUEST_PARENT_CONTROL_DEVICE_ACK = 21;</code>
     */
    REQUEST_PARENT_CONTROL_DEVICE_ACK(21),
    /**
     * <pre>
     *查询家长控制任务
     * </pre>
     *
     * <code>REQUEST_PARENT_CONTROL_TASK = 22;</code>
     */
    REQUEST_PARENT_CONTROL_TASK(22),
    /**
     * <code>REQUEST_PARENT_CONTROL_TASK_ACK = 23;</code>
     */
    REQUEST_PARENT_CONTROL_TASK_ACK(23),
    /**
     * <pre>
     *添加家长控制任务
     * </pre>
     *
     * <code>ADD_PARENT_CONTROL_TASK = 24;</code>
     */
    ADD_PARENT_CONTROL_TASK(24),
    /**
     * <code>ADD_PARENT_CONTROL_TASK_ACK = 25;</code>
     */
    ADD_PARENT_CONTROL_TASK_ACK(25),
    /**
     * <pre>
     *删除家长控制任务
     * </pre>
     *
     * <code>DELETE_PARENT_CONTROL_TASK = 26;</code>
     */
    DELETE_PARENT_CONTROL_TASK(26),
    /**
     * <code>DELETE_PARENT_CONTROL_TASK_ACK = 27;</code>
     */
    DELETE_PARENT_CONTROL_TASK_ACK(27),
    /**
     * <pre>
     *修改家长控制任务
     * </pre>
     *
     * <code>MODIFY_PARENT_CONTROL_TASK = 28;</code>
     */
    MODIFY_PARENT_CONTROL_TASK(28),
    /**
     * <code>MODIFY_PARENT_CONTROL_TASK_ACK = 29;</code>
     */
    MODIFY_PARENT_CONTROL_TASK_ACK(29),
    /**
     * <pre>
     *检测是否连上互联网
     * </pre>
     *
     * <code>CHECK_INTERNET_REACHABLE = 30;</code>
     */
    CHECK_INTERNET_REACHABLE(30),
    /**
     * <code>CHECK_INTERNET_REACHABLE_ACK = 31;</code>
     */
    CHECK_INTERNET_REACHABLE_ACK(31),
    /**
     * <pre>
     *检测防火墙是否打开
     * </pre>
     *
     * <code>CHECK_FIREWALL_STATUS = 32;</code>
     */
    CHECK_FIREWALL_STATUS(32),
    /**
     * <code>CHECK_FIREWALL_STATUS_ACK = 33;</code>
     */
    CHECK_FIREWALL_STATUS_ACK(33),
    /**
     * <pre>
     *打开防火墙
     * </pre>
     *
     * <code>OPEN_FIREWALL_STATUS = 34;</code>
     */
    OPEN_FIREWALL_STATUS(34),
    /**
     * <code>OPEN_FIREWALL_STATUS_ACK = 35;</code>
     */
    OPEN_FIREWALL_STATUS_ACK(35),
    /**
     * <pre>
     *获取超级管理员信息
     * </pre>
     *
     * <code>REQUEST_SUPER_ADMIN_INFO = 36;</code>
     */
    REQUEST_SUPER_ADMIN_INFO(36),
    /**
     * <code>REQUEST_SUPER_ADMIN_INFO_ACK = 37;</code>
     */
    REQUEST_SUPER_ADMIN_INFO_ACK(37),
    /**
     * <pre>
     *验证超级管理员账号
     * </pre>
     *
     * <code>VERIFY_SUPER_ADMIN = 38;</code>
     */
    VERIFY_SUPER_ADMIN(38),
    /**
     * <code>VERIFY_SUPER_ADMIN_ACK = 39;</code>
     */
    VERIFY_SUPER_ADMIN_ACK(39),
    /**
     * <pre>
     *设置超级管理员账号
     * </pre>
     *
     * <code>SET_SUPER_ADMIN = 40;</code>
     */
    SET_SUPER_ADMIN(40),
    /**
     * <code>SET_SUPER_ADMIN_ACK = 41;</code>
     */
    SET_SUPER_ADMIN_ACK(41),
    /**
     * <pre>
     *获取智能带宽模式
     * </pre>
     *
     * <code>REQUEST_SMART_BANDWIDTH = 42;</code>
     */
    REQUEST_SMART_BANDWIDTH(42),
    /**
     * <code>REQUEST_SMART_BANDWIDTH_ACK = 43;</code>
     */
    REQUEST_SMART_BANDWIDTH_ACK(43),
    /**
     * <pre>
     *设置智能带宽模式
     * </pre>
     *
     * <code>SET_SMART_BANDWIDTH = 44;</code>
     */
    SET_SMART_BANDWIDTH(44),
    /**
     * <code>SET_SMART_BANDWIDTH_ACK = 45;</code>
     */
    SET_SMART_BANDWIDTH_ACK(45),
    /**
     * <pre>
     *获取硬盘状态
     * </pre>
     *
     * <code>REQUEST_HARD_DISK_INFO = 46;</code>
     */
    REQUEST_HARD_DISK_INFO(46),
    /**
     * <code>REQUEST_HARD_DISK_INFO_ACK = 47;</code>
     */
    REQUEST_HARD_DISK_INFO_ACK(47),
    /**
     * <pre>
     *格式化硬盘
     * </pre>
     *
     * <code>FORMAT_HARD_DISK = 48;</code>
     */
    FORMAT_HARD_DISK(48),
    /**
     * <code>FORMAT_HARD_DISK_ACK = 49;</code>
     */
    FORMAT_HARD_DISK_ACK(49),
    /**
     * <pre>
     *获取WAN设置
     * </pre>
     *
     * <code>REQUEST_WAN_SETTING = 50;</code>
     */
    REQUEST_WAN_SETTING(50),
    /**
     * <code>REQUEST_WAN_SETTING_ACK = 51;</code>
     */
    REQUEST_WAN_SETTING_ACK(51),
    /**
     * <pre>
     *设置WAN参数
     * </pre>
     *
     * <code>SET_WAN_SETTING = 52;</code>
     */
    SET_WAN_SETTING(52),
    /**
     * <code>SET_WAN_SETTING_ACK = 53;</code>
     */
    SET_WAN_SETTING_ACK(53),
    /**
     * <pre>
     *获取WI-FI设置
     * </pre>
     *
     * <code>REQUEST_MASTER_WIFI_INFO = 54;</code>
     */
    REQUEST_MASTER_WIFI_INFO(54),
    /**
     * <code>REQUEST_MASTER_WIFI_INFO_ACK = 55;</code>
     */
    REQUEST_MASTER_WIFI_INFO_ACK(55),
    /**
     * <pre>
     *设置WI-FI
     * </pre>
     *
     * <code>SET_MASTER_WIFI = 56;</code>
     */
    SET_MASTER_WIFI(56),
    /**
     * <code>SET_MASTER_WIFI_ACK = 57;</code>
     */
    SET_MASTER_WIFI_ACK(57),
    /**
     * <pre>
     *获取STB状态
     * </pre>
     *
     * <code>REQUEST_STB_STATUS = 58;</code>
     */
    REQUEST_STB_STATUS(58),
    /**
     * <code>REQUEST_STB_STATUS_ACK = 59;</code>
     */
    REQUEST_STB_STATUS_ACK(59),
    /**
     * <pre>
     *设置STB状态
     * </pre>
     *
     * <code>SET_STB_STATUS = 60;</code>
     */
    SET_STB_STATUS(60),
    /**
     * <code>SET_STB_STATUS_ACK = 61;</code>
     */
    SET_STB_STATUS_ACK(61),
    /**
     * <pre>
     *获取MAC黑名单列表
     * </pre>
     *
     * <code>REQUEST_MAC_FILTER_LIST = 62;</code>
     */
    REQUEST_MAC_FILTER_LIST(62),
    /**
     * <code>REQUEST_MAC_FILTER_LIST_ACK = 63;</code>
     */
    REQUEST_MAC_FILTER_LIST_ACK(63),
    /**
     * <pre>
     *添加新的MAC黑名单
     * </pre>
     *
     * <code>ADD_MAC_FILTER_DEVICE = 64;</code>
     */
    ADD_MAC_FILTER_DEVICE(64),
    /**
     * <code>ADD_MAC_FILTER_DEVICE_ACK = 65;</code>
     */
    ADD_MAC_FILTER_DEVICE_ACK(65),
    /**
     * <pre>
     *删除MAC黑名单
     * </pre>
     *
     * <code>DELETE_MAC_FILTER_DEVICE = 66;</code>
     */
    DELETE_MAC_FILTER_DEVICE(66),
    /**
     * <code>DLETE_MAC_FILTER_DEVICE_ACK = 67;</code>
     */
    DLETE_MAC_FILTER_DEVICE_ACK(67),
    /**
     * <pre>
     *获取限速设备列表
     * </pre>
     *
     * <code>REQUEST_LIMIT_SPEED_LIST = 68;</code>
     */
    REQUEST_LIMIT_SPEED_LIST(68),
    /**
     * <code>REQUEST_LIMIT_SPEED_LIST_ACK = 69;</code>
     */
    REQUEST_LIMIT_SPEED_LIST_ACK(69),
    /**
     * <pre>
     *添加新的限速设备
     * </pre>
     *
     * <code>ADD_LIMIT_SPEED_DEVICE = 70;</code>
     */
    ADD_LIMIT_SPEED_DEVICE(70),
    /**
     * <code>ADD_LIMIT_SPEED_DEVICE_ACK = 71;</code>
     */
    ADD_LIMIT_SPEED_DEVICE_ACK(71),
    /**
     * <pre>
     *删除限速设备
     * </pre>
     *
     * <code>DELETE_LIMIT_SPEED_DEVICE = 72;</code>
     */
    DELETE_LIMIT_SPEED_DEVICE(72),
    /**
     * <code>DLETE_LIMIT_SPEED_DEVICE_ACK = 73;</code>
     */
    DLETE_LIMIT_SPEED_DEVICE_ACK(73),
    /**
     * <pre>
     *获取AP"关于"信息
     * </pre>
     *
     * <code>REQUEST_AP_DEVICE_INFO = 74;</code>
     */
    REQUEST_AP_DEVICE_INFO(74),
    /**
     * <code>REQUEST_AP_DEVICE_INFO_ACK = 75;</code>
     */
    REQUEST_AP_DEVICE_INFO_ACK(75),
    /**
     * <pre>
     *重启AP
     * </pre>
     *
     * <code>REBOOT_AP = 76;</code>
     */
    REBOOT_AP(76),
    /**
     * <code>REBOOT_AP_ACK = 77;</code>
     */
    REBOOT_AP_ACK(77),
    /**
     * <pre>
     *获取网关密码
     * </pre>
     *
     * <code>REQUEST_SAMBA_PASSWORD = 78;</code>
     */
    REQUEST_SAMBA_PASSWORD(78),
    /**
     * <code>REQUEST_SAMBA_PASSWORD_ACK = 79;</code>
     */
    REQUEST_SAMBA_PASSWORD_ACK(79),
    /**
     * <pre>
     *获取AP的UUID
     * </pre>
     *
     * <code>REQUEST_AP_UUID = 80;</code>
     */
    REQUEST_AP_UUID(80),
    /**
     * <code>REQUEST_AP_UUID_ACK = 81;</code>
     */
    REQUEST_AP_UUID_ACK(81),
    /**
     * <pre>
     *通知AP有新的用户绑定了路由
     * </pre>
     *
     * <code>NOTIFY_USER_BOUND = 82;</code>
     */
    NOTIFY_USER_BOUND(82),
    /**
     * <code>NOTIFY_USER_BOUND_ACK = 83;</code>
     */
    NOTIFY_USER_BOUND_ACK(83),
    /**
     * <pre>
     *通知AP家庭共享有更新
     * </pre>
     *
     * <code>UPDATE_HOME_SHARE = 84;</code>
     */
    UPDATE_HOME_SHARE(84),
    /**
     * <code>UPDATE_HOME_SHARE_ACK = 85;</code>
     */
    UPDATE_HOME_SHARE_ACK(85),
    /**
     * <pre>
     *获取是否打开自动上传设置
     * </pre>
     *
     * <code>REQUEST_HOME_SHARE_MODE = 86;</code>
     */
    REQUEST_HOME_SHARE_MODE(86),
    /**
     * <code>REQUEST_HOME_SHARE_MODE_ACK = 87;</code>
     */
    REQUEST_HOME_SHARE_MODE_ACK(87),
    /**
     * <pre>
     *设置是否打开自动上传设置
     * </pre>
     *
     * <code>SET_HOME_SHARE_MODE = 88;</code>
     */
    SET_HOME_SHARE_MODE(88),
    /**
     * <code>SET_HOME_SHARE_MODE_ACK = 89;</code>
     */
    SET_HOME_SHARE_MODE_ACK(89),
    /**
     * <pre>
     *获取被授权列表
     * </pre>
     *
     * <code>REQUEST_AUTHORIZATION_LIST = 90;</code>
     */
    REQUEST_AUTHORIZATION_LIST(90),
    /**
     * <code>REQUEST_AUTHORIZATION_LIST_ACK = 91;</code>
     */
    REQUEST_AUTHORIZATION_LIST_ACK(91),
    /**
     * <pre>
     *设置授权列表
     * </pre>
     *
     * <code>SET_AUTHORIZATION_LIST = 92;</code>
     */
    SET_AUTHORIZATION_LIST(92),
    /**
     * <code>SET_AUTHORIZATION_LIST_ACK = 93;</code>
     */
    SET_AUTHORIZATION_LIST_ACK(93),
    /**
     * <pre>
     *通知AP定时留言有更新
     * </pre>
     *
     * <code>UPDATE_ALARM_MESSAGE = 94;</code>
     */
    UPDATE_ALARM_MESSAGE(94),
    /**
     * <code>UPDATE_ALARM_MESSAGE_ACK = 95;</code>
     */
    UPDATE_ALARM_MESSAGE_ACK(95),
    /**
     * <pre>
     *获取智能插座列表
     * </pre>
     *
     * <code>REQUEST_SMART_SOCKET_DEVICES = 96;</code>
     */
    REQUEST_SMART_SOCKET_DEVICES(96),
    /**
     * <code>REQUEST_SMART_SOCKET_DEVICES_ACK = 97;</code>
     */
    REQUEST_SMART_SOCKET_DEVICES_ACK(97),
    /**
     * <pre>
     *增加智能插座设备
     * </pre>
     *
     * <code>ADD_SMART_SOCKET_DEVICE = 98;</code>
     */
    ADD_SMART_SOCKET_DEVICE(98),
    /**
     * <code>ADD_SMART_SOCKET_DEVICE_ACK = 99;</code>
     */
    ADD_SMART_SOCKET_DEVICE_ACK(99),
    /**
     * <pre>
     *删除智能插座设备
     * </pre>
     *
     * <code>DELETE_SMART_SOCKET_DEVICE = 100;</code>
     */
    DELETE_SMART_SOCKET_DEVICE(100),
    /**
     * <code>DELETE_SMART_SOCKET_DEVICE_ACK = 101;</code>
     */
    DELETE_SMART_SOCKET_DEVICE_ACK(101),
    /**
     * <pre>
     *修改智能插座设备
     * </pre>
     *
     * <code>MODIFY_SMART_SOCKET_DEVICE = 102;</code>
     */
    MODIFY_SMART_SOCKET_DEVICE(102),
    /**
     * <code>MODIFY_SMART_SOCKET_DEVICE_ACK = 103;</code>
     */
    MODIFY_SMART_SOCKET_DEVICE_ACK(103),
    /**
     * <pre>
     *推送类消息
     * </pre>
     *
     * <code>NOTIFICATION_HARD_DISK_FORMAT_PROGRESS = 1000;</code>
     */
    NOTIFICATION_HARD_DISK_FORMAT_PROGRESS(1000),
    /**
     * <pre>
     *机顶盒状态变化推送
     * </pre>
     *
     * <code>NOTIFICATION_STB_STATUS_CHANGED = 1001;</code>
     */
    NOTIFICATION_STB_STATUS_CHANGED(1001),
    /**
     * <pre>
     *AP状态变更推送
     * </pre>
     *
     * <code>NOTIFICATION_AP_STATUS_CHANGED = 1002;</code>
     */
    NOTIFICATION_AP_STATUS_CHANGED(1002),
    /**
     * <pre>
     *家庭共享更新推送
     * </pre>
     *
     * <code>NOTIFICATION_HOME_SHARE_UPDATE = 1003;</code>
     */
    NOTIFICATION_HOME_SHARE_UPDATE(1003),
    /**
     * <pre>
     *定时留言更新推送
     * </pre>
     *
     * <code>NOTIFICATION_ALARM_MESSAGE_UPDATE = 1004;</code>
     */
    NOTIFICATION_ALARM_MESSAGE_UPDATE(1004),
    /**
     * <pre>
     *重启Wi-Fi推送
     * </pre>
     *
     * <code>NOTIFICATION_RESTART_WIFI = 1005;</code>
     */
    NOTIFICATION_RESTART_WIFI(1005),
    /**
     * <pre>
     *心跳
     * </pre>
     *
     * <code>KEEP_ALIVE = 2000;</code>
     */
    KEEP_ALIVE(2000),
    /**
     * <code>KEEP_ALIVE_ACK = 2001;</code>
     */
    KEEP_ALIVE_ACK(2001),
    ;

    /**
     * <pre>
     *登入
     * </pre>
     *
     * <code>LOGIN = 0;</code>
     */
    public static final int LOGIN_VALUE = 0;
    /**
     * <code>LOGIN_ACK = 1;</code>
     */
    public static final int LOGIN_ACK_VALUE = 1;
    /**
     * <pre>
     *登出(无实质作用, iOS平台需要, AP可不做特殊处理)
     * </pre>
     *
     * <code>LOGOUT = 2;</code>
     */
    public static final int LOGOUT_VALUE = 2;
    /**
     * <code>LOGOUT_ACK = 3;</code>
     */
    public static final int LOGOUT_ACK_VALUE = 3;
    /**
     * <pre>
     *检测是否绑定
     * </pre>
     *
     * <code>CHECK_USER_BOUND = 4;</code>
     */
    public static final int CHECK_USER_BOUND_VALUE = 4;
    /**
     * <code>CHECK_USER_BOUND_ACK = 5;</code>
     */
    public static final int CHECK_USER_BOUND_ACK_VALUE = 5;
    /**
     * <pre>
     *获取绑定列表
     * </pre>
     *
     * <code>GET_BOUND_LIST = 6;</code>
     */
    public static final int GET_BOUND_LIST_VALUE = 6;
    /**
     * <code>GET_BOUND_LIST_ACK = 7;</code>
     */
    public static final int GET_BOUND_LIST_ACK_VALUE = 7;
    /**
     * <pre>
     *获取主机列表
     * </pre>
     *
     * <code>REQUEST_HOST_LIST = 8;</code>
     */
    public static final int REQUEST_HOST_LIST_VALUE = 8;
    /**
     * <code>REQUEST_HOST_LIST_ACK = 9;</code>
     */
    public static final int REQUEST_HOST_LIST_ACK_VALUE = 9;
    /**
     * <pre>
     *获取AP运行信息
     * </pre>
     *
     * <code>REQUEST_SYSTEM_INFO = 10;</code>
     */
    public static final int REQUEST_SYSTEM_INFO_VALUE = 10;
    /**
     * <code>REQUEST_SYSTEM_INFO_ACK = 11;</code>
     */
    public static final int REQUEST_SYSTEM_INFO_ACK_VALUE = 11;
    /**
     * <pre>
     *获取WI-FI模式
     * </pre>
     *
     * <code>REQUEST_WIFI_MODE = 12;</code>
     */
    public static final int REQUEST_WIFI_MODE_VALUE = 12;
    /**
     * <code>REQUEST_WIFI_MODE_ACK = 13;</code>
     */
    public static final int REQUEST_WIFI_MODE_ACK_VALUE = 13;
    /**
     * <pre>
     *设置新的WI-FI模式
     * </pre>
     *
     * <code>SET_WIFI_MODE = 14;</code>
     */
    public static final int SET_WIFI_MODE_VALUE = 14;
    /**
     * <code>SET_WIFI_MODE_ACK = 15;</code>
     */
    public static final int SET_WIFI_MODE_ACK_VALUE = 15;
    /**
     * <pre>
     *获取客人WI-FI设置
     * </pre>
     *
     * <code>REQUEST_GUEST_WIFI_INFO = 16;</code>
     */
    public static final int REQUEST_GUEST_WIFI_INFO_VALUE = 16;
    /**
     * <code>REQUEST_GUEST_WIFI_INFO_ACK = 17;</code>
     */
    public static final int REQUEST_GUEST_WIFI_INFO_ACK_VALUE = 17;
    /**
     * <pre>
     *设置客人WI-FI
     * </pre>
     *
     * <code>SET_GUEST_WIFI = 18;</code>
     */
    public static final int SET_GUEST_WIFI_VALUE = 18;
    /**
     * <code>SET_GUEST_WIFI_ACK = 19;</code>
     */
    public static final int SET_GUEST_WIFI_ACK_VALUE = 19;
    /**
     * <pre>
     *获取被控制的设备
     * </pre>
     *
     * <code>REQUEST_PARENT_CONTROL_DEVICE = 20;</code>
     */
    public static final int REQUEST_PARENT_CONTROL_DEVICE_VALUE = 20;
    /**
     * <code>REQUEST_PARENT_CONTROL_DEVICE_ACK = 21;</code>
     */
    public static final int REQUEST_PARENT_CONTROL_DEVICE_ACK_VALUE = 21;
    /**
     * <pre>
     *查询家长控制任务
     * </pre>
     *
     * <code>REQUEST_PARENT_CONTROL_TASK = 22;</code>
     */
    public static final int REQUEST_PARENT_CONTROL_TASK_VALUE = 22;
    /**
     * <code>REQUEST_PARENT_CONTROL_TASK_ACK = 23;</code>
     */
    public static final int REQUEST_PARENT_CONTROL_TASK_ACK_VALUE = 23;
    /**
     * <pre>
     *添加家长控制任务
     * </pre>
     *
     * <code>ADD_PARENT_CONTROL_TASK = 24;</code>
     */
    public static final int ADD_PARENT_CONTROL_TASK_VALUE = 24;
    /**
     * <code>ADD_PARENT_CONTROL_TASK_ACK = 25;</code>
     */
    public static final int ADD_PARENT_CONTROL_TASK_ACK_VALUE = 25;
    /**
     * <pre>
     *删除家长控制任务
     * </pre>
     *
     * <code>DELETE_PARENT_CONTROL_TASK = 26;</code>
     */
    public static final int DELETE_PARENT_CONTROL_TASK_VALUE = 26;
    /**
     * <code>DELETE_PARENT_CONTROL_TASK_ACK = 27;</code>
     */
    public static final int DELETE_PARENT_CONTROL_TASK_ACK_VALUE = 27;
    /**
     * <pre>
     *修改家长控制任务
     * </pre>
     *
     * <code>MODIFY_PARENT_CONTROL_TASK = 28;</code>
     */
    public static final int MODIFY_PARENT_CONTROL_TASK_VALUE = 28;
    /**
     * <code>MODIFY_PARENT_CONTROL_TASK_ACK = 29;</code>
     */
    public static final int MODIFY_PARENT_CONTROL_TASK_ACK_VALUE = 29;
    /**
     * <pre>
     *检测是否连上互联网
     * </pre>
     *
     * <code>CHECK_INTERNET_REACHABLE = 30;</code>
     */
    public static final int CHECK_INTERNET_REACHABLE_VALUE = 30;
    /**
     * <code>CHECK_INTERNET_REACHABLE_ACK = 31;</code>
     */
    public static final int CHECK_INTERNET_REACHABLE_ACK_VALUE = 31;
    /**
     * <pre>
     *检测防火墙是否打开
     * </pre>
     *
     * <code>CHECK_FIREWALL_STATUS = 32;</code>
     */
    public static final int CHECK_FIREWALL_STATUS_VALUE = 32;
    /**
     * <code>CHECK_FIREWALL_STATUS_ACK = 33;</code>
     */
    public static final int CHECK_FIREWALL_STATUS_ACK_VALUE = 33;
    /**
     * <pre>
     *打开防火墙
     * </pre>
     *
     * <code>OPEN_FIREWALL_STATUS = 34;</code>
     */
    public static final int OPEN_FIREWALL_STATUS_VALUE = 34;
    /**
     * <code>OPEN_FIREWALL_STATUS_ACK = 35;</code>
     */
    public static final int OPEN_FIREWALL_STATUS_ACK_VALUE = 35;
    /**
     * <pre>
     *获取超级管理员信息
     * </pre>
     *
     * <code>REQUEST_SUPER_ADMIN_INFO = 36;</code>
     */
    public static final int REQUEST_SUPER_ADMIN_INFO_VALUE = 36;
    /**
     * <code>REQUEST_SUPER_ADMIN_INFO_ACK = 37;</code>
     */
    public static final int REQUEST_SUPER_ADMIN_INFO_ACK_VALUE = 37;
    /**
     * <pre>
     *验证超级管理员账号
     * </pre>
     *
     * <code>VERIFY_SUPER_ADMIN = 38;</code>
     */
    public static final int VERIFY_SUPER_ADMIN_VALUE = 38;
    /**
     * <code>VERIFY_SUPER_ADMIN_ACK = 39;</code>
     */
    public static final int VERIFY_SUPER_ADMIN_ACK_VALUE = 39;
    /**
     * <pre>
     *设置超级管理员账号
     * </pre>
     *
     * <code>SET_SUPER_ADMIN = 40;</code>
     */
    public static final int SET_SUPER_ADMIN_VALUE = 40;
    /**
     * <code>SET_SUPER_ADMIN_ACK = 41;</code>
     */
    public static final int SET_SUPER_ADMIN_ACK_VALUE = 41;
    /**
     * <pre>
     *获取智能带宽模式
     * </pre>
     *
     * <code>REQUEST_SMART_BANDWIDTH = 42;</code>
     */
    public static final int REQUEST_SMART_BANDWIDTH_VALUE = 42;
    /**
     * <code>REQUEST_SMART_BANDWIDTH_ACK = 43;</code>
     */
    public static final int REQUEST_SMART_BANDWIDTH_ACK_VALUE = 43;
    /**
     * <pre>
     *设置智能带宽模式
     * </pre>
     *
     * <code>SET_SMART_BANDWIDTH = 44;</code>
     */
    public static final int SET_SMART_BANDWIDTH_VALUE = 44;
    /**
     * <code>SET_SMART_BANDWIDTH_ACK = 45;</code>
     */
    public static final int SET_SMART_BANDWIDTH_ACK_VALUE = 45;
    /**
     * <pre>
     *获取硬盘状态
     * </pre>
     *
     * <code>REQUEST_HARD_DISK_INFO = 46;</code>
     */
    public static final int REQUEST_HARD_DISK_INFO_VALUE = 46;
    /**
     * <code>REQUEST_HARD_DISK_INFO_ACK = 47;</code>
     */
    public static final int REQUEST_HARD_DISK_INFO_ACK_VALUE = 47;
    /**
     * <pre>
     *格式化硬盘
     * </pre>
     *
     * <code>FORMAT_HARD_DISK = 48;</code>
     */
    public static final int FORMAT_HARD_DISK_VALUE = 48;
    /**
     * <code>FORMAT_HARD_DISK_ACK = 49;</code>
     */
    public static final int FORMAT_HARD_DISK_ACK_VALUE = 49;
    /**
     * <pre>
     *获取WAN设置
     * </pre>
     *
     * <code>REQUEST_WAN_SETTING = 50;</code>
     */
    public static final int REQUEST_WAN_SETTING_VALUE = 50;
    /**
     * <code>REQUEST_WAN_SETTING_ACK = 51;</code>
     */
    public static final int REQUEST_WAN_SETTING_ACK_VALUE = 51;
    /**
     * <pre>
     *设置WAN参数
     * </pre>
     *
     * <code>SET_WAN_SETTING = 52;</code>
     */
    public static final int SET_WAN_SETTING_VALUE = 52;
    /**
     * <code>SET_WAN_SETTING_ACK = 53;</code>
     */
    public static final int SET_WAN_SETTING_ACK_VALUE = 53;
    /**
     * <pre>
     *获取WI-FI设置
     * </pre>
     *
     * <code>REQUEST_MASTER_WIFI_INFO = 54;</code>
     */
    public static final int REQUEST_MASTER_WIFI_INFO_VALUE = 54;
    /**
     * <code>REQUEST_MASTER_WIFI_INFO_ACK = 55;</code>
     */
    public static final int REQUEST_MASTER_WIFI_INFO_ACK_VALUE = 55;
    /**
     * <pre>
     *设置WI-FI
     * </pre>
     *
     * <code>SET_MASTER_WIFI = 56;</code>
     */
    public static final int SET_MASTER_WIFI_VALUE = 56;
    /**
     * <code>SET_MASTER_WIFI_ACK = 57;</code>
     */
    public static final int SET_MASTER_WIFI_ACK_VALUE = 57;
    /**
     * <pre>
     *获取STB状态
     * </pre>
     *
     * <code>REQUEST_STB_STATUS = 58;</code>
     */
    public static final int REQUEST_STB_STATUS_VALUE = 58;
    /**
     * <code>REQUEST_STB_STATUS_ACK = 59;</code>
     */
    public static final int REQUEST_STB_STATUS_ACK_VALUE = 59;
    /**
     * <pre>
     *设置STB状态
     * </pre>
     *
     * <code>SET_STB_STATUS = 60;</code>
     */
    public static final int SET_STB_STATUS_VALUE = 60;
    /**
     * <code>SET_STB_STATUS_ACK = 61;</code>
     */
    public static final int SET_STB_STATUS_ACK_VALUE = 61;
    /**
     * <pre>
     *获取MAC黑名单列表
     * </pre>
     *
     * <code>REQUEST_MAC_FILTER_LIST = 62;</code>
     */
    public static final int REQUEST_MAC_FILTER_LIST_VALUE = 62;
    /**
     * <code>REQUEST_MAC_FILTER_LIST_ACK = 63;</code>
     */
    public static final int REQUEST_MAC_FILTER_LIST_ACK_VALUE = 63;
    /**
     * <pre>
     *添加新的MAC黑名单
     * </pre>
     *
     * <code>ADD_MAC_FILTER_DEVICE = 64;</code>
     */
    public static final int ADD_MAC_FILTER_DEVICE_VALUE = 64;
    /**
     * <code>ADD_MAC_FILTER_DEVICE_ACK = 65;</code>
     */
    public static final int ADD_MAC_FILTER_DEVICE_ACK_VALUE = 65;
    /**
     * <pre>
     *删除MAC黑名单
     * </pre>
     *
     * <code>DELETE_MAC_FILTER_DEVICE = 66;</code>
     */
    public static final int DELETE_MAC_FILTER_DEVICE_VALUE = 66;
    /**
     * <code>DLETE_MAC_FILTER_DEVICE_ACK = 67;</code>
     */
    public static final int DLETE_MAC_FILTER_DEVICE_ACK_VALUE = 67;
    /**
     * <pre>
     *获取限速设备列表
     * </pre>
     *
     * <code>REQUEST_LIMIT_SPEED_LIST = 68;</code>
     */
    public static final int REQUEST_LIMIT_SPEED_LIST_VALUE = 68;
    /**
     * <code>REQUEST_LIMIT_SPEED_LIST_ACK = 69;</code>
     */
    public static final int REQUEST_LIMIT_SPEED_LIST_ACK_VALUE = 69;
    /**
     * <pre>
     *添加新的限速设备
     * </pre>
     *
     * <code>ADD_LIMIT_SPEED_DEVICE = 70;</code>
     */
    public static final int ADD_LIMIT_SPEED_DEVICE_VALUE = 70;
    /**
     * <code>ADD_LIMIT_SPEED_DEVICE_ACK = 71;</code>
     */
    public static final int ADD_LIMIT_SPEED_DEVICE_ACK_VALUE = 71;
    /**
     * <pre>
     *删除限速设备
     * </pre>
     *
     * <code>DELETE_LIMIT_SPEED_DEVICE = 72;</code>
     */
    public static final int DELETE_LIMIT_SPEED_DEVICE_VALUE = 72;
    /**
     * <code>DLETE_LIMIT_SPEED_DEVICE_ACK = 73;</code>
     */
    public static final int DLETE_LIMIT_SPEED_DEVICE_ACK_VALUE = 73;
    /**
     * <pre>
     *获取AP"关于"信息
     * </pre>
     *
     * <code>REQUEST_AP_DEVICE_INFO = 74;</code>
     */
    public static final int REQUEST_AP_DEVICE_INFO_VALUE = 74;
    /**
     * <code>REQUEST_AP_DEVICE_INFO_ACK = 75;</code>
     */
    public static final int REQUEST_AP_DEVICE_INFO_ACK_VALUE = 75;
    /**
     * <pre>
     *重启AP
     * </pre>
     *
     * <code>REBOOT_AP = 76;</code>
     */
    public static final int REBOOT_AP_VALUE = 76;
    /**
     * <code>REBOOT_AP_ACK = 77;</code>
     */
    public static final int REBOOT_AP_ACK_VALUE = 77;
    /**
     * <pre>
     *获取网关密码
     * </pre>
     *
     * <code>REQUEST_SAMBA_PASSWORD = 78;</code>
     */
    public static final int REQUEST_SAMBA_PASSWORD_VALUE = 78;
    /**
     * <code>REQUEST_SAMBA_PASSWORD_ACK = 79;</code>
     */
    public static final int REQUEST_SAMBA_PASSWORD_ACK_VALUE = 79;
    /**
     * <pre>
     *获取AP的UUID
     * </pre>
     *
     * <code>REQUEST_AP_UUID = 80;</code>
     */
    public static final int REQUEST_AP_UUID_VALUE = 80;
    /**
     * <code>REQUEST_AP_UUID_ACK = 81;</code>
     */
    public static final int REQUEST_AP_UUID_ACK_VALUE = 81;
    /**
     * <pre>
     *通知AP有新的用户绑定了路由
     * </pre>
     *
     * <code>NOTIFY_USER_BOUND = 82;</code>
     */
    public static final int NOTIFY_USER_BOUND_VALUE = 82;
    /**
     * <code>NOTIFY_USER_BOUND_ACK = 83;</code>
     */
    public static final int NOTIFY_USER_BOUND_ACK_VALUE = 83;
    /**
     * <pre>
     *通知AP家庭共享有更新
     * </pre>
     *
     * <code>UPDATE_HOME_SHARE = 84;</code>
     */
    public static final int UPDATE_HOME_SHARE_VALUE = 84;
    /**
     * <code>UPDATE_HOME_SHARE_ACK = 85;</code>
     */
    public static final int UPDATE_HOME_SHARE_ACK_VALUE = 85;
    /**
     * <pre>
     *获取是否打开自动上传设置
     * </pre>
     *
     * <code>REQUEST_HOME_SHARE_MODE = 86;</code>
     */
    public static final int REQUEST_HOME_SHARE_MODE_VALUE = 86;
    /**
     * <code>REQUEST_HOME_SHARE_MODE_ACK = 87;</code>
     */
    public static final int REQUEST_HOME_SHARE_MODE_ACK_VALUE = 87;
    /**
     * <pre>
     *设置是否打开自动上传设置
     * </pre>
     *
     * <code>SET_HOME_SHARE_MODE = 88;</code>
     */
    public static final int SET_HOME_SHARE_MODE_VALUE = 88;
    /**
     * <code>SET_HOME_SHARE_MODE_ACK = 89;</code>
     */
    public static final int SET_HOME_SHARE_MODE_ACK_VALUE = 89;
    /**
     * <pre>
     *获取被授权列表
     * </pre>
     *
     * <code>REQUEST_AUTHORIZATION_LIST = 90;</code>
     */
    public static final int REQUEST_AUTHORIZATION_LIST_VALUE = 90;
    /**
     * <code>REQUEST_AUTHORIZATION_LIST_ACK = 91;</code>
     */
    public static final int REQUEST_AUTHORIZATION_LIST_ACK_VALUE = 91;
    /**
     * <pre>
     *设置授权列表
     * </pre>
     *
     * <code>SET_AUTHORIZATION_LIST = 92;</code>
     */
    public static final int SET_AUTHORIZATION_LIST_VALUE = 92;
    /**
     * <code>SET_AUTHORIZATION_LIST_ACK = 93;</code>
     */
    public static final int SET_AUTHORIZATION_LIST_ACK_VALUE = 93;
    /**
     * <pre>
     *通知AP定时留言有更新
     * </pre>
     *
     * <code>UPDATE_ALARM_MESSAGE = 94;</code>
     */
    public static final int UPDATE_ALARM_MESSAGE_VALUE = 94;
    /**
     * <code>UPDATE_ALARM_MESSAGE_ACK = 95;</code>
     */
    public static final int UPDATE_ALARM_MESSAGE_ACK_VALUE = 95;
    /**
     * <pre>
     *获取智能插座列表
     * </pre>
     *
     * <code>REQUEST_SMART_SOCKET_DEVICES = 96;</code>
     */
    public static final int REQUEST_SMART_SOCKET_DEVICES_VALUE = 96;
    /**
     * <code>REQUEST_SMART_SOCKET_DEVICES_ACK = 97;</code>
     */
    public static final int REQUEST_SMART_SOCKET_DEVICES_ACK_VALUE = 97;
    /**
     * <pre>
     *增加智能插座设备
     * </pre>
     *
     * <code>ADD_SMART_SOCKET_DEVICE = 98;</code>
     */
    public static final int ADD_SMART_SOCKET_DEVICE_VALUE = 98;
    /**
     * <code>ADD_SMART_SOCKET_DEVICE_ACK = 99;</code>
     */
    public static final int ADD_SMART_SOCKET_DEVICE_ACK_VALUE = 99;
    /**
     * <pre>
     *删除智能插座设备
     * </pre>
     *
     * <code>DELETE_SMART_SOCKET_DEVICE = 100;</code>
     */
    public static final int DELETE_SMART_SOCKET_DEVICE_VALUE = 100;
    /**
     * <code>DELETE_SMART_SOCKET_DEVICE_ACK = 101;</code>
     */
    public static final int DELETE_SMART_SOCKET_DEVICE_ACK_VALUE = 101;
    /**
     * <pre>
     *修改智能插座设备
     * </pre>
     *
     * <code>MODIFY_SMART_SOCKET_DEVICE = 102;</code>
     */
    public static final int MODIFY_SMART_SOCKET_DEVICE_VALUE = 102;
    /**
     * <code>MODIFY_SMART_SOCKET_DEVICE_ACK = 103;</code>
     */
    public static final int MODIFY_SMART_SOCKET_DEVICE_ACK_VALUE = 103;
    /**
     * <pre>
     *推送类消息
     * </pre>
     *
     * <code>NOTIFICATION_HARD_DISK_FORMAT_PROGRESS = 1000;</code>
     */
    public static final int NOTIFICATION_HARD_DISK_FORMAT_PROGRESS_VALUE = 1000;
    /**
     * <pre>
     *机顶盒状态变化推送
     * </pre>
     *
     * <code>NOTIFICATION_STB_STATUS_CHANGED = 1001;</code>
     */
    public static final int NOTIFICATION_STB_STATUS_CHANGED_VALUE = 1001;
    /**
     * <pre>
     *AP状态变更推送
     * </pre>
     *
     * <code>NOTIFICATION_AP_STATUS_CHANGED = 1002;</code>
     */
    public static final int NOTIFICATION_AP_STATUS_CHANGED_VALUE = 1002;
    /**
     * <pre>
     *家庭共享更新推送
     * </pre>
     *
     * <code>NOTIFICATION_HOME_SHARE_UPDATE = 1003;</code>
     */
    public static final int NOTIFICATION_HOME_SHARE_UPDATE_VALUE = 1003;
    /**
     * <pre>
     *定时留言更新推送
     * </pre>
     *
     * <code>NOTIFICATION_ALARM_MESSAGE_UPDATE = 1004;</code>
     */
    public static final int NOTIFICATION_ALARM_MESSAGE_UPDATE_VALUE = 1004;
    /**
     * <pre>
     *重启Wi-Fi推送
     * </pre>
     *
     * <code>NOTIFICATION_RESTART_WIFI = 1005;</code>
     */
    public static final int NOTIFICATION_RESTART_WIFI_VALUE = 1005;
    /**
     * <pre>
     *心跳
     * </pre>
     *
     * <code>KEEP_ALIVE = 2000;</code>
     */
    public static final int KEEP_ALIVE_VALUE = 2000;
    /**
     * <code>KEEP_ALIVE_ACK = 2001;</code>
     */
    public static final int KEEP_ALIVE_ACK_VALUE = 2001;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MessageType valueOf(int value) {
      return forNumber(value);
    }

    public static MessageType forNumber(int value) {
      switch (value) {
        case 0: return LOGIN;
        case 1: return LOGIN_ACK;
        case 2: return LOGOUT;
        case 3: return LOGOUT_ACK;
        case 4: return CHECK_USER_BOUND;
        case 5: return CHECK_USER_BOUND_ACK;
        case 6: return GET_BOUND_LIST;
        case 7: return GET_BOUND_LIST_ACK;
        case 8: return REQUEST_HOST_LIST;
        case 9: return REQUEST_HOST_LIST_ACK;
        case 10: return REQUEST_SYSTEM_INFO;
        case 11: return REQUEST_SYSTEM_INFO_ACK;
        case 12: return REQUEST_WIFI_MODE;
        case 13: return REQUEST_WIFI_MODE_ACK;
        case 14: return SET_WIFI_MODE;
        case 15: return SET_WIFI_MODE_ACK;
        case 16: return REQUEST_GUEST_WIFI_INFO;
        case 17: return REQUEST_GUEST_WIFI_INFO_ACK;
        case 18: return SET_GUEST_WIFI;
        case 19: return SET_GUEST_WIFI_ACK;
        case 20: return REQUEST_PARENT_CONTROL_DEVICE;
        case 21: return REQUEST_PARENT_CONTROL_DEVICE_ACK;
        case 22: return REQUEST_PARENT_CONTROL_TASK;
        case 23: return REQUEST_PARENT_CONTROL_TASK_ACK;
        case 24: return ADD_PARENT_CONTROL_TASK;
        case 25: return ADD_PARENT_CONTROL_TASK_ACK;
        case 26: return DELETE_PARENT_CONTROL_TASK;
        case 27: return DELETE_PARENT_CONTROL_TASK_ACK;
        case 28: return MODIFY_PARENT_CONTROL_TASK;
        case 29: return MODIFY_PARENT_CONTROL_TASK_ACK;
        case 30: return CHECK_INTERNET_REACHABLE;
        case 31: return CHECK_INTERNET_REACHABLE_ACK;
        case 32: return CHECK_FIREWALL_STATUS;
        case 33: return CHECK_FIREWALL_STATUS_ACK;
        case 34: return OPEN_FIREWALL_STATUS;
        case 35: return OPEN_FIREWALL_STATUS_ACK;
        case 36: return REQUEST_SUPER_ADMIN_INFO;
        case 37: return REQUEST_SUPER_ADMIN_INFO_ACK;
        case 38: return VERIFY_SUPER_ADMIN;
        case 39: return VERIFY_SUPER_ADMIN_ACK;
        case 40: return SET_SUPER_ADMIN;
        case 41: return SET_SUPER_ADMIN_ACK;
        case 42: return REQUEST_SMART_BANDWIDTH;
        case 43: return REQUEST_SMART_BANDWIDTH_ACK;
        case 44: return SET_SMART_BANDWIDTH;
        case 45: return SET_SMART_BANDWIDTH_ACK;
        case 46: return REQUEST_HARD_DISK_INFO;
        case 47: return REQUEST_HARD_DISK_INFO_ACK;
        case 48: return FORMAT_HARD_DISK;
        case 49: return FORMAT_HARD_DISK_ACK;
        case 50: return REQUEST_WAN_SETTING;
        case 51: return REQUEST_WAN_SETTING_ACK;
        case 52: return SET_WAN_SETTING;
        case 53: return SET_WAN_SETTING_ACK;
        case 54: return REQUEST_MASTER_WIFI_INFO;
        case 55: return REQUEST_MASTER_WIFI_INFO_ACK;
        case 56: return SET_MASTER_WIFI;
        case 57: return SET_MASTER_WIFI_ACK;
        case 58: return REQUEST_STB_STATUS;
        case 59: return REQUEST_STB_STATUS_ACK;
        case 60: return SET_STB_STATUS;
        case 61: return SET_STB_STATUS_ACK;
        case 62: return REQUEST_MAC_FILTER_LIST;
        case 63: return REQUEST_MAC_FILTER_LIST_ACK;
        case 64: return ADD_MAC_FILTER_DEVICE;
        case 65: return ADD_MAC_FILTER_DEVICE_ACK;
        case 66: return DELETE_MAC_FILTER_DEVICE;
        case 67: return DLETE_MAC_FILTER_DEVICE_ACK;
        case 68: return REQUEST_LIMIT_SPEED_LIST;
        case 69: return REQUEST_LIMIT_SPEED_LIST_ACK;
        case 70: return ADD_LIMIT_SPEED_DEVICE;
        case 71: return ADD_LIMIT_SPEED_DEVICE_ACK;
        case 72: return DELETE_LIMIT_SPEED_DEVICE;
        case 73: return DLETE_LIMIT_SPEED_DEVICE_ACK;
        case 74: return REQUEST_AP_DEVICE_INFO;
        case 75: return REQUEST_AP_DEVICE_INFO_ACK;
        case 76: return REBOOT_AP;
        case 77: return REBOOT_AP_ACK;
        case 78: return REQUEST_SAMBA_PASSWORD;
        case 79: return REQUEST_SAMBA_PASSWORD_ACK;
        case 80: return REQUEST_AP_UUID;
        case 81: return REQUEST_AP_UUID_ACK;
        case 82: return NOTIFY_USER_BOUND;
        case 83: return NOTIFY_USER_BOUND_ACK;
        case 84: return UPDATE_HOME_SHARE;
        case 85: return UPDATE_HOME_SHARE_ACK;
        case 86: return REQUEST_HOME_SHARE_MODE;
        case 87: return REQUEST_HOME_SHARE_MODE_ACK;
        case 88: return SET_HOME_SHARE_MODE;
        case 89: return SET_HOME_SHARE_MODE_ACK;
        case 90: return REQUEST_AUTHORIZATION_LIST;
        case 91: return REQUEST_AUTHORIZATION_LIST_ACK;
        case 92: return SET_AUTHORIZATION_LIST;
        case 93: return SET_AUTHORIZATION_LIST_ACK;
        case 94: return UPDATE_ALARM_MESSAGE;
        case 95: return UPDATE_ALARM_MESSAGE_ACK;
        case 96: return REQUEST_SMART_SOCKET_DEVICES;
        case 97: return REQUEST_SMART_SOCKET_DEVICES_ACK;
        case 98: return ADD_SMART_SOCKET_DEVICE;
        case 99: return ADD_SMART_SOCKET_DEVICE_ACK;
        case 100: return DELETE_SMART_SOCKET_DEVICE;
        case 101: return DELETE_SMART_SOCKET_DEVICE_ACK;
        case 102: return MODIFY_SMART_SOCKET_DEVICE;
        case 103: return MODIFY_SMART_SOCKET_DEVICE_ACK;
        case 1000: return NOTIFICATION_HARD_DISK_FORMAT_PROGRESS;
        case 1001: return NOTIFICATION_STB_STATUS_CHANGED;
        case 1002: return NOTIFICATION_AP_STATUS_CHANGED;
        case 1003: return NOTIFICATION_HOME_SHARE_UPDATE;
        case 1004: return NOTIFICATION_ALARM_MESSAGE_UPDATE;
        case 1005: return NOTIFICATION_RESTART_WIFI;
        case 2000: return KEEP_ALIVE;
        case 2001: return KEEP_ALIVE_ACK;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MessageType>
    internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
            MessageType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<MessageType>() {
              public MessageType findValueByNumber(int number) {
                return MessageType.forNumber(number);
              }
            };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
    getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
    getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
    getDescriptor() {
      return com.hanschen.multidex.bean.TestBean7.getDescriptor().getEnumTypes().get(0);
    }

    private static final MessageType[] VALUES = values();

    public static MessageType valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
                "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MessageType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.hanschen.multidex.bean.MessageType)
  }

  /**
   * Protobuf enum {@code com.hanschen.multidex.bean.StreamTo}
   */
  public enum StreamTo
          implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PHONE_TO_SERVER = 0;</code>
     */
    PHONE_TO_SERVER(0),
    /**
     * <code>PHONE_TO_AP = 1;</code>
     */
    PHONE_TO_AP(1),
    /**
     * <code>AP_TO_SERVER = 2;</code>
     */
    AP_TO_SERVER(2),
    /**
     * <code>AP_TO_PHONE = 3;</code>
     */
    AP_TO_PHONE(3),
    ;

    /**
     * <code>PHONE_TO_SERVER = 0;</code>
     */
    public static final int PHONE_TO_SERVER_VALUE = 0;
    /**
     * <code>PHONE_TO_AP = 1;</code>
     */
    public static final int PHONE_TO_AP_VALUE = 1;
    /**
     * <code>AP_TO_SERVER = 2;</code>
     */
    public static final int AP_TO_SERVER_VALUE = 2;
    /**
     * <code>AP_TO_PHONE = 3;</code>
     */
    public static final int AP_TO_PHONE_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static StreamTo valueOf(int value) {
      return forNumber(value);
    }

    public static StreamTo forNumber(int value) {
      switch (value) {
        case 0: return PHONE_TO_SERVER;
        case 1: return PHONE_TO_AP;
        case 2: return AP_TO_SERVER;
        case 3: return AP_TO_PHONE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<StreamTo>
    internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
            StreamTo> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<StreamTo>() {
              public StreamTo findValueByNumber(int number) {
                return StreamTo.forNumber(number);
              }
            };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
    getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
    getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
    getDescriptor() {
      return com.hanschen.multidex.bean.TestBean7.getDescriptor().getEnumTypes().get(1);
    }

    private static final StreamTo[] VALUES = values();

    public static StreamTo valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
                "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private StreamTo(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.hanschen.multidex.bean.StreamTo)
  }

  /**
   * Protobuf enum {@code com.hanschen.multidex.bean.OnlineState}
   */
  public enum OnlineState
          implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ONLINE = 0;</code>
     */
    ONLINE(0),
    /**
     * <code>OFFLINE = 1;</code>
     */
    OFFLINE(1),
    ;

    /**
     * <code>ONLINE = 0;</code>
     */
    public static final int ONLINE_VALUE = 0;
    /**
     * <code>OFFLINE = 1;</code>
     */
    public static final int OFFLINE_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static OnlineState valueOf(int value) {
      return forNumber(value);
    }

    public static OnlineState forNumber(int value) {
      switch (value) {
        case 0: return ONLINE;
        case 1: return OFFLINE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<OnlineState>
    internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
            OnlineState> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<OnlineState>() {
              public OnlineState findValueByNumber(int number) {
                return OnlineState.forNumber(number);
              }
            };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
    getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
    getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
    getDescriptor() {
      return com.hanschen.multidex.bean.TestBean7.getDescriptor().getEnumTypes().get(2);
    }

    private static final OnlineState[] VALUES = values();

    public static OnlineState valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
                "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private OnlineState(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.hanschen.multidex.bean.OnlineState)
  }

  /**
   * Protobuf enum {@code com.hanschen.multidex.bean.LinkType}
   */
  public enum LinkType
          implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>WIRE = 0;</code>
     */
    WIRE(0),
    /**
     * <code>WIRELESS = 1;</code>
     */
    WIRELESS(1),
    ;

    /**
     * <code>WIRE = 0;</code>
     */
    public static final int WIRE_VALUE = 0;
    /**
     * <code>WIRELESS = 1;</code>
     */
    public static final int WIRELESS_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LinkType valueOf(int value) {
      return forNumber(value);
    }

    public static LinkType forNumber(int value) {
      switch (value) {
        case 0: return WIRE;
        case 1: return WIRELESS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LinkType>
    internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
            LinkType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<LinkType>() {
              public LinkType findValueByNumber(int number) {
                return LinkType.forNumber(number);
              }
            };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
    getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
    getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
    getDescriptor() {
      return com.hanschen.multidex.bean.TestBean7.getDescriptor().getEnumTypes().get(3);
    }

    private static final LinkType[] VALUES = values();

    public static LinkType valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
                "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private LinkType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.hanschen.multidex.bean.LinkType)
  }

  /**
   * Protobuf enum {@code com.hanschen.multidex.bean.DeviceType}
   */
  public enum DeviceType
          implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PC = 0;</code>
     */
    PC(0),
    /**
     * <code>MOBILE = 1;</code>
     */
    MOBILE(1),
    /**
     * <code>STB = 2;</code>
     */
    STB(2),
    ;

    /**
     * <code>PC = 0;</code>
     */
    public static final int PC_VALUE = 0;
    /**
     * <code>MOBILE = 1;</code>
     */
    public static final int MOBILE_VALUE = 1;
    /**
     * <code>STB = 2;</code>
     */
    public static final int STB_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DeviceType valueOf(int value) {
      return forNumber(value);
    }

    public static DeviceType forNumber(int value) {
      switch (value) {
        case 0: return PC;
        case 1: return MOBILE;
        case 2: return STB;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DeviceType>
    internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
            DeviceType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<DeviceType>() {
              public DeviceType findValueByNumber(int number) {
                return DeviceType.forNumber(number);
              }
            };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
    getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
    getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
    getDescriptor() {
      return com.hanschen.multidex.bean.TestBean7.getDescriptor().getEnumTypes().get(4);
    }

    private static final DeviceType[] VALUES = values();

    public static DeviceType valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
                "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DeviceType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.hanschen.multidex.bean.DeviceType)
  }

  /**
   * Protobuf enum {@code com.hanschen.multidex.bean.WifiMode}
   */
  public enum WifiMode
          implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>OFF = 0;</code>
     */
    OFF(0),
    /**
     * <code>SLEEP = 1;</code>
     */
    SLEEP(1),
    /**
     * <code>STANDARD = 2;</code>
     */
    STANDARD(2),
    /**
     * <code>THROUGH_WALL = 3;</code>
     */
    THROUGH_WALL(3),
    ;

    /**
     * <code>OFF = 0;</code>
     */
    public static final int OFF_VALUE = 0;
    /**
     * <code>SLEEP = 1;</code>
     */
    public static final int SLEEP_VALUE = 1;
    /**
     * <code>STANDARD = 2;</code>
     */
    public static final int STANDARD_VALUE = 2;
    /**
     * <code>THROUGH_WALL = 3;</code>
     */
    public static final int THROUGH_WALL_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static WifiMode valueOf(int value) {
      return forNumber(value);
    }

    public static WifiMode forNumber(int value) {
      switch (value) {
        case 0: return OFF;
        case 1: return SLEEP;
        case 2: return STANDARD;
        case 3: return THROUGH_WALL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<WifiMode>
    internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
            WifiMode> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<WifiMode>() {
              public WifiMode findValueByNumber(int number) {
                return WifiMode.forNumber(number);
              }
            };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
    getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
    getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
    getDescriptor() {
      return com.hanschen.multidex.bean.TestBean7.getDescriptor().getEnumTypes().get(5);
    }

    private static final WifiMode[] VALUES = values();

    public static WifiMode valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
                "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private WifiMode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.hanschen.multidex.bean.WifiMode)
  }

  /**
   * Protobuf enum {@code com.hanschen.multidex.bean.SmartBandwidth}
   */
  public enum SmartBandwidth
          implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>EQUALITY = 0;</code>
     */
    EQUALITY(0),
    /**
     * <code>GAME_FIRST = 1;</code>
     */
    GAME_FIRST(1),
    /**
     * <code>VIDEO_FIRST = 2;</code>
     */
    VIDEO_FIRST(2),
    /**
     * <code>SURFING_FIRST = 3;</code>
     */
    SURFING_FIRST(3),
    ;

    /**
     * <code>EQUALITY = 0;</code>
     */
    public static final int EQUALITY_VALUE = 0;
    /**
     * <code>GAME_FIRST = 1;</code>
     */
    public static final int GAME_FIRST_VALUE = 1;
    /**
     * <code>VIDEO_FIRST = 2;</code>
     */
    public static final int VIDEO_FIRST_VALUE = 2;
    /**
     * <code>SURFING_FIRST = 3;</code>
     */
    public static final int SURFING_FIRST_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SmartBandwidth valueOf(int value) {
      return forNumber(value);
    }

    public static SmartBandwidth forNumber(int value) {
      switch (value) {
        case 0: return EQUALITY;
        case 1: return GAME_FIRST;
        case 2: return VIDEO_FIRST;
        case 3: return SURFING_FIRST;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SmartBandwidth>
    internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
            SmartBandwidth> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<SmartBandwidth>() {
              public SmartBandwidth findValueByNumber(int number) {
                return SmartBandwidth.forNumber(number);
              }
            };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
    getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
    getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
    getDescriptor() {
      return com.hanschen.multidex.bean.TestBean7.getDescriptor().getEnumTypes().get(6);
    }

    private static final SmartBandwidth[] VALUES = values();

    public static SmartBandwidth valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
                "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SmartBandwidth(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.hanschen.multidex.bean.SmartBandwidth)
  }

  /**
   * Protobuf enum {@code com.hanschen.multidex.bean.HardDiskState}
   */
  public enum HardDiskState
          implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>NO_HARD_DISK = 0;</code>
     */
    NO_HARD_DISK(0),
    /**
     * <code>NOT_PARTITION = 1;</code>
     */
    NOT_PARTITION(1),
    /**
     * <code>NORMAL = 2;</code>
     */
    NORMAL(2),
    /**
     * <code>MULTI_PARTITION = 3;</code>
     */
    MULTI_PARTITION(3),
    ;

    /**
     * <code>NO_HARD_DISK = 0;</code>
     */
    public static final int NO_HARD_DISK_VALUE = 0;
    /**
     * <code>NOT_PARTITION = 1;</code>
     */
    public static final int NOT_PARTITION_VALUE = 1;
    /**
     * <code>NORMAL = 2;</code>
     */
    public static final int NORMAL_VALUE = 2;
    /**
     * <code>MULTI_PARTITION = 3;</code>
     */
    public static final int MULTI_PARTITION_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static HardDiskState valueOf(int value) {
      return forNumber(value);
    }

    public static HardDiskState forNumber(int value) {
      switch (value) {
        case 0: return NO_HARD_DISK;
        case 1: return NOT_PARTITION;
        case 2: return NORMAL;
        case 3: return MULTI_PARTITION;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<HardDiskState>
    internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
            HardDiskState> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<HardDiskState>() {
              public HardDiskState findValueByNumber(int number) {
                return HardDiskState.forNumber(number);
              }
            };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
    getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
    getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
    getDescriptor() {
      return com.hanschen.multidex.bean.TestBean7.getDescriptor().getEnumTypes().get(7);
    }

    private static final HardDiskState[] VALUES = values();

    public static HardDiskState valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
                "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private HardDiskState(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.hanschen.multidex.bean.HardDiskState)
  }

  /**
   * Protobuf enum {@code com.hanschen.multidex.bean.WanType}
   */
  public enum WanType
          implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DHCP = 0;</code>
     */
    DHCP(0),
    /**
     * <code>STATIC = 1;</code>
     */
    STATIC(1),
    /**
     * <code>PPPOE = 2;</code>
     */
    PPPOE(2),
    ;

    /**
     * <code>DHCP = 0;</code>
     */
    public static final int DHCP_VALUE = 0;
    /**
     * <code>STATIC = 1;</code>
     */
    public static final int STATIC_VALUE = 1;
    /**
     * <code>PPPOE = 2;</code>
     */
    public static final int PPPOE_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static WanType valueOf(int value) {
      return forNumber(value);
    }

    public static WanType forNumber(int value) {
      switch (value) {
        case 0: return DHCP;
        case 1: return STATIC;
        case 2: return PPPOE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<WanType>
    internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
            WanType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<WanType>() {
              public WanType findValueByNumber(int number) {
                return WanType.forNumber(number);
              }
            };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
    getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
    getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
    getDescriptor() {
      return com.hanschen.multidex.bean.TestBean7.getDescriptor().getEnumTypes().get(8);
    }

    private static final WanType[] VALUES = values();

    public static WanType valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
                "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private WanType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.hanschen.multidex.bean.WanType)
  }

  /**
   * Protobuf enum {@code com.hanschen.multidex.bean.PowerStatus}
   */
  public enum PowerStatus
          implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>POWER_OFF = 0;</code>
     */
    POWER_OFF(0),
    /**
     * <code>POWER_ON = 1;</code>
     */
    POWER_ON(1),
    ;

    /**
     * <code>POWER_OFF = 0;</code>
     */
    public static final int POWER_OFF_VALUE = 0;
    /**
     * <code>POWER_ON = 1;</code>
     */
    public static final int POWER_ON_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PowerStatus valueOf(int value) {
      return forNumber(value);
    }

    public static PowerStatus forNumber(int value) {
      switch (value) {
        case 0: return POWER_OFF;
        case 1: return POWER_ON;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PowerStatus>
    internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
            PowerStatus> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<PowerStatus>() {
              public PowerStatus findValueByNumber(int number) {
                return PowerStatus.forNumber(number);
              }
            };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
    getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
    getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
    getDescriptor() {
      return com.hanschen.multidex.bean.TestBean7.getDescriptor().getEnumTypes().get(9);
    }

    private static final PowerStatus[] VALUES = values();

    public static PowerStatus valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
                "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PowerStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.hanschen.multidex.bean.PowerStatus)
  }

  /**
   * Protobuf enum {@code com.hanschen.multidex.bean.HomeShareMode}
   */
  public enum HomeShareMode
          implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MANUAL = 0;</code>
     */
    MANUAL(0),
    /**
     * <code>AUTO = 1;</code>
     */
    AUTO(1),
    ;

    /**
     * <code>MANUAL = 0;</code>
     */
    public static final int MANUAL_VALUE = 0;
    /**
     * <code>AUTO = 1;</code>
     */
    public static final int AUTO_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static HomeShareMode valueOf(int value) {
      return forNumber(value);
    }

    public static HomeShareMode forNumber(int value) {
      switch (value) {
        case 0: return MANUAL;
        case 1: return AUTO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<HomeShareMode>
    internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
            HomeShareMode> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<HomeShareMode>() {
              public HomeShareMode findValueByNumber(int number) {
                return HomeShareMode.forNumber(number);
              }
            };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
    getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
    getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
    getDescriptor() {
      return com.hanschen.multidex.bean.TestBean7.getDescriptor().getEnumTypes().get(10);
    }

    private static final HomeShareMode[] VALUES = values();

    public static HomeShareMode valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
                "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private HomeShareMode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.hanschen.multidex.bean.HomeShareMode)
  }

  public interface PacketOrBuilder extends
          // @@protoc_insertion_point(interface_extends:com.hanschen.multidex.bean.Packet)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 packet_version = 1 [default = 0];</code>
     */
    boolean hasPacketVersion();
    /**
     * <code>required int32 packet_version = 1 [default = 0];</code>
     */
    int getPacketVersion();

    /**
     * <code>required .com.hanschen.multidex.bean.MessageType message_type = 2;</code>
     */
    boolean hasMessageType();
    /**
     * <code>required .com.hanschen.multidex.bean.MessageType message_type = 2;</code>
     */
    com.hanschen.multidex.bean.TestBean7.MessageType getMessageType();

    /**
     * <code>required .com.hanschen.multidex.bean.StreamTo stream_to = 3;</code>
     */
    boolean hasStreamTo();
    /**
     * <code>required .com.hanschen.multidex.bean.StreamTo stream_to = 3;</code>
     */
    com.hanschen.multidex.bean.TestBean7.StreamTo getStreamTo();

    /**
     * <code>optional .com.hanschen.multidex.bean.RequestParam request_param = 4;</code>
     */
    boolean hasRequestParam();
    /**
     * <code>optional .com.hanschen.multidex.bean.RequestParam request_param = 4;</code>
     */
    com.hanschen.multidex.bean.TestBean7.RequestParam getRequestParam();
    /**
     * <code>optional .com.hanschen.multidex.bean.RequestParam request_param = 4;</code>
     */
    com.hanschen.multidex.bean.TestBean7.RequestParamOrBuilder getRequestParamOrBuilder();

    /**
     * <code>optional .com.hanschen.multidex.bean.Ack ack = 5;</code>
     */
    boolean hasAck();
    /**
     * <code>optional .com.hanschen.multidex.bean.Ack ack = 5;</code>
     */
    com.hanschen.multidex.bean.TestBean7.Ack getAck();
    /**
     * <code>optional .com.hanschen.multidex.bean.Ack ack = 5;</code>
     */
    com.hanschen.multidex.bean.TestBean7.AckOrBuilder getAckOrBuilder();

    /**
     * <code>optional .com.hanschen.multidex.bean.Notification notification = 6;</code>
     */
    boolean hasNotification();
    /**
     * <code>optional .com.hanschen.multidex.bean.Notification notification = 6;</code>
     */
    com.hanschen.multidex.bean.TestBean7.Notification getNotification();
    /**
     * <code>optional .com.hanschen.multidex.bean.Notification notification = 6;</code>
     */
    com.hanschen.multidex.bean.TestBean7.NotificationOrBuilder getNotificationOrBuilder();
  }
  /**
   * Protobuf type {@code com.hanschen.multidex.bean.Packet}
   */
  public  static final class Packet extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:com.hanschen.multidex.bean.Packet)
          PacketOrBuilder {
    // Use Packet.newBuilder() to construct.
    private Packet(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Packet() {
      packetVersion_ = 0;
      messageType_ = 0;
      streamTo_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Packet(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                      extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              packetVersion_ = input.readInt32();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.hanschen.multidex.bean.TestBean7.MessageType value = com.hanschen.multidex.bean.TestBean7.MessageType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                messageType_ = rawValue;
              }
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              com.hanschen.multidex.bean.TestBean7.StreamTo value = com.hanschen.multidex.bean.TestBean7.StreamTo.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                streamTo_ = rawValue;
              }
              break;
            }
            case 34: {
              com.hanschen.multidex.bean.TestBean7.RequestParam.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = requestParam_.toBuilder();
              }
              requestParam_ = input.readMessage(com.hanschen.multidex.bean.TestBean7.RequestParam.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(requestParam_);
                requestParam_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              com.hanschen.multidex.bean.TestBean7.Ack.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = ack_.toBuilder();
              }
              ack_ = input.readMessage(com.hanschen.multidex.bean.TestBean7.Ack.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(ack_);
                ack_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 50: {
              com.hanschen.multidex.bean.TestBean7.Notification.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = notification_.toBuilder();
              }
              notification_ = input.readMessage(com.hanschen.multidex.bean.TestBean7.Notification.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(notification_);
                notification_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_Packet_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_Packet_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      com.hanschen.multidex.bean.TestBean7.Packet.class, com.hanschen.multidex.bean.TestBean7.Packet.Builder.class);
    }

    private int bitField0_;
    public static final int PACKET_VERSION_FIELD_NUMBER = 1;
    private int packetVersion_;
    /**
     * <code>required int32 packet_version = 1 [default = 0];</code>
     */
    public boolean hasPacketVersion() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 packet_version = 1 [default = 0];</code>
     */
    public int getPacketVersion() {
      return packetVersion_;
    }

    public static final int MESSAGE_TYPE_FIELD_NUMBER = 2;
    private int messageType_;
    /**
     * <code>required .com.hanschen.multidex.bean.MessageType message_type = 2;</code>
     */
    public boolean hasMessageType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .com.hanschen.multidex.bean.MessageType message_type = 2;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.MessageType getMessageType() {
      com.hanschen.multidex.bean.TestBean7.MessageType result = com.hanschen.multidex.bean.TestBean7.MessageType.valueOf(messageType_);
      return result == null ? com.hanschen.multidex.bean.TestBean7.MessageType.LOGIN : result;
    }

    public static final int STREAM_TO_FIELD_NUMBER = 3;
    private int streamTo_;
    /**
     * <code>required .com.hanschen.multidex.bean.StreamTo stream_to = 3;</code>
     */
    public boolean hasStreamTo() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .com.hanschen.multidex.bean.StreamTo stream_to = 3;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.StreamTo getStreamTo() {
      com.hanschen.multidex.bean.TestBean7.StreamTo result = com.hanschen.multidex.bean.TestBean7.StreamTo.valueOf(streamTo_);
      return result == null ? com.hanschen.multidex.bean.TestBean7.StreamTo.PHONE_TO_SERVER : result;
    }

    public static final int REQUEST_PARAM_FIELD_NUMBER = 4;
    private com.hanschen.multidex.bean.TestBean7.RequestParam requestParam_;
    /**
     * <code>optional .com.hanschen.multidex.bean.RequestParam request_param = 4;</code>
     */
    public boolean hasRequestParam() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .com.hanschen.multidex.bean.RequestParam request_param = 4;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.RequestParam getRequestParam() {
      return requestParam_ == null ? com.hanschen.multidex.bean.TestBean7.RequestParam.getDefaultInstance() : requestParam_;
    }
    /**
     * <code>optional .com.hanschen.multidex.bean.RequestParam request_param = 4;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.RequestParamOrBuilder getRequestParamOrBuilder() {
      return requestParam_ == null ? com.hanschen.multidex.bean.TestBean7.RequestParam.getDefaultInstance() : requestParam_;
    }

    public static final int ACK_FIELD_NUMBER = 5;
    private com.hanschen.multidex.bean.TestBean7.Ack ack_;
    /**
     * <code>optional .com.hanschen.multidex.bean.Ack ack = 5;</code>
     */
    public boolean hasAck() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .com.hanschen.multidex.bean.Ack ack = 5;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.Ack getAck() {
      return ack_ == null ? com.hanschen.multidex.bean.TestBean7.Ack.getDefaultInstance() : ack_;
    }
    /**
     * <code>optional .com.hanschen.multidex.bean.Ack ack = 5;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.AckOrBuilder getAckOrBuilder() {
      return ack_ == null ? com.hanschen.multidex.bean.TestBean7.Ack.getDefaultInstance() : ack_;
    }

    public static final int NOTIFICATION_FIELD_NUMBER = 6;
    private com.hanschen.multidex.bean.TestBean7.Notification notification_;
    /**
     * <code>optional .com.hanschen.multidex.bean.Notification notification = 6;</code>
     */
    public boolean hasNotification() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .com.hanschen.multidex.bean.Notification notification = 6;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.Notification getNotification() {
      return notification_ == null ? com.hanschen.multidex.bean.TestBean7.Notification.getDefaultInstance() : notification_;
    }
    /**
     * <code>optional .com.hanschen.multidex.bean.Notification notification = 6;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.NotificationOrBuilder getNotificationOrBuilder() {
      return notification_ == null ? com.hanschen.multidex.bean.TestBean7.Notification.getDefaultInstance() : notification_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasPacketVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMessageType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStreamTo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasRequestParam()) {
        if (!getRequestParam().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasAck()) {
        if (!getAck().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, packetVersion_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, messageType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, streamTo_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, getRequestParam());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, getAck());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, getNotification());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(1, packetVersion_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
                .computeEnumSize(2, messageType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
                .computeEnumSize(3, streamTo_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(4, getRequestParam());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(5, getAck());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(6, getNotification());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.hanschen.multidex.bean.TestBean7.Packet)) {
        return super.equals(obj);
      }
      com.hanschen.multidex.bean.TestBean7.Packet other = (com.hanschen.multidex.bean.TestBean7.Packet) obj;

      boolean result = true;
      result = result && (hasPacketVersion() == other.hasPacketVersion());
      if (hasPacketVersion()) {
        result = result && (getPacketVersion()
                == other.getPacketVersion());
      }
      result = result && (hasMessageType() == other.hasMessageType());
      if (hasMessageType()) {
        result = result && messageType_ == other.messageType_;
      }
      result = result && (hasStreamTo() == other.hasStreamTo());
      if (hasStreamTo()) {
        result = result && streamTo_ == other.streamTo_;
      }
      result = result && (hasRequestParam() == other.hasRequestParam());
      if (hasRequestParam()) {
        result = result && getRequestParam()
                .equals(other.getRequestParam());
      }
      result = result && (hasAck() == other.hasAck());
      if (hasAck()) {
        result = result && getAck()
                .equals(other.getAck());
      }
      result = result && (hasNotification() == other.hasNotification());
      if (hasNotification()) {
        result = result && getNotification()
                .equals(other.getNotification());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasPacketVersion()) {
        hash = (37 * hash) + PACKET_VERSION_FIELD_NUMBER;
        hash = (53 * hash) + getPacketVersion();
      }
      if (hasMessageType()) {
        hash = (37 * hash) + MESSAGE_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + messageType_;
      }
      if (hasStreamTo()) {
        hash = (37 * hash) + STREAM_TO_FIELD_NUMBER;
        hash = (53 * hash) + streamTo_;
      }
      if (hasRequestParam()) {
        hash = (37 * hash) + REQUEST_PARAM_FIELD_NUMBER;
        hash = (53 * hash) + getRequestParam().hashCode();
      }
      if (hasAck()) {
        hash = (37 * hash) + ACK_FIELD_NUMBER;
        hash = (53 * hash) + getAck().hashCode();
      }
      if (hasNotification()) {
        hash = (37 * hash) + NOTIFICATION_FIELD_NUMBER;
        hash = (53 * hash) + getNotification().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.hanschen.multidex.bean.TestBean7.Packet parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hanschen.multidex.bean.TestBean7.Packet parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.Packet parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hanschen.multidex.bean.TestBean7.Packet parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.Packet parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.Packet parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.Packet parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.Packet parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.Packet parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.Packet parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.hanschen.multidex.bean.TestBean7.Packet prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.hanschen.multidex.bean.Packet}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:com.hanschen.multidex.bean.Packet)
            com.hanschen.multidex.bean.TestBean7.PacketOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_Packet_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_Packet_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        com.hanschen.multidex.bean.TestBean7.Packet.class, com.hanschen.multidex.bean.TestBean7.Packet.Builder.class);
      }

      // Construct using com.hanschen.multidex.bean.TestBean7.Packet.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRequestParamFieldBuilder();
          getAckFieldBuilder();
          getNotificationFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        packetVersion_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        messageType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        streamTo_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (requestParamBuilder_ == null) {
          requestParam_ = null;
        } else {
          requestParamBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (ackBuilder_ == null) {
          ack_ = null;
        } else {
          ackBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (notificationBuilder_ == null) {
          notification_ = null;
        } else {
          notificationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_Packet_descriptor;
      }

      public com.hanschen.multidex.bean.TestBean7.Packet getDefaultInstanceForType() {
        return com.hanschen.multidex.bean.TestBean7.Packet.getDefaultInstance();
      }

      public com.hanschen.multidex.bean.TestBean7.Packet build() {
        com.hanschen.multidex.bean.TestBean7.Packet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hanschen.multidex.bean.TestBean7.Packet buildPartial() {
        com.hanschen.multidex.bean.TestBean7.Packet result = new com.hanschen.multidex.bean.TestBean7.Packet(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.packetVersion_ = packetVersion_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.messageType_ = messageType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.streamTo_ = streamTo_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (requestParamBuilder_ == null) {
          result.requestParam_ = requestParam_;
        } else {
          result.requestParam_ = requestParamBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (ackBuilder_ == null) {
          result.ack_ = ack_;
        } else {
          result.ack_ = ackBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (notificationBuilder_ == null) {
          result.notification_ = notification_;
        } else {
          result.notification_ = notificationBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hanschen.multidex.bean.TestBean7.Packet) {
          return mergeFrom((com.hanschen.multidex.bean.TestBean7.Packet)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hanschen.multidex.bean.TestBean7.Packet other) {
        if (other == com.hanschen.multidex.bean.TestBean7.Packet.getDefaultInstance()) return this;
        if (other.hasPacketVersion()) {
          setPacketVersion(other.getPacketVersion());
        }
        if (other.hasMessageType()) {
          setMessageType(other.getMessageType());
        }
        if (other.hasStreamTo()) {
          setStreamTo(other.getStreamTo());
        }
        if (other.hasRequestParam()) {
          mergeRequestParam(other.getRequestParam());
        }
        if (other.hasAck()) {
          mergeAck(other.getAck());
        }
        if (other.hasNotification()) {
          mergeNotification(other.getNotification());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPacketVersion()) {
          return false;
        }
        if (!hasMessageType()) {
          return false;
        }
        if (!hasStreamTo()) {
          return false;
        }
        if (hasRequestParam()) {
          if (!getRequestParam().isInitialized()) {
            return false;
          }
        }
        if (hasAck()) {
          if (!getAck().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        com.hanschen.multidex.bean.TestBean7.Packet parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hanschen.multidex.bean.TestBean7.Packet) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int packetVersion_ ;
      /**
       * <code>required int32 packet_version = 1 [default = 0];</code>
       */
      public boolean hasPacketVersion() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 packet_version = 1 [default = 0];</code>
       */
      public int getPacketVersion() {
        return packetVersion_;
      }
      /**
       * <code>required int32 packet_version = 1 [default = 0];</code>
       */
      public Builder setPacketVersion(int value) {
        bitField0_ |= 0x00000001;
        packetVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 packet_version = 1 [default = 0];</code>
       */
      public Builder clearPacketVersion() {
        bitField0_ = (bitField0_ & ~0x00000001);
        packetVersion_ = 0;
        onChanged();
        return this;
      }

      private int messageType_ = 0;
      /**
       * <code>required .com.hanschen.multidex.bean.MessageType message_type = 2;</code>
       */
      public boolean hasMessageType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .com.hanschen.multidex.bean.MessageType message_type = 2;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.MessageType getMessageType() {
        com.hanschen.multidex.bean.TestBean7.MessageType result = com.hanschen.multidex.bean.TestBean7.MessageType.valueOf(messageType_);
        return result == null ? com.hanschen.multidex.bean.TestBean7.MessageType.LOGIN : result;
      }
      /**
       * <code>required .com.hanschen.multidex.bean.MessageType message_type = 2;</code>
       */
      public Builder setMessageType(com.hanschen.multidex.bean.TestBean7.MessageType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        messageType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .com.hanschen.multidex.bean.MessageType message_type = 2;</code>
       */
      public Builder clearMessageType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        messageType_ = 0;
        onChanged();
        return this;
      }

      private int streamTo_ = 0;
      /**
       * <code>required .com.hanschen.multidex.bean.StreamTo stream_to = 3;</code>
       */
      public boolean hasStreamTo() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .com.hanschen.multidex.bean.StreamTo stream_to = 3;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.StreamTo getStreamTo() {
        com.hanschen.multidex.bean.TestBean7.StreamTo result = com.hanschen.multidex.bean.TestBean7.StreamTo.valueOf(streamTo_);
        return result == null ? com.hanschen.multidex.bean.TestBean7.StreamTo.PHONE_TO_SERVER : result;
      }
      /**
       * <code>required .com.hanschen.multidex.bean.StreamTo stream_to = 3;</code>
       */
      public Builder setStreamTo(com.hanschen.multidex.bean.TestBean7.StreamTo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        streamTo_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .com.hanschen.multidex.bean.StreamTo stream_to = 3;</code>
       */
      public Builder clearStreamTo() {
        bitField0_ = (bitField0_ & ~0x00000004);
        streamTo_ = 0;
        onChanged();
        return this;
      }

      private com.hanschen.multidex.bean.TestBean7.RequestParam requestParam_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.RequestParam, com.hanschen.multidex.bean.TestBean7.RequestParam.Builder, com.hanschen.multidex.bean.TestBean7.RequestParamOrBuilder> requestParamBuilder_;
      /**
       * <code>optional .com.hanschen.multidex.bean.RequestParam request_param = 4;</code>
       */
      public boolean hasRequestParam() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.RequestParam request_param = 4;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.RequestParam getRequestParam() {
        if (requestParamBuilder_ == null) {
          return requestParam_ == null ? com.hanschen.multidex.bean.TestBean7.RequestParam.getDefaultInstance() : requestParam_;
        } else {
          return requestParamBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.RequestParam request_param = 4;</code>
       */
      public Builder setRequestParam(com.hanschen.multidex.bean.TestBean7.RequestParam value) {
        if (requestParamBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          requestParam_ = value;
          onChanged();
        } else {
          requestParamBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.RequestParam request_param = 4;</code>
       */
      public Builder setRequestParam(
              com.hanschen.multidex.bean.TestBean7.RequestParam.Builder builderForValue) {
        if (requestParamBuilder_ == null) {
          requestParam_ = builderForValue.build();
          onChanged();
        } else {
          requestParamBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.RequestParam request_param = 4;</code>
       */
      public Builder mergeRequestParam(com.hanschen.multidex.bean.TestBean7.RequestParam value) {
        if (requestParamBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
                  requestParam_ != null &&
                  requestParam_ != com.hanschen.multidex.bean.TestBean7.RequestParam.getDefaultInstance()) {
            requestParam_ =
                    com.hanschen.multidex.bean.TestBean7.RequestParam.newBuilder(requestParam_).mergeFrom(value).buildPartial();
          } else {
            requestParam_ = value;
          }
          onChanged();
        } else {
          requestParamBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.RequestParam request_param = 4;</code>
       */
      public Builder clearRequestParam() {
        if (requestParamBuilder_ == null) {
          requestParam_ = null;
          onChanged();
        } else {
          requestParamBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.RequestParam request_param = 4;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.RequestParam.Builder getRequestParamBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getRequestParamFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.RequestParam request_param = 4;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.RequestParamOrBuilder getRequestParamOrBuilder() {
        if (requestParamBuilder_ != null) {
          return requestParamBuilder_.getMessageOrBuilder();
        } else {
          return requestParam_ == null ?
                  com.hanschen.multidex.bean.TestBean7.RequestParam.getDefaultInstance() : requestParam_;
        }
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.RequestParam request_param = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.RequestParam, com.hanschen.multidex.bean.TestBean7.RequestParam.Builder, com.hanschen.multidex.bean.TestBean7.RequestParamOrBuilder>
      getRequestParamFieldBuilder() {
        if (requestParamBuilder_ == null) {
          requestParamBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.hanschen.multidex.bean.TestBean7.RequestParam, com.hanschen.multidex.bean.TestBean7.RequestParam.Builder, com.hanschen.multidex.bean.TestBean7.RequestParamOrBuilder>(
                  getRequestParam(),
                  getParentForChildren(),
                  isClean());
          requestParam_ = null;
        }
        return requestParamBuilder_;
      }

      private com.hanschen.multidex.bean.TestBean7.Ack ack_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.Ack, com.hanschen.multidex.bean.TestBean7.Ack.Builder, com.hanschen.multidex.bean.TestBean7.AckOrBuilder> ackBuilder_;
      /**
       * <code>optional .com.hanschen.multidex.bean.Ack ack = 5;</code>
       */
      public boolean hasAck() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.Ack ack = 5;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.Ack getAck() {
        if (ackBuilder_ == null) {
          return ack_ == null ? com.hanschen.multidex.bean.TestBean7.Ack.getDefaultInstance() : ack_;
        } else {
          return ackBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.Ack ack = 5;</code>
       */
      public Builder setAck(com.hanschen.multidex.bean.TestBean7.Ack value) {
        if (ackBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ack_ = value;
          onChanged();
        } else {
          ackBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.Ack ack = 5;</code>
       */
      public Builder setAck(
              com.hanschen.multidex.bean.TestBean7.Ack.Builder builderForValue) {
        if (ackBuilder_ == null) {
          ack_ = builderForValue.build();
          onChanged();
        } else {
          ackBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.Ack ack = 5;</code>
       */
      public Builder mergeAck(com.hanschen.multidex.bean.TestBean7.Ack value) {
        if (ackBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
                  ack_ != null &&
                  ack_ != com.hanschen.multidex.bean.TestBean7.Ack.getDefaultInstance()) {
            ack_ =
                    com.hanschen.multidex.bean.TestBean7.Ack.newBuilder(ack_).mergeFrom(value).buildPartial();
          } else {
            ack_ = value;
          }
          onChanged();
        } else {
          ackBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.Ack ack = 5;</code>
       */
      public Builder clearAck() {
        if (ackBuilder_ == null) {
          ack_ = null;
          onChanged();
        } else {
          ackBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.Ack ack = 5;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.Ack.Builder getAckBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getAckFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.Ack ack = 5;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.AckOrBuilder getAckOrBuilder() {
        if (ackBuilder_ != null) {
          return ackBuilder_.getMessageOrBuilder();
        } else {
          return ack_ == null ?
                  com.hanschen.multidex.bean.TestBean7.Ack.getDefaultInstance() : ack_;
        }
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.Ack ack = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.Ack, com.hanschen.multidex.bean.TestBean7.Ack.Builder, com.hanschen.multidex.bean.TestBean7.AckOrBuilder>
      getAckFieldBuilder() {
        if (ackBuilder_ == null) {
          ackBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.hanschen.multidex.bean.TestBean7.Ack, com.hanschen.multidex.bean.TestBean7.Ack.Builder, com.hanschen.multidex.bean.TestBean7.AckOrBuilder>(
                  getAck(),
                  getParentForChildren(),
                  isClean());
          ack_ = null;
        }
        return ackBuilder_;
      }

      private com.hanschen.multidex.bean.TestBean7.Notification notification_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.Notification, com.hanschen.multidex.bean.TestBean7.Notification.Builder, com.hanschen.multidex.bean.TestBean7.NotificationOrBuilder> notificationBuilder_;
      /**
       * <code>optional .com.hanschen.multidex.bean.Notification notification = 6;</code>
       */
      public boolean hasNotification() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.Notification notification = 6;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.Notification getNotification() {
        if (notificationBuilder_ == null) {
          return notification_ == null ? com.hanschen.multidex.bean.TestBean7.Notification.getDefaultInstance() : notification_;
        } else {
          return notificationBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.Notification notification = 6;</code>
       */
      public Builder setNotification(com.hanschen.multidex.bean.TestBean7.Notification value) {
        if (notificationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          notification_ = value;
          onChanged();
        } else {
          notificationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.Notification notification = 6;</code>
       */
      public Builder setNotification(
              com.hanschen.multidex.bean.TestBean7.Notification.Builder builderForValue) {
        if (notificationBuilder_ == null) {
          notification_ = builderForValue.build();
          onChanged();
        } else {
          notificationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.Notification notification = 6;</code>
       */
      public Builder mergeNotification(com.hanschen.multidex.bean.TestBean7.Notification value) {
        if (notificationBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
                  notification_ != null &&
                  notification_ != com.hanschen.multidex.bean.TestBean7.Notification.getDefaultInstance()) {
            notification_ =
                    com.hanschen.multidex.bean.TestBean7.Notification.newBuilder(notification_).mergeFrom(value).buildPartial();
          } else {
            notification_ = value;
          }
          onChanged();
        } else {
          notificationBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.Notification notification = 6;</code>
       */
      public Builder clearNotification() {
        if (notificationBuilder_ == null) {
          notification_ = null;
          onChanged();
        } else {
          notificationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.Notification notification = 6;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.Notification.Builder getNotificationBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getNotificationFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.Notification notification = 6;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.NotificationOrBuilder getNotificationOrBuilder() {
        if (notificationBuilder_ != null) {
          return notificationBuilder_.getMessageOrBuilder();
        } else {
          return notification_ == null ?
                  com.hanschen.multidex.bean.TestBean7.Notification.getDefaultInstance() : notification_;
        }
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.Notification notification = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.Notification, com.hanschen.multidex.bean.TestBean7.Notification.Builder, com.hanschen.multidex.bean.TestBean7.NotificationOrBuilder>
      getNotificationFieldBuilder() {
        if (notificationBuilder_ == null) {
          notificationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.hanschen.multidex.bean.TestBean7.Notification, com.hanschen.multidex.bean.TestBean7.Notification.Builder, com.hanschen.multidex.bean.TestBean7.NotificationOrBuilder>(
                  getNotification(),
                  getParentForChildren(),
                  isClean());
          notification_ = null;
        }
        return notificationBuilder_;
      }
      public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.hanschen.multidex.bean.Packet)
    }

    // @@protoc_insertion_point(class_scope:com.hanschen.multidex.bean.Packet)
    private static final com.hanschen.multidex.bean.TestBean7.Packet DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.hanschen.multidex.bean.TestBean7.Packet();
    }

    public static com.hanschen.multidex.bean.TestBean7.Packet getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Packet>
            PARSER = new com.google.protobuf.AbstractParser<Packet>() {
      public Packet parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return new Packet(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Packet> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Packet> getParserForType() {
      return PARSER;
    }

    public com.hanschen.multidex.bean.TestBean7.Packet getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RequestParamOrBuilder extends
          // @@protoc_insertion_point(interface_extends:com.hanschen.multidex.bean.RequestParam)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated string authorization_list = 1;</code>
     */
    java.util.List<java.lang.String>
    getAuthorizationListList();
    /**
     * <code>repeated string authorization_list = 1;</code>
     */
    int getAuthorizationListCount();
    /**
     * <code>repeated string authorization_list = 1;</code>
     */
    java.lang.String getAuthorizationList(int index);
    /**
     * <code>repeated string authorization_list = 1;</code>
     */
    com.google.protobuf.ByteString
    getAuthorizationListBytes(int index);

    /**
     * <code>optional .com.hanschen.multidex.bean.CloudAccount account = 2;</code>
     */
    boolean hasAccount();
    /**
     * <code>optional .com.hanschen.multidex.bean.CloudAccount account = 2;</code>
     */
    com.hanschen.multidex.bean.TestBean7.CloudAccount getAccount();
    /**
     * <code>optional .com.hanschen.multidex.bean.CloudAccount account = 2;</code>
     */
    com.hanschen.multidex.bean.TestBean7.CloudAccountOrBuilder getAccountOrBuilder();

    /**
     * <code>optional .com.hanschen.multidex.bean.WifiMode wifi_mode = 3;</code>
     */
    boolean hasWifiMode();
    /**
     * <code>optional .com.hanschen.multidex.bean.WifiMode wifi_mode = 3;</code>
     */
    com.hanschen.multidex.bean.TestBean7.WifiMode getWifiMode();

    /**
     * <code>optional .com.hanschen.multidex.bean.GuestWifi guest_wifi = 4;</code>
     */
    boolean hasGuestWifi();
    /**
     * <code>optional .com.hanschen.multidex.bean.GuestWifi guest_wifi = 4;</code>
     */
    com.hanschen.multidex.bean.TestBean7.GuestWifi getGuestWifi();
    /**
     * <code>optional .com.hanschen.multidex.bean.GuestWifi guest_wifi = 4;</code>
     */
    com.hanschen.multidex.bean.TestBean7.GuestWifiOrBuilder getGuestWifiOrBuilder();

    /**
     * <code>optional string mac_addr = 5;</code>
     */
    boolean hasMacAddr();
    /**
     * <code>optional string mac_addr = 5;</code>
     */
    java.lang.String getMacAddr();
    /**
     * <code>optional string mac_addr = 5;</code>
     */
    com.google.protobuf.ByteString
    getMacAddrBytes();

    /**
     * <code>optional .com.hanschen.multidex.bean.ParentControlTask parent_control_task = 6;</code>
     */
    boolean hasParentControlTask();
    /**
     * <code>optional .com.hanschen.multidex.bean.ParentControlTask parent_control_task = 6;</code>
     */
    com.hanschen.multidex.bean.TestBean7.ParentControlTask getParentControlTask();
    /**
     * <code>optional .com.hanschen.multidex.bean.ParentControlTask parent_control_task = 6;</code>
     */
    com.hanschen.multidex.bean.TestBean7.ParentControlTaskOrBuilder getParentControlTaskOrBuilder();

    /**
     * <code>optional .com.hanschen.multidex.bean.SuperAdmin super_admin = 7;</code>
     */
    boolean hasSuperAdmin();
    /**
     * <code>optional .com.hanschen.multidex.bean.SuperAdmin super_admin = 7;</code>
     */
    com.hanschen.multidex.bean.TestBean7.SuperAdmin getSuperAdmin();
    /**
     * <code>optional .com.hanschen.multidex.bean.SuperAdmin super_admin = 7;</code>
     */
    com.hanschen.multidex.bean.TestBean7.SuperAdminOrBuilder getSuperAdminOrBuilder();

    /**
     * <code>optional .com.hanschen.multidex.bean.SmartBandwidth smart_bandwidth = 8;</code>
     */
    boolean hasSmartBandwidth();
    /**
     * <code>optional .com.hanschen.multidex.bean.SmartBandwidth smart_bandwidth = 8;</code>
     */
    com.hanschen.multidex.bean.TestBean7.SmartBandwidth getSmartBandwidth();

    /**
     * <code>optional .com.hanschen.multidex.bean.WanSetting wan_setting = 9;</code>
     */
    boolean hasWanSetting();
    /**
     * <code>optional .com.hanschen.multidex.bean.WanSetting wan_setting = 9;</code>
     */
    com.hanschen.multidex.bean.TestBean7.WanSetting getWanSetting();
    /**
     * <code>optional .com.hanschen.multidex.bean.WanSetting wan_setting = 9;</code>
     */
    com.hanschen.multidex.bean.TestBean7.WanSettingOrBuilder getWanSettingOrBuilder();

    /**
     * <code>optional .com.hanschen.multidex.bean.WifiSetting wifi_setting = 10;</code>
     */
    boolean hasWifiSetting();
    /**
     * <code>optional .com.hanschen.multidex.bean.WifiSetting wifi_setting = 10;</code>
     */
    com.hanschen.multidex.bean.TestBean7.WifiSetting getWifiSetting();
    /**
     * <code>optional .com.hanschen.multidex.bean.WifiSetting wifi_setting = 10;</code>
     */
    com.hanschen.multidex.bean.TestBean7.WifiSettingOrBuilder getWifiSettingOrBuilder();

    /**
     * <code>optional .com.hanschen.multidex.bean.PowerStatus power_status = 11;</code>
     */
    boolean hasPowerStatus();
    /**
     * <code>optional .com.hanschen.multidex.bean.PowerStatus power_status = 11;</code>
     */
    com.hanschen.multidex.bean.TestBean7.PowerStatus getPowerStatus();

    /**
     * <code>optional .com.hanschen.multidex.bean.SpeedLimit speed_limit = 12;</code>
     */
    boolean hasSpeedLimit();
    /**
     * <code>optional .com.hanschen.multidex.bean.SpeedLimit speed_limit = 12;</code>
     */
    com.hanschen.multidex.bean.TestBean7.SpeedLimit getSpeedLimit();
    /**
     * <code>optional .com.hanschen.multidex.bean.SpeedLimit speed_limit = 12;</code>
     */
    com.hanschen.multidex.bean.TestBean7.SpeedLimitOrBuilder getSpeedLimitOrBuilder();

    /**
     * <code>optional .com.hanschen.multidex.bean.HomeShareMode home_share_mode = 13;</code>
     */
    boolean hasHomeShareMode();
    /**
     * <code>optional .com.hanschen.multidex.bean.HomeShareMode home_share_mode = 13;</code>
     */
    com.hanschen.multidex.bean.TestBean7.HomeShareMode getHomeShareMode();

    /**
     * <code>optional .com.hanschen.multidex.bean.SmartSocket smart_socket = 14;</code>
     */
    boolean hasSmartSocket();
    /**
     * <code>optional .com.hanschen.multidex.bean.SmartSocket smart_socket = 14;</code>
     */
    com.hanschen.multidex.bean.TestBean7.SmartSocket getSmartSocket();
    /**
     * <code>optional .com.hanschen.multidex.bean.SmartSocket smart_socket = 14;</code>
     */
    com.hanschen.multidex.bean.TestBean7.SmartSocketOrBuilder getSmartSocketOrBuilder();
  }
  /**
   * Protobuf type {@code com.hanschen.multidex.bean.RequestParam}
   */
  public  static final class RequestParam extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:com.hanschen.multidex.bean.RequestParam)
          RequestParamOrBuilder {
    // Use RequestParam.newBuilder() to construct.
    private RequestParam(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RequestParam() {
      authorizationList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      wifiMode_ = 0;
      macAddr_ = "";
      smartBandwidth_ = 0;
      powerStatus_ = 0;
      homeShareMode_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RequestParam(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                      extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                authorizationList_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              authorizationList_.add(bs);
              break;
            }
            case 18: {
              com.hanschen.multidex.bean.TestBean7.CloudAccount.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = account_.toBuilder();
              }
              account_ = input.readMessage(com.hanschen.multidex.bean.TestBean7.CloudAccount.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(account_);
                account_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              com.hanschen.multidex.bean.TestBean7.WifiMode value = com.hanschen.multidex.bean.TestBean7.WifiMode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                wifiMode_ = rawValue;
              }
              break;
            }
            case 34: {
              com.hanschen.multidex.bean.TestBean7.GuestWifi.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = guestWifi_.toBuilder();
              }
              guestWifi_ = input.readMessage(com.hanschen.multidex.bean.TestBean7.GuestWifi.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(guestWifi_);
                guestWifi_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              macAddr_ = bs;
              break;
            }
            case 50: {
              com.hanschen.multidex.bean.TestBean7.ParentControlTask.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = parentControlTask_.toBuilder();
              }
              parentControlTask_ = input.readMessage(com.hanschen.multidex.bean.TestBean7.ParentControlTask.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(parentControlTask_);
                parentControlTask_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 58: {
              com.hanschen.multidex.bean.TestBean7.SuperAdmin.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = superAdmin_.toBuilder();
              }
              superAdmin_ = input.readMessage(com.hanschen.multidex.bean.TestBean7.SuperAdmin.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(superAdmin_);
                superAdmin_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 64: {
              int rawValue = input.readEnum();
              com.hanschen.multidex.bean.TestBean7.SmartBandwidth value = com.hanschen.multidex.bean.TestBean7.SmartBandwidth.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(8, rawValue);
              } else {
                bitField0_ |= 0x00000040;
                smartBandwidth_ = rawValue;
              }
              break;
            }
            case 74: {
              com.hanschen.multidex.bean.TestBean7.WanSetting.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = wanSetting_.toBuilder();
              }
              wanSetting_ = input.readMessage(com.hanschen.multidex.bean.TestBean7.WanSetting.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(wanSetting_);
                wanSetting_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
            case 82: {
              com.hanschen.multidex.bean.TestBean7.WifiSetting.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) == 0x00000100)) {
                subBuilder = wifiSetting_.toBuilder();
              }
              wifiSetting_ = input.readMessage(com.hanschen.multidex.bean.TestBean7.WifiSetting.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(wifiSetting_);
                wifiSetting_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
            case 88: {
              int rawValue = input.readEnum();
              com.hanschen.multidex.bean.TestBean7.PowerStatus value = com.hanschen.multidex.bean.TestBean7.PowerStatus.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(11, rawValue);
              } else {
                bitField0_ |= 0x00000200;
                powerStatus_ = rawValue;
              }
              break;
            }
            case 98: {
              com.hanschen.multidex.bean.TestBean7.SpeedLimit.Builder subBuilder = null;
              if (((bitField0_ & 0x00000400) == 0x00000400)) {
                subBuilder = speedLimit_.toBuilder();
              }
              speedLimit_ = input.readMessage(com.hanschen.multidex.bean.TestBean7.SpeedLimit.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(speedLimit_);
                speedLimit_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000400;
              break;
            }
            case 104: {
              int rawValue = input.readEnum();
              com.hanschen.multidex.bean.TestBean7.HomeShareMode value = com.hanschen.multidex.bean.TestBean7.HomeShareMode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(13, rawValue);
              } else {
                bitField0_ |= 0x00000800;
                homeShareMode_ = rawValue;
              }
              break;
            }
            case 114: {
              com.hanschen.multidex.bean.TestBean7.SmartSocket.Builder subBuilder = null;
              if (((bitField0_ & 0x00001000) == 0x00001000)) {
                subBuilder = smartSocket_.toBuilder();
              }
              smartSocket_ = input.readMessage(com.hanschen.multidex.bean.TestBean7.SmartSocket.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(smartSocket_);
                smartSocket_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00001000;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          authorizationList_ = authorizationList_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_RequestParam_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_RequestParam_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      com.hanschen.multidex.bean.TestBean7.RequestParam.class, com.hanschen.multidex.bean.TestBean7.RequestParam.Builder.class);
    }

    private int bitField0_;
    public static final int AUTHORIZATION_LIST_FIELD_NUMBER = 1;
    private com.google.protobuf.LazyStringList authorizationList_;
    /**
     * <code>repeated string authorization_list = 1;</code>
     */
    public com.google.protobuf.ProtocolStringList
    getAuthorizationListList() {
      return authorizationList_;
    }
    /**
     * <code>repeated string authorization_list = 1;</code>
     */
    public int getAuthorizationListCount() {
      return authorizationList_.size();
    }
    /**
     * <code>repeated string authorization_list = 1;</code>
     */
    public java.lang.String getAuthorizationList(int index) {
      return authorizationList_.get(index);
    }
    /**
     * <code>repeated string authorization_list = 1;</code>
     */
    public com.google.protobuf.ByteString
    getAuthorizationListBytes(int index) {
      return authorizationList_.getByteString(index);
    }

    public static final int ACCOUNT_FIELD_NUMBER = 2;
    private com.hanschen.multidex.bean.TestBean7.CloudAccount account_;
    /**
     * <code>optional .com.hanschen.multidex.bean.CloudAccount account = 2;</code>
     */
    public boolean hasAccount() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .com.hanschen.multidex.bean.CloudAccount account = 2;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.CloudAccount getAccount() {
      return account_ == null ? com.hanschen.multidex.bean.TestBean7.CloudAccount.getDefaultInstance() : account_;
    }
    /**
     * <code>optional .com.hanschen.multidex.bean.CloudAccount account = 2;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.CloudAccountOrBuilder getAccountOrBuilder() {
      return account_ == null ? com.hanschen.multidex.bean.TestBean7.CloudAccount.getDefaultInstance() : account_;
    }

    public static final int WIFI_MODE_FIELD_NUMBER = 3;
    private int wifiMode_;
    /**
     * <code>optional .com.hanschen.multidex.bean.WifiMode wifi_mode = 3;</code>
     */
    public boolean hasWifiMode() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .com.hanschen.multidex.bean.WifiMode wifi_mode = 3;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.WifiMode getWifiMode() {
      com.hanschen.multidex.bean.TestBean7.WifiMode result = com.hanschen.multidex.bean.TestBean7.WifiMode.valueOf(wifiMode_);
      return result == null ? com.hanschen.multidex.bean.TestBean7.WifiMode.OFF : result;
    }

    public static final int GUEST_WIFI_FIELD_NUMBER = 4;
    private com.hanschen.multidex.bean.TestBean7.GuestWifi guestWifi_;
    /**
     * <code>optional .com.hanschen.multidex.bean.GuestWifi guest_wifi = 4;</code>
     */
    public boolean hasGuestWifi() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .com.hanschen.multidex.bean.GuestWifi guest_wifi = 4;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.GuestWifi getGuestWifi() {
      return guestWifi_ == null ? com.hanschen.multidex.bean.TestBean7.GuestWifi.getDefaultInstance() : guestWifi_;
    }
    /**
     * <code>optional .com.hanschen.multidex.bean.GuestWifi guest_wifi = 4;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.GuestWifiOrBuilder getGuestWifiOrBuilder() {
      return guestWifi_ == null ? com.hanschen.multidex.bean.TestBean7.GuestWifi.getDefaultInstance() : guestWifi_;
    }

    public static final int MAC_ADDR_FIELD_NUMBER = 5;
    private volatile java.lang.Object macAddr_;
    /**
     * <code>optional string mac_addr = 5;</code>
     */
    public boolean hasMacAddr() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string mac_addr = 5;</code>
     */
    public java.lang.String getMacAddr() {
      java.lang.Object ref = macAddr_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          macAddr_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string mac_addr = 5;</code>
     */
    public com.google.protobuf.ByteString
    getMacAddrBytes() {
      java.lang.Object ref = macAddr_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        macAddr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PARENT_CONTROL_TASK_FIELD_NUMBER = 6;
    private com.hanschen.multidex.bean.TestBean7.ParentControlTask parentControlTask_;
    /**
     * <code>optional .com.hanschen.multidex.bean.ParentControlTask parent_control_task = 6;</code>
     */
    public boolean hasParentControlTask() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .com.hanschen.multidex.bean.ParentControlTask parent_control_task = 6;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.ParentControlTask getParentControlTask() {
      return parentControlTask_ == null ? com.hanschen.multidex.bean.TestBean7.ParentControlTask.getDefaultInstance() : parentControlTask_;
    }
    /**
     * <code>optional .com.hanschen.multidex.bean.ParentControlTask parent_control_task = 6;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.ParentControlTaskOrBuilder getParentControlTaskOrBuilder() {
      return parentControlTask_ == null ? com.hanschen.multidex.bean.TestBean7.ParentControlTask.getDefaultInstance() : parentControlTask_;
    }

    public static final int SUPER_ADMIN_FIELD_NUMBER = 7;
    private com.hanschen.multidex.bean.TestBean7.SuperAdmin superAdmin_;
    /**
     * <code>optional .com.hanschen.multidex.bean.SuperAdmin super_admin = 7;</code>
     */
    public boolean hasSuperAdmin() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .com.hanschen.multidex.bean.SuperAdmin super_admin = 7;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.SuperAdmin getSuperAdmin() {
      return superAdmin_ == null ? com.hanschen.multidex.bean.TestBean7.SuperAdmin.getDefaultInstance() : superAdmin_;
    }
    /**
     * <code>optional .com.hanschen.multidex.bean.SuperAdmin super_admin = 7;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.SuperAdminOrBuilder getSuperAdminOrBuilder() {
      return superAdmin_ == null ? com.hanschen.multidex.bean.TestBean7.SuperAdmin.getDefaultInstance() : superAdmin_;
    }

    public static final int SMART_BANDWIDTH_FIELD_NUMBER = 8;
    private int smartBandwidth_;
    /**
     * <code>optional .com.hanschen.multidex.bean.SmartBandwidth smart_bandwidth = 8;</code>
     */
    public boolean hasSmartBandwidth() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .com.hanschen.multidex.bean.SmartBandwidth smart_bandwidth = 8;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.SmartBandwidth getSmartBandwidth() {
      com.hanschen.multidex.bean.TestBean7.SmartBandwidth result = com.hanschen.multidex.bean.TestBean7.SmartBandwidth.valueOf(smartBandwidth_);
      return result == null ? com.hanschen.multidex.bean.TestBean7.SmartBandwidth.EQUALITY : result;
    }

    public static final int WAN_SETTING_FIELD_NUMBER = 9;
    private com.hanschen.multidex.bean.TestBean7.WanSetting wanSetting_;
    /**
     * <code>optional .com.hanschen.multidex.bean.WanSetting wan_setting = 9;</code>
     */
    public boolean hasWanSetting() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .com.hanschen.multidex.bean.WanSetting wan_setting = 9;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.WanSetting getWanSetting() {
      return wanSetting_ == null ? com.hanschen.multidex.bean.TestBean7.WanSetting.getDefaultInstance() : wanSetting_;
    }
    /**
     * <code>optional .com.hanschen.multidex.bean.WanSetting wan_setting = 9;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.WanSettingOrBuilder getWanSettingOrBuilder() {
      return wanSetting_ == null ? com.hanschen.multidex.bean.TestBean7.WanSetting.getDefaultInstance() : wanSetting_;
    }

    public static final int WIFI_SETTING_FIELD_NUMBER = 10;
    private com.hanschen.multidex.bean.TestBean7.WifiSetting wifiSetting_;
    /**
     * <code>optional .com.hanschen.multidex.bean.WifiSetting wifi_setting = 10;</code>
     */
    public boolean hasWifiSetting() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .com.hanschen.multidex.bean.WifiSetting wifi_setting = 10;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.WifiSetting getWifiSetting() {
      return wifiSetting_ == null ? com.hanschen.multidex.bean.TestBean7.WifiSetting.getDefaultInstance() : wifiSetting_;
    }
    /**
     * <code>optional .com.hanschen.multidex.bean.WifiSetting wifi_setting = 10;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.WifiSettingOrBuilder getWifiSettingOrBuilder() {
      return wifiSetting_ == null ? com.hanschen.multidex.bean.TestBean7.WifiSetting.getDefaultInstance() : wifiSetting_;
    }

    public static final int POWER_STATUS_FIELD_NUMBER = 11;
    private int powerStatus_;
    /**
     * <code>optional .com.hanschen.multidex.bean.PowerStatus power_status = 11;</code>
     */
    public boolean hasPowerStatus() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .com.hanschen.multidex.bean.PowerStatus power_status = 11;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.PowerStatus getPowerStatus() {
      com.hanschen.multidex.bean.TestBean7.PowerStatus result = com.hanschen.multidex.bean.TestBean7.PowerStatus.valueOf(powerStatus_);
      return result == null ? com.hanschen.multidex.bean.TestBean7.PowerStatus.POWER_OFF : result;
    }

    public static final int SPEED_LIMIT_FIELD_NUMBER = 12;
    private com.hanschen.multidex.bean.TestBean7.SpeedLimit speedLimit_;
    /**
     * <code>optional .com.hanschen.multidex.bean.SpeedLimit speed_limit = 12;</code>
     */
    public boolean hasSpeedLimit() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .com.hanschen.multidex.bean.SpeedLimit speed_limit = 12;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.SpeedLimit getSpeedLimit() {
      return speedLimit_ == null ? com.hanschen.multidex.bean.TestBean7.SpeedLimit.getDefaultInstance() : speedLimit_;
    }
    /**
     * <code>optional .com.hanschen.multidex.bean.SpeedLimit speed_limit = 12;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.SpeedLimitOrBuilder getSpeedLimitOrBuilder() {
      return speedLimit_ == null ? com.hanschen.multidex.bean.TestBean7.SpeedLimit.getDefaultInstance() : speedLimit_;
    }

    public static final int HOME_SHARE_MODE_FIELD_NUMBER = 13;
    private int homeShareMode_;
    /**
     * <code>optional .com.hanschen.multidex.bean.HomeShareMode home_share_mode = 13;</code>
     */
    public boolean hasHomeShareMode() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .com.hanschen.multidex.bean.HomeShareMode home_share_mode = 13;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.HomeShareMode getHomeShareMode() {
      com.hanschen.multidex.bean.TestBean7.HomeShareMode result = com.hanschen.multidex.bean.TestBean7.HomeShareMode.valueOf(homeShareMode_);
      return result == null ? com.hanschen.multidex.bean.TestBean7.HomeShareMode.MANUAL : result;
    }

    public static final int SMART_SOCKET_FIELD_NUMBER = 14;
    private com.hanschen.multidex.bean.TestBean7.SmartSocket smartSocket_;
    /**
     * <code>optional .com.hanschen.multidex.bean.SmartSocket smart_socket = 14;</code>
     */
    public boolean hasSmartSocket() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional .com.hanschen.multidex.bean.SmartSocket smart_socket = 14;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.SmartSocket getSmartSocket() {
      return smartSocket_ == null ? com.hanschen.multidex.bean.TestBean7.SmartSocket.getDefaultInstance() : smartSocket_;
    }
    /**
     * <code>optional .com.hanschen.multidex.bean.SmartSocket smart_socket = 14;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.SmartSocketOrBuilder getSmartSocketOrBuilder() {
      return smartSocket_ == null ? com.hanschen.multidex.bean.TestBean7.SmartSocket.getDefaultInstance() : smartSocket_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasAccount()) {
        if (!getAccount().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasGuestWifi()) {
        if (!getGuestWifi().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasParentControlTask()) {
        if (!getParentControlTask().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasSuperAdmin()) {
        if (!getSuperAdmin().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasWanSetting()) {
        if (!getWanSetting().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasWifiSetting()) {
        if (!getWifiSetting().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasSpeedLimit()) {
        if (!getSpeedLimit().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasSmartSocket()) {
        if (!getSmartSocket().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      for (int i = 0; i < authorizationList_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, authorizationList_.getRaw(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(2, getAccount());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(3, wifiMode_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(4, getGuestWifi());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, macAddr_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(6, getParentControlTask());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(7, getSuperAdmin());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeEnum(8, smartBandwidth_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(9, getWanSetting());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(10, getWifiSetting());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeEnum(11, powerStatus_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(12, getSpeedLimit());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeEnum(13, homeShareMode_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeMessage(14, getSmartSocket());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < authorizationList_.size(); i++) {
          dataSize += computeStringSizeNoTag(authorizationList_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getAuthorizationListList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(2, getAccount());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
                .computeEnumSize(3, wifiMode_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(4, getGuestWifi());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, macAddr_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(6, getParentControlTask());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(7, getSuperAdmin());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
                .computeEnumSize(8, smartBandwidth_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(9, getWanSetting());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(10, getWifiSetting());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
                .computeEnumSize(11, powerStatus_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(12, getSpeedLimit());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
                .computeEnumSize(13, homeShareMode_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(14, getSmartSocket());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.hanschen.multidex.bean.TestBean7.RequestParam)) {
        return super.equals(obj);
      }
      com.hanschen.multidex.bean.TestBean7.RequestParam other = (com.hanschen.multidex.bean.TestBean7.RequestParam) obj;

      boolean result = true;
      result = result && getAuthorizationListList()
              .equals(other.getAuthorizationListList());
      result = result && (hasAccount() == other.hasAccount());
      if (hasAccount()) {
        result = result && getAccount()
                .equals(other.getAccount());
      }
      result = result && (hasWifiMode() == other.hasWifiMode());
      if (hasWifiMode()) {
        result = result && wifiMode_ == other.wifiMode_;
      }
      result = result && (hasGuestWifi() == other.hasGuestWifi());
      if (hasGuestWifi()) {
        result = result && getGuestWifi()
                .equals(other.getGuestWifi());
      }
      result = result && (hasMacAddr() == other.hasMacAddr());
      if (hasMacAddr()) {
        result = result && getMacAddr()
                .equals(other.getMacAddr());
      }
      result = result && (hasParentControlTask() == other.hasParentControlTask());
      if (hasParentControlTask()) {
        result = result && getParentControlTask()
                .equals(other.getParentControlTask());
      }
      result = result && (hasSuperAdmin() == other.hasSuperAdmin());
      if (hasSuperAdmin()) {
        result = result && getSuperAdmin()
                .equals(other.getSuperAdmin());
      }
      result = result && (hasSmartBandwidth() == other.hasSmartBandwidth());
      if (hasSmartBandwidth()) {
        result = result && smartBandwidth_ == other.smartBandwidth_;
      }
      result = result && (hasWanSetting() == other.hasWanSetting());
      if (hasWanSetting()) {
        result = result && getWanSetting()
                .equals(other.getWanSetting());
      }
      result = result && (hasWifiSetting() == other.hasWifiSetting());
      if (hasWifiSetting()) {
        result = result && getWifiSetting()
                .equals(other.getWifiSetting());
      }
      result = result && (hasPowerStatus() == other.hasPowerStatus());
      if (hasPowerStatus()) {
        result = result && powerStatus_ == other.powerStatus_;
      }
      result = result && (hasSpeedLimit() == other.hasSpeedLimit());
      if (hasSpeedLimit()) {
        result = result && getSpeedLimit()
                .equals(other.getSpeedLimit());
      }
      result = result && (hasHomeShareMode() == other.hasHomeShareMode());
      if (hasHomeShareMode()) {
        result = result && homeShareMode_ == other.homeShareMode_;
      }
      result = result && (hasSmartSocket() == other.hasSmartSocket());
      if (hasSmartSocket()) {
        result = result && getSmartSocket()
                .equals(other.getSmartSocket());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getAuthorizationListCount() > 0) {
        hash = (37 * hash) + AUTHORIZATION_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getAuthorizationListList().hashCode();
      }
      if (hasAccount()) {
        hash = (37 * hash) + ACCOUNT_FIELD_NUMBER;
        hash = (53 * hash) + getAccount().hashCode();
      }
      if (hasWifiMode()) {
        hash = (37 * hash) + WIFI_MODE_FIELD_NUMBER;
        hash = (53 * hash) + wifiMode_;
      }
      if (hasGuestWifi()) {
        hash = (37 * hash) + GUEST_WIFI_FIELD_NUMBER;
        hash = (53 * hash) + getGuestWifi().hashCode();
      }
      if (hasMacAddr()) {
        hash = (37 * hash) + MAC_ADDR_FIELD_NUMBER;
        hash = (53 * hash) + getMacAddr().hashCode();
      }
      if (hasParentControlTask()) {
        hash = (37 * hash) + PARENT_CONTROL_TASK_FIELD_NUMBER;
        hash = (53 * hash) + getParentControlTask().hashCode();
      }
      if (hasSuperAdmin()) {
        hash = (37 * hash) + SUPER_ADMIN_FIELD_NUMBER;
        hash = (53 * hash) + getSuperAdmin().hashCode();
      }
      if (hasSmartBandwidth()) {
        hash = (37 * hash) + SMART_BANDWIDTH_FIELD_NUMBER;
        hash = (53 * hash) + smartBandwidth_;
      }
      if (hasWanSetting()) {
        hash = (37 * hash) + WAN_SETTING_FIELD_NUMBER;
        hash = (53 * hash) + getWanSetting().hashCode();
      }
      if (hasWifiSetting()) {
        hash = (37 * hash) + WIFI_SETTING_FIELD_NUMBER;
        hash = (53 * hash) + getWifiSetting().hashCode();
      }
      if (hasPowerStatus()) {
        hash = (37 * hash) + POWER_STATUS_FIELD_NUMBER;
        hash = (53 * hash) + powerStatus_;
      }
      if (hasSpeedLimit()) {
        hash = (37 * hash) + SPEED_LIMIT_FIELD_NUMBER;
        hash = (53 * hash) + getSpeedLimit().hashCode();
      }
      if (hasHomeShareMode()) {
        hash = (37 * hash) + HOME_SHARE_MODE_FIELD_NUMBER;
        hash = (53 * hash) + homeShareMode_;
      }
      if (hasSmartSocket()) {
        hash = (37 * hash) + SMART_SOCKET_FIELD_NUMBER;
        hash = (53 * hash) + getSmartSocket().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.hanschen.multidex.bean.TestBean7.RequestParam parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hanschen.multidex.bean.TestBean7.RequestParam parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.RequestParam parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hanschen.multidex.bean.TestBean7.RequestParam parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.RequestParam parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.RequestParam parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.RequestParam parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.RequestParam parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.RequestParam parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.RequestParam parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.hanschen.multidex.bean.TestBean7.RequestParam prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.hanschen.multidex.bean.RequestParam}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:com.hanschen.multidex.bean.RequestParam)
            com.hanschen.multidex.bean.TestBean7.RequestParamOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_RequestParam_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_RequestParam_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        com.hanschen.multidex.bean.TestBean7.RequestParam.class, com.hanschen.multidex.bean.TestBean7.RequestParam.Builder.class);
      }

      // Construct using com.hanschen.multidex.bean.TestBean7.RequestParam.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getAccountFieldBuilder();
          getGuestWifiFieldBuilder();
          getParentControlTaskFieldBuilder();
          getSuperAdminFieldBuilder();
          getWanSettingFieldBuilder();
          getWifiSettingFieldBuilder();
          getSpeedLimitFieldBuilder();
          getSmartSocketFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        authorizationList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (accountBuilder_ == null) {
          account_ = null;
        } else {
          accountBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        wifiMode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (guestWifiBuilder_ == null) {
          guestWifi_ = null;
        } else {
          guestWifiBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        macAddr_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        if (parentControlTaskBuilder_ == null) {
          parentControlTask_ = null;
        } else {
          parentControlTaskBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (superAdminBuilder_ == null) {
          superAdmin_ = null;
        } else {
          superAdminBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        smartBandwidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        if (wanSettingBuilder_ == null) {
          wanSetting_ = null;
        } else {
          wanSettingBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        if (wifiSettingBuilder_ == null) {
          wifiSetting_ = null;
        } else {
          wifiSettingBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        powerStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        if (speedLimitBuilder_ == null) {
          speedLimit_ = null;
        } else {
          speedLimitBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        homeShareMode_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        if (smartSocketBuilder_ == null) {
          smartSocket_ = null;
        } else {
          smartSocketBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_RequestParam_descriptor;
      }

      public com.hanschen.multidex.bean.TestBean7.RequestParam getDefaultInstanceForType() {
        return com.hanschen.multidex.bean.TestBean7.RequestParam.getDefaultInstance();
      }

      public com.hanschen.multidex.bean.TestBean7.RequestParam build() {
        com.hanschen.multidex.bean.TestBean7.RequestParam result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hanschen.multidex.bean.TestBean7.RequestParam buildPartial() {
        com.hanschen.multidex.bean.TestBean7.RequestParam result = new com.hanschen.multidex.bean.TestBean7.RequestParam(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          authorizationList_ = authorizationList_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.authorizationList_ = authorizationList_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        if (accountBuilder_ == null) {
          result.account_ = account_;
        } else {
          result.account_ = accountBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.wifiMode_ = wifiMode_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        if (guestWifiBuilder_ == null) {
          result.guestWifi_ = guestWifi_;
        } else {
          result.guestWifi_ = guestWifiBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.macAddr_ = macAddr_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        if (parentControlTaskBuilder_ == null) {
          result.parentControlTask_ = parentControlTask_;
        } else {
          result.parentControlTask_ = parentControlTaskBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        if (superAdminBuilder_ == null) {
          result.superAdmin_ = superAdmin_;
        } else {
          result.superAdmin_ = superAdminBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.smartBandwidth_ = smartBandwidth_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        if (wanSettingBuilder_ == null) {
          result.wanSetting_ = wanSetting_;
        } else {
          result.wanSetting_ = wanSettingBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        if (wifiSettingBuilder_ == null) {
          result.wifiSetting_ = wifiSetting_;
        } else {
          result.wifiSetting_ = wifiSettingBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000200;
        }
        result.powerStatus_ = powerStatus_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000400;
        }
        if (speedLimitBuilder_ == null) {
          result.speedLimit_ = speedLimit_;
        } else {
          result.speedLimit_ = speedLimitBuilder_.build();
        }
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.homeShareMode_ = homeShareMode_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00001000;
        }
        if (smartSocketBuilder_ == null) {
          result.smartSocket_ = smartSocket_;
        } else {
          result.smartSocket_ = smartSocketBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hanschen.multidex.bean.TestBean7.RequestParam) {
          return mergeFrom((com.hanschen.multidex.bean.TestBean7.RequestParam)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hanschen.multidex.bean.TestBean7.RequestParam other) {
        if (other == com.hanschen.multidex.bean.TestBean7.RequestParam.getDefaultInstance()) return this;
        if (!other.authorizationList_.isEmpty()) {
          if (authorizationList_.isEmpty()) {
            authorizationList_ = other.authorizationList_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureAuthorizationListIsMutable();
            authorizationList_.addAll(other.authorizationList_);
          }
          onChanged();
        }
        if (other.hasAccount()) {
          mergeAccount(other.getAccount());
        }
        if (other.hasWifiMode()) {
          setWifiMode(other.getWifiMode());
        }
        if (other.hasGuestWifi()) {
          mergeGuestWifi(other.getGuestWifi());
        }
        if (other.hasMacAddr()) {
          bitField0_ |= 0x00000010;
          macAddr_ = other.macAddr_;
          onChanged();
        }
        if (other.hasParentControlTask()) {
          mergeParentControlTask(other.getParentControlTask());
        }
        if (other.hasSuperAdmin()) {
          mergeSuperAdmin(other.getSuperAdmin());
        }
        if (other.hasSmartBandwidth()) {
          setSmartBandwidth(other.getSmartBandwidth());
        }
        if (other.hasWanSetting()) {
          mergeWanSetting(other.getWanSetting());
        }
        if (other.hasWifiSetting()) {
          mergeWifiSetting(other.getWifiSetting());
        }
        if (other.hasPowerStatus()) {
          setPowerStatus(other.getPowerStatus());
        }
        if (other.hasSpeedLimit()) {
          mergeSpeedLimit(other.getSpeedLimit());
        }
        if (other.hasHomeShareMode()) {
          setHomeShareMode(other.getHomeShareMode());
        }
        if (other.hasSmartSocket()) {
          mergeSmartSocket(other.getSmartSocket());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (hasAccount()) {
          if (!getAccount().isInitialized()) {
            return false;
          }
        }
        if (hasGuestWifi()) {
          if (!getGuestWifi().isInitialized()) {
            return false;
          }
        }
        if (hasParentControlTask()) {
          if (!getParentControlTask().isInitialized()) {
            return false;
          }
        }
        if (hasSuperAdmin()) {
          if (!getSuperAdmin().isInitialized()) {
            return false;
          }
        }
        if (hasWanSetting()) {
          if (!getWanSetting().isInitialized()) {
            return false;
          }
        }
        if (hasWifiSetting()) {
          if (!getWifiSetting().isInitialized()) {
            return false;
          }
        }
        if (hasSpeedLimit()) {
          if (!getSpeedLimit().isInitialized()) {
            return false;
          }
        }
        if (hasSmartSocket()) {
          if (!getSmartSocket().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        com.hanschen.multidex.bean.TestBean7.RequestParam parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hanschen.multidex.bean.TestBean7.RequestParam) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringList authorizationList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureAuthorizationListIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          authorizationList_ = new com.google.protobuf.LazyStringArrayList(authorizationList_);
          bitField0_ |= 0x00000001;
        }
      }
      /**
       * <code>repeated string authorization_list = 1;</code>
       */
      public com.google.protobuf.ProtocolStringList
      getAuthorizationListList() {
        return authorizationList_.getUnmodifiableView();
      }
      /**
       * <code>repeated string authorization_list = 1;</code>
       */
      public int getAuthorizationListCount() {
        return authorizationList_.size();
      }
      /**
       * <code>repeated string authorization_list = 1;</code>
       */
      public java.lang.String getAuthorizationList(int index) {
        return authorizationList_.get(index);
      }
      /**
       * <code>repeated string authorization_list = 1;</code>
       */
      public com.google.protobuf.ByteString
      getAuthorizationListBytes(int index) {
        return authorizationList_.getByteString(index);
      }
      /**
       * <code>repeated string authorization_list = 1;</code>
       */
      public Builder setAuthorizationList(
              int index, java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAuthorizationListIsMutable();
        authorizationList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string authorization_list = 1;</code>
       */
      public Builder addAuthorizationList(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAuthorizationListIsMutable();
        authorizationList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string authorization_list = 1;</code>
       */
      public Builder addAllAuthorizationList(
              java.lang.Iterable<java.lang.String> values) {
        ensureAuthorizationListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, authorizationList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string authorization_list = 1;</code>
       */
      public Builder clearAuthorizationList() {
        authorizationList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string authorization_list = 1;</code>
       */
      public Builder addAuthorizationListBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAuthorizationListIsMutable();
        authorizationList_.add(value);
        onChanged();
        return this;
      }

      private com.hanschen.multidex.bean.TestBean7.CloudAccount account_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.CloudAccount, com.hanschen.multidex.bean.TestBean7.CloudAccount.Builder, com.hanschen.multidex.bean.TestBean7.CloudAccountOrBuilder> accountBuilder_;
      /**
       * <code>optional .com.hanschen.multidex.bean.CloudAccount account = 2;</code>
       */
      public boolean hasAccount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.CloudAccount account = 2;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.CloudAccount getAccount() {
        if (accountBuilder_ == null) {
          return account_ == null ? com.hanschen.multidex.bean.TestBean7.CloudAccount.getDefaultInstance() : account_;
        } else {
          return accountBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.CloudAccount account = 2;</code>
       */
      public Builder setAccount(com.hanschen.multidex.bean.TestBean7.CloudAccount value) {
        if (accountBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          account_ = value;
          onChanged();
        } else {
          accountBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.CloudAccount account = 2;</code>
       */
      public Builder setAccount(
              com.hanschen.multidex.bean.TestBean7.CloudAccount.Builder builderForValue) {
        if (accountBuilder_ == null) {
          account_ = builderForValue.build();
          onChanged();
        } else {
          accountBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.CloudAccount account = 2;</code>
       */
      public Builder mergeAccount(com.hanschen.multidex.bean.TestBean7.CloudAccount value) {
        if (accountBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
                  account_ != null &&
                  account_ != com.hanschen.multidex.bean.TestBean7.CloudAccount.getDefaultInstance()) {
            account_ =
                    com.hanschen.multidex.bean.TestBean7.CloudAccount.newBuilder(account_).mergeFrom(value).buildPartial();
          } else {
            account_ = value;
          }
          onChanged();
        } else {
          accountBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.CloudAccount account = 2;</code>
       */
      public Builder clearAccount() {
        if (accountBuilder_ == null) {
          account_ = null;
          onChanged();
        } else {
          accountBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.CloudAccount account = 2;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.CloudAccount.Builder getAccountBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getAccountFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.CloudAccount account = 2;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.CloudAccountOrBuilder getAccountOrBuilder() {
        if (accountBuilder_ != null) {
          return accountBuilder_.getMessageOrBuilder();
        } else {
          return account_ == null ?
                  com.hanschen.multidex.bean.TestBean7.CloudAccount.getDefaultInstance() : account_;
        }
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.CloudAccount account = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.CloudAccount, com.hanschen.multidex.bean.TestBean7.CloudAccount.Builder, com.hanschen.multidex.bean.TestBean7.CloudAccountOrBuilder>
      getAccountFieldBuilder() {
        if (accountBuilder_ == null) {
          accountBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.hanschen.multidex.bean.TestBean7.CloudAccount, com.hanschen.multidex.bean.TestBean7.CloudAccount.Builder, com.hanschen.multidex.bean.TestBean7.CloudAccountOrBuilder>(
                  getAccount(),
                  getParentForChildren(),
                  isClean());
          account_ = null;
        }
        return accountBuilder_;
      }

      private int wifiMode_ = 0;
      /**
       * <code>optional .com.hanschen.multidex.bean.WifiMode wifi_mode = 3;</code>
       */
      public boolean hasWifiMode() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.WifiMode wifi_mode = 3;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.WifiMode getWifiMode() {
        com.hanschen.multidex.bean.TestBean7.WifiMode result = com.hanschen.multidex.bean.TestBean7.WifiMode.valueOf(wifiMode_);
        return result == null ? com.hanschen.multidex.bean.TestBean7.WifiMode.OFF : result;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.WifiMode wifi_mode = 3;</code>
       */
      public Builder setWifiMode(com.hanschen.multidex.bean.TestBean7.WifiMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        wifiMode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.WifiMode wifi_mode = 3;</code>
       */
      public Builder clearWifiMode() {
        bitField0_ = (bitField0_ & ~0x00000004);
        wifiMode_ = 0;
        onChanged();
        return this;
      }

      private com.hanschen.multidex.bean.TestBean7.GuestWifi guestWifi_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.GuestWifi, com.hanschen.multidex.bean.TestBean7.GuestWifi.Builder, com.hanschen.multidex.bean.TestBean7.GuestWifiOrBuilder> guestWifiBuilder_;
      /**
       * <code>optional .com.hanschen.multidex.bean.GuestWifi guest_wifi = 4;</code>
       */
      public boolean hasGuestWifi() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.GuestWifi guest_wifi = 4;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.GuestWifi getGuestWifi() {
        if (guestWifiBuilder_ == null) {
          return guestWifi_ == null ? com.hanschen.multidex.bean.TestBean7.GuestWifi.getDefaultInstance() : guestWifi_;
        } else {
          return guestWifiBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.GuestWifi guest_wifi = 4;</code>
       */
      public Builder setGuestWifi(com.hanschen.multidex.bean.TestBean7.GuestWifi value) {
        if (guestWifiBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          guestWifi_ = value;
          onChanged();
        } else {
          guestWifiBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.GuestWifi guest_wifi = 4;</code>
       */
      public Builder setGuestWifi(
              com.hanschen.multidex.bean.TestBean7.GuestWifi.Builder builderForValue) {
        if (guestWifiBuilder_ == null) {
          guestWifi_ = builderForValue.build();
          onChanged();
        } else {
          guestWifiBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.GuestWifi guest_wifi = 4;</code>
       */
      public Builder mergeGuestWifi(com.hanschen.multidex.bean.TestBean7.GuestWifi value) {
        if (guestWifiBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
                  guestWifi_ != null &&
                  guestWifi_ != com.hanschen.multidex.bean.TestBean7.GuestWifi.getDefaultInstance()) {
            guestWifi_ =
                    com.hanschen.multidex.bean.TestBean7.GuestWifi.newBuilder(guestWifi_).mergeFrom(value).buildPartial();
          } else {
            guestWifi_ = value;
          }
          onChanged();
        } else {
          guestWifiBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.GuestWifi guest_wifi = 4;</code>
       */
      public Builder clearGuestWifi() {
        if (guestWifiBuilder_ == null) {
          guestWifi_ = null;
          onChanged();
        } else {
          guestWifiBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.GuestWifi guest_wifi = 4;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.GuestWifi.Builder getGuestWifiBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getGuestWifiFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.GuestWifi guest_wifi = 4;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.GuestWifiOrBuilder getGuestWifiOrBuilder() {
        if (guestWifiBuilder_ != null) {
          return guestWifiBuilder_.getMessageOrBuilder();
        } else {
          return guestWifi_ == null ?
                  com.hanschen.multidex.bean.TestBean7.GuestWifi.getDefaultInstance() : guestWifi_;
        }
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.GuestWifi guest_wifi = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.GuestWifi, com.hanschen.multidex.bean.TestBean7.GuestWifi.Builder, com.hanschen.multidex.bean.TestBean7.GuestWifiOrBuilder>
      getGuestWifiFieldBuilder() {
        if (guestWifiBuilder_ == null) {
          guestWifiBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.hanschen.multidex.bean.TestBean7.GuestWifi, com.hanschen.multidex.bean.TestBean7.GuestWifi.Builder, com.hanschen.multidex.bean.TestBean7.GuestWifiOrBuilder>(
                  getGuestWifi(),
                  getParentForChildren(),
                  isClean());
          guestWifi_ = null;
        }
        return guestWifiBuilder_;
      }

      private java.lang.Object macAddr_ = "";
      /**
       * <code>optional string mac_addr = 5;</code>
       */
      public boolean hasMacAddr() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string mac_addr = 5;</code>
       */
      public java.lang.String getMacAddr() {
        java.lang.Object ref = macAddr_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            macAddr_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string mac_addr = 5;</code>
       */
      public com.google.protobuf.ByteString
      getMacAddrBytes() {
        java.lang.Object ref = macAddr_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          macAddr_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string mac_addr = 5;</code>
       */
      public Builder setMacAddr(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        macAddr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string mac_addr = 5;</code>
       */
      public Builder clearMacAddr() {
        bitField0_ = (bitField0_ & ~0x00000010);
        macAddr_ = getDefaultInstance().getMacAddr();
        onChanged();
        return this;
      }
      /**
       * <code>optional string mac_addr = 5;</code>
       */
      public Builder setMacAddrBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        macAddr_ = value;
        onChanged();
        return this;
      }

      private com.hanschen.multidex.bean.TestBean7.ParentControlTask parentControlTask_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.ParentControlTask, com.hanschen.multidex.bean.TestBean7.ParentControlTask.Builder, com.hanschen.multidex.bean.TestBean7.ParentControlTaskOrBuilder> parentControlTaskBuilder_;
      /**
       * <code>optional .com.hanschen.multidex.bean.ParentControlTask parent_control_task = 6;</code>
       */
      public boolean hasParentControlTask() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.ParentControlTask parent_control_task = 6;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.ParentControlTask getParentControlTask() {
        if (parentControlTaskBuilder_ == null) {
          return parentControlTask_ == null ? com.hanschen.multidex.bean.TestBean7.ParentControlTask.getDefaultInstance() : parentControlTask_;
        } else {
          return parentControlTaskBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.ParentControlTask parent_control_task = 6;</code>
       */
      public Builder setParentControlTask(com.hanschen.multidex.bean.TestBean7.ParentControlTask value) {
        if (parentControlTaskBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          parentControlTask_ = value;
          onChanged();
        } else {
          parentControlTaskBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.ParentControlTask parent_control_task = 6;</code>
       */
      public Builder setParentControlTask(
              com.hanschen.multidex.bean.TestBean7.ParentControlTask.Builder builderForValue) {
        if (parentControlTaskBuilder_ == null) {
          parentControlTask_ = builderForValue.build();
          onChanged();
        } else {
          parentControlTaskBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.ParentControlTask parent_control_task = 6;</code>
       */
      public Builder mergeParentControlTask(com.hanschen.multidex.bean.TestBean7.ParentControlTask value) {
        if (parentControlTaskBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
                  parentControlTask_ != null &&
                  parentControlTask_ != com.hanschen.multidex.bean.TestBean7.ParentControlTask.getDefaultInstance()) {
            parentControlTask_ =
                    com.hanschen.multidex.bean.TestBean7.ParentControlTask.newBuilder(parentControlTask_).mergeFrom(value).buildPartial();
          } else {
            parentControlTask_ = value;
          }
          onChanged();
        } else {
          parentControlTaskBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.ParentControlTask parent_control_task = 6;</code>
       */
      public Builder clearParentControlTask() {
        if (parentControlTaskBuilder_ == null) {
          parentControlTask_ = null;
          onChanged();
        } else {
          parentControlTaskBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.ParentControlTask parent_control_task = 6;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.ParentControlTask.Builder getParentControlTaskBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getParentControlTaskFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.ParentControlTask parent_control_task = 6;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.ParentControlTaskOrBuilder getParentControlTaskOrBuilder() {
        if (parentControlTaskBuilder_ != null) {
          return parentControlTaskBuilder_.getMessageOrBuilder();
        } else {
          return parentControlTask_ == null ?
                  com.hanschen.multidex.bean.TestBean7.ParentControlTask.getDefaultInstance() : parentControlTask_;
        }
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.ParentControlTask parent_control_task = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.ParentControlTask, com.hanschen.multidex.bean.TestBean7.ParentControlTask.Builder, com.hanschen.multidex.bean.TestBean7.ParentControlTaskOrBuilder>
      getParentControlTaskFieldBuilder() {
        if (parentControlTaskBuilder_ == null) {
          parentControlTaskBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.hanschen.multidex.bean.TestBean7.ParentControlTask, com.hanschen.multidex.bean.TestBean7.ParentControlTask.Builder, com.hanschen.multidex.bean.TestBean7.ParentControlTaskOrBuilder>(
                  getParentControlTask(),
                  getParentForChildren(),
                  isClean());
          parentControlTask_ = null;
        }
        return parentControlTaskBuilder_;
      }

      private com.hanschen.multidex.bean.TestBean7.SuperAdmin superAdmin_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.SuperAdmin, com.hanschen.multidex.bean.TestBean7.SuperAdmin.Builder, com.hanschen.multidex.bean.TestBean7.SuperAdminOrBuilder> superAdminBuilder_;
      /**
       * <code>optional .com.hanschen.multidex.bean.SuperAdmin super_admin = 7;</code>
       */
      public boolean hasSuperAdmin() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.SuperAdmin super_admin = 7;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.SuperAdmin getSuperAdmin() {
        if (superAdminBuilder_ == null) {
          return superAdmin_ == null ? com.hanschen.multidex.bean.TestBean7.SuperAdmin.getDefaultInstance() : superAdmin_;
        } else {
          return superAdminBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.SuperAdmin super_admin = 7;</code>
       */
      public Builder setSuperAdmin(com.hanschen.multidex.bean.TestBean7.SuperAdmin value) {
        if (superAdminBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          superAdmin_ = value;
          onChanged();
        } else {
          superAdminBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.SuperAdmin super_admin = 7;</code>
       */
      public Builder setSuperAdmin(
              com.hanschen.multidex.bean.TestBean7.SuperAdmin.Builder builderForValue) {
        if (superAdminBuilder_ == null) {
          superAdmin_ = builderForValue.build();
          onChanged();
        } else {
          superAdminBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.SuperAdmin super_admin = 7;</code>
       */
      public Builder mergeSuperAdmin(com.hanschen.multidex.bean.TestBean7.SuperAdmin value) {
        if (superAdminBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
                  superAdmin_ != null &&
                  superAdmin_ != com.hanschen.multidex.bean.TestBean7.SuperAdmin.getDefaultInstance()) {
            superAdmin_ =
                    com.hanschen.multidex.bean.TestBean7.SuperAdmin.newBuilder(superAdmin_).mergeFrom(value).buildPartial();
          } else {
            superAdmin_ = value;
          }
          onChanged();
        } else {
          superAdminBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.SuperAdmin super_admin = 7;</code>
       */
      public Builder clearSuperAdmin() {
        if (superAdminBuilder_ == null) {
          superAdmin_ = null;
          onChanged();
        } else {
          superAdminBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.SuperAdmin super_admin = 7;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.SuperAdmin.Builder getSuperAdminBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getSuperAdminFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.SuperAdmin super_admin = 7;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.SuperAdminOrBuilder getSuperAdminOrBuilder() {
        if (superAdminBuilder_ != null) {
          return superAdminBuilder_.getMessageOrBuilder();
        } else {
          return superAdmin_ == null ?
                  com.hanschen.multidex.bean.TestBean7.SuperAdmin.getDefaultInstance() : superAdmin_;
        }
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.SuperAdmin super_admin = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.SuperAdmin, com.hanschen.multidex.bean.TestBean7.SuperAdmin.Builder, com.hanschen.multidex.bean.TestBean7.SuperAdminOrBuilder>
      getSuperAdminFieldBuilder() {
        if (superAdminBuilder_ == null) {
          superAdminBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.hanschen.multidex.bean.TestBean7.SuperAdmin, com.hanschen.multidex.bean.TestBean7.SuperAdmin.Builder, com.hanschen.multidex.bean.TestBean7.SuperAdminOrBuilder>(
                  getSuperAdmin(),
                  getParentForChildren(),
                  isClean());
          superAdmin_ = null;
        }
        return superAdminBuilder_;
      }

      private int smartBandwidth_ = 0;
      /**
       * <code>optional .com.hanschen.multidex.bean.SmartBandwidth smart_bandwidth = 8;</code>
       */
      public boolean hasSmartBandwidth() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.SmartBandwidth smart_bandwidth = 8;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.SmartBandwidth getSmartBandwidth() {
        com.hanschen.multidex.bean.TestBean7.SmartBandwidth result = com.hanschen.multidex.bean.TestBean7.SmartBandwidth.valueOf(smartBandwidth_);
        return result == null ? com.hanschen.multidex.bean.TestBean7.SmartBandwidth.EQUALITY : result;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.SmartBandwidth smart_bandwidth = 8;</code>
       */
      public Builder setSmartBandwidth(com.hanschen.multidex.bean.TestBean7.SmartBandwidth value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000080;
        smartBandwidth_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.SmartBandwidth smart_bandwidth = 8;</code>
       */
      public Builder clearSmartBandwidth() {
        bitField0_ = (bitField0_ & ~0x00000080);
        smartBandwidth_ = 0;
        onChanged();
        return this;
      }

      private com.hanschen.multidex.bean.TestBean7.WanSetting wanSetting_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.WanSetting, com.hanschen.multidex.bean.TestBean7.WanSetting.Builder, com.hanschen.multidex.bean.TestBean7.WanSettingOrBuilder> wanSettingBuilder_;
      /**
       * <code>optional .com.hanschen.multidex.bean.WanSetting wan_setting = 9;</code>
       */
      public boolean hasWanSetting() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.WanSetting wan_setting = 9;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.WanSetting getWanSetting() {
        if (wanSettingBuilder_ == null) {
          return wanSetting_ == null ? com.hanschen.multidex.bean.TestBean7.WanSetting.getDefaultInstance() : wanSetting_;
        } else {
          return wanSettingBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.WanSetting wan_setting = 9;</code>
       */
      public Builder setWanSetting(com.hanschen.multidex.bean.TestBean7.WanSetting value) {
        if (wanSettingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          wanSetting_ = value;
          onChanged();
        } else {
          wanSettingBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.WanSetting wan_setting = 9;</code>
       */
      public Builder setWanSetting(
              com.hanschen.multidex.bean.TestBean7.WanSetting.Builder builderForValue) {
        if (wanSettingBuilder_ == null) {
          wanSetting_ = builderForValue.build();
          onChanged();
        } else {
          wanSettingBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.WanSetting wan_setting = 9;</code>
       */
      public Builder mergeWanSetting(com.hanschen.multidex.bean.TestBean7.WanSetting value) {
        if (wanSettingBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100) &&
                  wanSetting_ != null &&
                  wanSetting_ != com.hanschen.multidex.bean.TestBean7.WanSetting.getDefaultInstance()) {
            wanSetting_ =
                    com.hanschen.multidex.bean.TestBean7.WanSetting.newBuilder(wanSetting_).mergeFrom(value).buildPartial();
          } else {
            wanSetting_ = value;
          }
          onChanged();
        } else {
          wanSettingBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.WanSetting wan_setting = 9;</code>
       */
      public Builder clearWanSetting() {
        if (wanSettingBuilder_ == null) {
          wanSetting_ = null;
          onChanged();
        } else {
          wanSettingBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.WanSetting wan_setting = 9;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.WanSetting.Builder getWanSettingBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getWanSettingFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.WanSetting wan_setting = 9;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.WanSettingOrBuilder getWanSettingOrBuilder() {
        if (wanSettingBuilder_ != null) {
          return wanSettingBuilder_.getMessageOrBuilder();
        } else {
          return wanSetting_ == null ?
                  com.hanschen.multidex.bean.TestBean7.WanSetting.getDefaultInstance() : wanSetting_;
        }
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.WanSetting wan_setting = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.WanSetting, com.hanschen.multidex.bean.TestBean7.WanSetting.Builder, com.hanschen.multidex.bean.TestBean7.WanSettingOrBuilder>
      getWanSettingFieldBuilder() {
        if (wanSettingBuilder_ == null) {
          wanSettingBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.hanschen.multidex.bean.TestBean7.WanSetting, com.hanschen.multidex.bean.TestBean7.WanSetting.Builder, com.hanschen.multidex.bean.TestBean7.WanSettingOrBuilder>(
                  getWanSetting(),
                  getParentForChildren(),
                  isClean());
          wanSetting_ = null;
        }
        return wanSettingBuilder_;
      }

      private com.hanschen.multidex.bean.TestBean7.WifiSetting wifiSetting_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.WifiSetting, com.hanschen.multidex.bean.TestBean7.WifiSetting.Builder, com.hanschen.multidex.bean.TestBean7.WifiSettingOrBuilder> wifiSettingBuilder_;
      /**
       * <code>optional .com.hanschen.multidex.bean.WifiSetting wifi_setting = 10;</code>
       */
      public boolean hasWifiSetting() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.WifiSetting wifi_setting = 10;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.WifiSetting getWifiSetting() {
        if (wifiSettingBuilder_ == null) {
          return wifiSetting_ == null ? com.hanschen.multidex.bean.TestBean7.WifiSetting.getDefaultInstance() : wifiSetting_;
        } else {
          return wifiSettingBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.WifiSetting wifi_setting = 10;</code>
       */
      public Builder setWifiSetting(com.hanschen.multidex.bean.TestBean7.WifiSetting value) {
        if (wifiSettingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          wifiSetting_ = value;
          onChanged();
        } else {
          wifiSettingBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.WifiSetting wifi_setting = 10;</code>
       */
      public Builder setWifiSetting(
              com.hanschen.multidex.bean.TestBean7.WifiSetting.Builder builderForValue) {
        if (wifiSettingBuilder_ == null) {
          wifiSetting_ = builderForValue.build();
          onChanged();
        } else {
          wifiSettingBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.WifiSetting wifi_setting = 10;</code>
       */
      public Builder mergeWifiSetting(com.hanschen.multidex.bean.TestBean7.WifiSetting value) {
        if (wifiSettingBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200) &&
                  wifiSetting_ != null &&
                  wifiSetting_ != com.hanschen.multidex.bean.TestBean7.WifiSetting.getDefaultInstance()) {
            wifiSetting_ =
                    com.hanschen.multidex.bean.TestBean7.WifiSetting.newBuilder(wifiSetting_).mergeFrom(value).buildPartial();
          } else {
            wifiSetting_ = value;
          }
          onChanged();
        } else {
          wifiSettingBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.WifiSetting wifi_setting = 10;</code>
       */
      public Builder clearWifiSetting() {
        if (wifiSettingBuilder_ == null) {
          wifiSetting_ = null;
          onChanged();
        } else {
          wifiSettingBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.WifiSetting wifi_setting = 10;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.WifiSetting.Builder getWifiSettingBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getWifiSettingFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.WifiSetting wifi_setting = 10;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.WifiSettingOrBuilder getWifiSettingOrBuilder() {
        if (wifiSettingBuilder_ != null) {
          return wifiSettingBuilder_.getMessageOrBuilder();
        } else {
          return wifiSetting_ == null ?
                  com.hanschen.multidex.bean.TestBean7.WifiSetting.getDefaultInstance() : wifiSetting_;
        }
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.WifiSetting wifi_setting = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.WifiSetting, com.hanschen.multidex.bean.TestBean7.WifiSetting.Builder, com.hanschen.multidex.bean.TestBean7.WifiSettingOrBuilder>
      getWifiSettingFieldBuilder() {
        if (wifiSettingBuilder_ == null) {
          wifiSettingBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.hanschen.multidex.bean.TestBean7.WifiSetting, com.hanschen.multidex.bean.TestBean7.WifiSetting.Builder, com.hanschen.multidex.bean.TestBean7.WifiSettingOrBuilder>(
                  getWifiSetting(),
                  getParentForChildren(),
                  isClean());
          wifiSetting_ = null;
        }
        return wifiSettingBuilder_;
      }

      private int powerStatus_ = 0;
      /**
       * <code>optional .com.hanschen.multidex.bean.PowerStatus power_status = 11;</code>
       */
      public boolean hasPowerStatus() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.PowerStatus power_status = 11;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.PowerStatus getPowerStatus() {
        com.hanschen.multidex.bean.TestBean7.PowerStatus result = com.hanschen.multidex.bean.TestBean7.PowerStatus.valueOf(powerStatus_);
        return result == null ? com.hanschen.multidex.bean.TestBean7.PowerStatus.POWER_OFF : result;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.PowerStatus power_status = 11;</code>
       */
      public Builder setPowerStatus(com.hanschen.multidex.bean.TestBean7.PowerStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000400;
        powerStatus_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.PowerStatus power_status = 11;</code>
       */
      public Builder clearPowerStatus() {
        bitField0_ = (bitField0_ & ~0x00000400);
        powerStatus_ = 0;
        onChanged();
        return this;
      }

      private com.hanschen.multidex.bean.TestBean7.SpeedLimit speedLimit_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.SpeedLimit, com.hanschen.multidex.bean.TestBean7.SpeedLimit.Builder, com.hanschen.multidex.bean.TestBean7.SpeedLimitOrBuilder> speedLimitBuilder_;
      /**
       * <code>optional .com.hanschen.multidex.bean.SpeedLimit speed_limit = 12;</code>
       */
      public boolean hasSpeedLimit() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.SpeedLimit speed_limit = 12;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.SpeedLimit getSpeedLimit() {
        if (speedLimitBuilder_ == null) {
          return speedLimit_ == null ? com.hanschen.multidex.bean.TestBean7.SpeedLimit.getDefaultInstance() : speedLimit_;
        } else {
          return speedLimitBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.SpeedLimit speed_limit = 12;</code>
       */
      public Builder setSpeedLimit(com.hanschen.multidex.bean.TestBean7.SpeedLimit value) {
        if (speedLimitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          speedLimit_ = value;
          onChanged();
        } else {
          speedLimitBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.SpeedLimit speed_limit = 12;</code>
       */
      public Builder setSpeedLimit(
              com.hanschen.multidex.bean.TestBean7.SpeedLimit.Builder builderForValue) {
        if (speedLimitBuilder_ == null) {
          speedLimit_ = builderForValue.build();
          onChanged();
        } else {
          speedLimitBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.SpeedLimit speed_limit = 12;</code>
       */
      public Builder mergeSpeedLimit(com.hanschen.multidex.bean.TestBean7.SpeedLimit value) {
        if (speedLimitBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800) &&
                  speedLimit_ != null &&
                  speedLimit_ != com.hanschen.multidex.bean.TestBean7.SpeedLimit.getDefaultInstance()) {
            speedLimit_ =
                    com.hanschen.multidex.bean.TestBean7.SpeedLimit.newBuilder(speedLimit_).mergeFrom(value).buildPartial();
          } else {
            speedLimit_ = value;
          }
          onChanged();
        } else {
          speedLimitBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.SpeedLimit speed_limit = 12;</code>
       */
      public Builder clearSpeedLimit() {
        if (speedLimitBuilder_ == null) {
          speedLimit_ = null;
          onChanged();
        } else {
          speedLimitBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.SpeedLimit speed_limit = 12;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.SpeedLimit.Builder getSpeedLimitBuilder() {
        bitField0_ |= 0x00000800;
        onChanged();
        return getSpeedLimitFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.SpeedLimit speed_limit = 12;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.SpeedLimitOrBuilder getSpeedLimitOrBuilder() {
        if (speedLimitBuilder_ != null) {
          return speedLimitBuilder_.getMessageOrBuilder();
        } else {
          return speedLimit_ == null ?
                  com.hanschen.multidex.bean.TestBean7.SpeedLimit.getDefaultInstance() : speedLimit_;
        }
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.SpeedLimit speed_limit = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.SpeedLimit, com.hanschen.multidex.bean.TestBean7.SpeedLimit.Builder, com.hanschen.multidex.bean.TestBean7.SpeedLimitOrBuilder>
      getSpeedLimitFieldBuilder() {
        if (speedLimitBuilder_ == null) {
          speedLimitBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.hanschen.multidex.bean.TestBean7.SpeedLimit, com.hanschen.multidex.bean.TestBean7.SpeedLimit.Builder, com.hanschen.multidex.bean.TestBean7.SpeedLimitOrBuilder>(
                  getSpeedLimit(),
                  getParentForChildren(),
                  isClean());
          speedLimit_ = null;
        }
        return speedLimitBuilder_;
      }

      private int homeShareMode_ = 0;
      /**
       * <code>optional .com.hanschen.multidex.bean.HomeShareMode home_share_mode = 13;</code>
       */
      public boolean hasHomeShareMode() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.HomeShareMode home_share_mode = 13;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.HomeShareMode getHomeShareMode() {
        com.hanschen.multidex.bean.TestBean7.HomeShareMode result = com.hanschen.multidex.bean.TestBean7.HomeShareMode.valueOf(homeShareMode_);
        return result == null ? com.hanschen.multidex.bean.TestBean7.HomeShareMode.MANUAL : result;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.HomeShareMode home_share_mode = 13;</code>
       */
      public Builder setHomeShareMode(com.hanschen.multidex.bean.TestBean7.HomeShareMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00001000;
        homeShareMode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.HomeShareMode home_share_mode = 13;</code>
       */
      public Builder clearHomeShareMode() {
        bitField0_ = (bitField0_ & ~0x00001000);
        homeShareMode_ = 0;
        onChanged();
        return this;
      }

      private com.hanschen.multidex.bean.TestBean7.SmartSocket smartSocket_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.SmartSocket, com.hanschen.multidex.bean.TestBean7.SmartSocket.Builder, com.hanschen.multidex.bean.TestBean7.SmartSocketOrBuilder> smartSocketBuilder_;
      /**
       * <code>optional .com.hanschen.multidex.bean.SmartSocket smart_socket = 14;</code>
       */
      public boolean hasSmartSocket() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.SmartSocket smart_socket = 14;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.SmartSocket getSmartSocket() {
        if (smartSocketBuilder_ == null) {
          return smartSocket_ == null ? com.hanschen.multidex.bean.TestBean7.SmartSocket.getDefaultInstance() : smartSocket_;
        } else {
          return smartSocketBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.SmartSocket smart_socket = 14;</code>
       */
      public Builder setSmartSocket(com.hanschen.multidex.bean.TestBean7.SmartSocket value) {
        if (smartSocketBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          smartSocket_ = value;
          onChanged();
        } else {
          smartSocketBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.SmartSocket smart_socket = 14;</code>
       */
      public Builder setSmartSocket(
              com.hanschen.multidex.bean.TestBean7.SmartSocket.Builder builderForValue) {
        if (smartSocketBuilder_ == null) {
          smartSocket_ = builderForValue.build();
          onChanged();
        } else {
          smartSocketBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.SmartSocket smart_socket = 14;</code>
       */
      public Builder mergeSmartSocket(com.hanschen.multidex.bean.TestBean7.SmartSocket value) {
        if (smartSocketBuilder_ == null) {
          if (((bitField0_ & 0x00002000) == 0x00002000) &&
                  smartSocket_ != null &&
                  smartSocket_ != com.hanschen.multidex.bean.TestBean7.SmartSocket.getDefaultInstance()) {
            smartSocket_ =
                    com.hanschen.multidex.bean.TestBean7.SmartSocket.newBuilder(smartSocket_).mergeFrom(value).buildPartial();
          } else {
            smartSocket_ = value;
          }
          onChanged();
        } else {
          smartSocketBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.SmartSocket smart_socket = 14;</code>
       */
      public Builder clearSmartSocket() {
        if (smartSocketBuilder_ == null) {
          smartSocket_ = null;
          onChanged();
        } else {
          smartSocketBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.SmartSocket smart_socket = 14;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.SmartSocket.Builder getSmartSocketBuilder() {
        bitField0_ |= 0x00002000;
        onChanged();
        return getSmartSocketFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.SmartSocket smart_socket = 14;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.SmartSocketOrBuilder getSmartSocketOrBuilder() {
        if (smartSocketBuilder_ != null) {
          return smartSocketBuilder_.getMessageOrBuilder();
        } else {
          return smartSocket_ == null ?
                  com.hanschen.multidex.bean.TestBean7.SmartSocket.getDefaultInstance() : smartSocket_;
        }
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.SmartSocket smart_socket = 14;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.SmartSocket, com.hanschen.multidex.bean.TestBean7.SmartSocket.Builder, com.hanschen.multidex.bean.TestBean7.SmartSocketOrBuilder>
      getSmartSocketFieldBuilder() {
        if (smartSocketBuilder_ == null) {
          smartSocketBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.hanschen.multidex.bean.TestBean7.SmartSocket, com.hanschen.multidex.bean.TestBean7.SmartSocket.Builder, com.hanschen.multidex.bean.TestBean7.SmartSocketOrBuilder>(
                  getSmartSocket(),
                  getParentForChildren(),
                  isClean());
          smartSocket_ = null;
        }
        return smartSocketBuilder_;
      }
      public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.hanschen.multidex.bean.RequestParam)
    }

    // @@protoc_insertion_point(class_scope:com.hanschen.multidex.bean.RequestParam)
    private static final com.hanschen.multidex.bean.TestBean7.RequestParam DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.hanschen.multidex.bean.TestBean7.RequestParam();
    }

    public static com.hanschen.multidex.bean.TestBean7.RequestParam getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RequestParam>
            PARSER = new com.google.protobuf.AbstractParser<RequestParam>() {
      public RequestParam parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return new RequestParam(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RequestParam> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RequestParam> getParserForType() {
      return PARSER;
    }

    public com.hanschen.multidex.bean.TestBean7.RequestParam getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AckOrBuilder extends
          // @@protoc_insertion_point(interface_extends:com.hanschen.multidex.bean.Ack)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .com.hanschen.multidex.bean.RequestState state = 1;</code>
     */
    boolean hasState();
    /**
     * <code>required .com.hanschen.multidex.bean.RequestState state = 1;</code>
     */
    com.hanschen.multidex.bean.TestBean7.RequestState getState();
    /**
     * <code>required .com.hanschen.multidex.bean.RequestState state = 1;</code>
     */
    com.hanschen.multidex.bean.TestBean7.RequestStateOrBuilder getStateOrBuilder();

    /**
     * <code>repeated .com.hanschen.multidex.bean.CloudAccount bind_list = 2;</code>
     */
    java.util.List<com.hanschen.multidex.bean.TestBean7.CloudAccount>
    getBindListList();
    /**
     * <code>repeated .com.hanschen.multidex.bean.CloudAccount bind_list = 2;</code>
     */
    com.hanschen.multidex.bean.TestBean7.CloudAccount getBindList(int index);
    /**
     * <code>repeated .com.hanschen.multidex.bean.CloudAccount bind_list = 2;</code>
     */
    int getBindListCount();
    /**
     * <code>repeated .com.hanschen.multidex.bean.CloudAccount bind_list = 2;</code>
     */
    java.util.List<? extends com.hanschen.multidex.bean.TestBean7.CloudAccountOrBuilder>
    getBindListOrBuilderList();
    /**
     * <code>repeated .com.hanschen.multidex.bean.CloudAccount bind_list = 2;</code>
     */
    com.hanschen.multidex.bean.TestBean7.CloudAccountOrBuilder getBindListOrBuilder(
            int index);

    /**
     * <code>repeated .com.hanschen.multidex.bean.Host host_list = 3;</code>
     */
    java.util.List<com.hanschen.multidex.bean.TestBean7.Host>
    getHostListList();
    /**
     * <code>repeated .com.hanschen.multidex.bean.Host host_list = 3;</code>
     */
    com.hanschen.multidex.bean.TestBean7.Host getHostList(int index);
    /**
     * <code>repeated .com.hanschen.multidex.bean.Host host_list = 3;</code>
     */
    int getHostListCount();
    /**
     * <code>repeated .com.hanschen.multidex.bean.Host host_list = 3;</code>
     */
    java.util.List<? extends com.hanschen.multidex.bean.TestBean7.HostOrBuilder>
    getHostListOrBuilderList();
    /**
     * <code>repeated .com.hanschen.multidex.bean.Host host_list = 3;</code>
     */
    com.hanschen.multidex.bean.TestBean7.HostOrBuilder getHostListOrBuilder(
            int index);

    /**
     * <code>repeated .com.hanschen.multidex.bean.ParentControlTask parent_control_task_list = 4;</code>
     */
    java.util.List<com.hanschen.multidex.bean.TestBean7.ParentControlTask>
    getParentControlTaskListList();
    /**
     * <code>repeated .com.hanschen.multidex.bean.ParentControlTask parent_control_task_list = 4;</code>
     */
    com.hanschen.multidex.bean.TestBean7.ParentControlTask getParentControlTaskList(int index);
    /**
     * <code>repeated .com.hanschen.multidex.bean.ParentControlTask parent_control_task_list = 4;</code>
     */
    int getParentControlTaskListCount();
    /**
     * <code>repeated .com.hanschen.multidex.bean.ParentControlTask parent_control_task_list = 4;</code>
     */
    java.util.List<? extends com.hanschen.multidex.bean.TestBean7.ParentControlTaskOrBuilder>
    getParentControlTaskListOrBuilderList();
    /**
     * <code>repeated .com.hanschen.multidex.bean.ParentControlTask parent_control_task_list = 4;</code>
     */
    com.hanschen.multidex.bean.TestBean7.ParentControlTaskOrBuilder getParentControlTaskListOrBuilder(
            int index);

    /**
     * <code>repeated string mac_list = 5;</code>
     */
    java.util.List<java.lang.String>
    getMacListList();
    /**
     * <code>repeated string mac_list = 5;</code>
     */
    int getMacListCount();
    /**
     * <code>repeated string mac_list = 5;</code>
     */
    java.lang.String getMacList(int index);
    /**
     * <code>repeated string mac_list = 5;</code>
     */
    com.google.protobuf.ByteString
    getMacListBytes(int index);

    /**
     * <code>repeated .com.hanschen.multidex.bean.SpeedLimit speed_limit_list = 6;</code>
     */
    java.util.List<com.hanschen.multidex.bean.TestBean7.SpeedLimit>
    getSpeedLimitListList();
    /**
     * <code>repeated .com.hanschen.multidex.bean.SpeedLimit speed_limit_list = 6;</code>
     */
    com.hanschen.multidex.bean.TestBean7.SpeedLimit getSpeedLimitList(int index);
    /**
     * <code>repeated .com.hanschen.multidex.bean.SpeedLimit speed_limit_list = 6;</code>
     */
    int getSpeedLimitListCount();
    /**
     * <code>repeated .com.hanschen.multidex.bean.SpeedLimit speed_limit_list = 6;</code>
     */
    java.util.List<? extends com.hanschen.multidex.bean.TestBean7.SpeedLimitOrBuilder>
    getSpeedLimitListOrBuilderList();
    /**
     * <code>repeated .com.hanschen.multidex.bean.SpeedLimit speed_limit_list = 6;</code>
     */
    com.hanschen.multidex.bean.TestBean7.SpeedLimitOrBuilder getSpeedLimitListOrBuilder(
            int index);

    /**
     * <code>repeated string authorization_list = 7;</code>
     */
    java.util.List<java.lang.String>
    getAuthorizationListList();
    /**
     * <code>repeated string authorization_list = 7;</code>
     */
    int getAuthorizationListCount();
    /**
     * <code>repeated string authorization_list = 7;</code>
     */
    java.lang.String getAuthorizationList(int index);
    /**
     * <code>repeated string authorization_list = 7;</code>
     */
    com.google.protobuf.ByteString
    getAuthorizationListBytes(int index);

    /**
     * <code>repeated .com.hanschen.multidex.bean.SmartSocket smart_sockets = 8;</code>
     */
    java.util.List<com.hanschen.multidex.bean.TestBean7.SmartSocket>
    getSmartSocketsList();
    /**
     * <code>repeated .com.hanschen.multidex.bean.SmartSocket smart_sockets = 8;</code>
     */
    com.hanschen.multidex.bean.TestBean7.SmartSocket getSmartSockets(int index);
    /**
     * <code>repeated .com.hanschen.multidex.bean.SmartSocket smart_sockets = 8;</code>
     */
    int getSmartSocketsCount();
    /**
     * <code>repeated .com.hanschen.multidex.bean.SmartSocket smart_sockets = 8;</code>
     */
    java.util.List<? extends com.hanschen.multidex.bean.TestBean7.SmartSocketOrBuilder>
    getSmartSocketsOrBuilderList();
    /**
     * <code>repeated .com.hanschen.multidex.bean.SmartSocket smart_sockets = 8;</code>
     */
    com.hanschen.multidex.bean.TestBean7.SmartSocketOrBuilder getSmartSocketsOrBuilder(
            int index);

    /**
     * <code>optional .com.hanschen.multidex.bean.SystemInfo system_info = 9;</code>
     */
    boolean hasSystemInfo();
    /**
     * <code>optional .com.hanschen.multidex.bean.SystemInfo system_info = 9;</code>
     */
    com.hanschen.multidex.bean.TestBean7.SystemInfo getSystemInfo();
    /**
     * <code>optional .com.hanschen.multidex.bean.SystemInfo system_info = 9;</code>
     */
    com.hanschen.multidex.bean.TestBean7.SystemInfoOrBuilder getSystemInfoOrBuilder();

    /**
     * <code>optional .com.hanschen.multidex.bean.WifiMode wifi_mode = 10;</code>
     */
    boolean hasWifiMode();
    /**
     * <code>optional .com.hanschen.multidex.bean.WifiMode wifi_mode = 10;</code>
     */
    com.hanschen.multidex.bean.TestBean7.WifiMode getWifiMode();

    /**
     * <code>optional .com.hanschen.multidex.bean.GuestWifi guest_wifi = 11;</code>
     */
    boolean hasGuestWifi();
    /**
     * <code>optional .com.hanschen.multidex.bean.GuestWifi guest_wifi = 11;</code>
     */
    com.hanschen.multidex.bean.TestBean7.GuestWifi getGuestWifi();
    /**
     * <code>optional .com.hanschen.multidex.bean.GuestWifi guest_wifi = 11;</code>
     */
    com.hanschen.multidex.bean.TestBean7.GuestWifiOrBuilder getGuestWifiOrBuilder();

    /**
     * <code>optional .com.hanschen.multidex.bean.SuperAdmin super_admin = 12;</code>
     */
    boolean hasSuperAdmin();
    /**
     * <code>optional .com.hanschen.multidex.bean.SuperAdmin super_admin = 12;</code>
     */
    com.hanschen.multidex.bean.TestBean7.SuperAdmin getSuperAdmin();
    /**
     * <code>optional .com.hanschen.multidex.bean.SuperAdmin super_admin = 12;</code>
     */
    com.hanschen.multidex.bean.TestBean7.SuperAdminOrBuilder getSuperAdminOrBuilder();

    /**
     * <code>optional .com.hanschen.multidex.bean.SmartBandwidth smart_bandwidth = 13;</code>
     */
    boolean hasSmartBandwidth();
    /**
     * <code>optional .com.hanschen.multidex.bean.SmartBandwidth smart_bandwidth = 13;</code>
     */
    com.hanschen.multidex.bean.TestBean7.SmartBandwidth getSmartBandwidth();

    /**
     * <code>optional .com.hanschen.multidex.bean.HardDiskInfo hard_disk_info = 14;</code>
     */
    boolean hasHardDiskInfo();
    /**
     * <code>optional .com.hanschen.multidex.bean.HardDiskInfo hard_disk_info = 14;</code>
     */
    com.hanschen.multidex.bean.TestBean7.HardDiskInfo getHardDiskInfo();
    /**
     * <code>optional .com.hanschen.multidex.bean.HardDiskInfo hard_disk_info = 14;</code>
     */
    com.hanschen.multidex.bean.TestBean7.HardDiskInfoOrBuilder getHardDiskInfoOrBuilder();

    /**
     * <code>optional .com.hanschen.multidex.bean.WanSetting wan_setting = 15;</code>
     */
    boolean hasWanSetting();
    /**
     * <code>optional .com.hanschen.multidex.bean.WanSetting wan_setting = 15;</code>
     */
    com.hanschen.multidex.bean.TestBean7.WanSetting getWanSetting();
    /**
     * <code>optional .com.hanschen.multidex.bean.WanSetting wan_setting = 15;</code>
     */
    com.hanschen.multidex.bean.TestBean7.WanSettingOrBuilder getWanSettingOrBuilder();

    /**
     * <code>optional .com.hanschen.multidex.bean.WifiSetting wifi_setting = 16;</code>
     */
    boolean hasWifiSetting();
    /**
     * <code>optional .com.hanschen.multidex.bean.WifiSetting wifi_setting = 16;</code>
     */
    com.hanschen.multidex.bean.TestBean7.WifiSetting getWifiSetting();
    /**
     * <code>optional .com.hanschen.multidex.bean.WifiSetting wifi_setting = 16;</code>
     */
    com.hanschen.multidex.bean.TestBean7.WifiSettingOrBuilder getWifiSettingOrBuilder();

    /**
     * <code>optional .com.hanschen.multidex.bean.PowerStatus power_status = 17;</code>
     */
    boolean hasPowerStatus();
    /**
     * <code>optional .com.hanschen.multidex.bean.PowerStatus power_status = 17;</code>
     */
    com.hanschen.multidex.bean.TestBean7.PowerStatus getPowerStatus();

    /**
     * <code>optional .com.hanschen.multidex.bean.RouterInfo router_info = 18;</code>
     */
    boolean hasRouterInfo();
    /**
     * <code>optional .com.hanschen.multidex.bean.RouterInfo router_info = 18;</code>
     */
    com.hanschen.multidex.bean.TestBean7.RouterInfo getRouterInfo();
    /**
     * <code>optional .com.hanschen.multidex.bean.RouterInfo router_info = 18;</code>
     */
    com.hanschen.multidex.bean.TestBean7.RouterInfoOrBuilder getRouterInfoOrBuilder();

    /**
     * <code>optional string samba_password = 19;</code>
     */
    boolean hasSambaPassword();
    /**
     * <code>optional string samba_password = 19;</code>
     */
    java.lang.String getSambaPassword();
    /**
     * <code>optional string samba_password = 19;</code>
     */
    com.google.protobuf.ByteString
    getSambaPasswordBytes();

    /**
     * <code>optional string uuid = 20;</code>
     */
    boolean hasUuid();
    /**
     * <code>optional string uuid = 20;</code>
     */
    java.lang.String getUuid();
    /**
     * <code>optional string uuid = 20;</code>
     */
    com.google.protobuf.ByteString
    getUuidBytes();

    /**
     * <code>optional .com.hanschen.multidex.bean.HomeShareMode home_share_mode = 21;</code>
     */
    boolean hasHomeShareMode();
    /**
     * <code>optional .com.hanschen.multidex.bean.HomeShareMode home_share_mode = 21;</code>
     */
    com.hanschen.multidex.bean.TestBean7.HomeShareMode getHomeShareMode();
  }
  /**
   * Protobuf type {@code com.hanschen.multidex.bean.Ack}
   */
  public  static final class Ack extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:com.hanschen.multidex.bean.Ack)
          AckOrBuilder {
    // Use Ack.newBuilder() to construct.
    private Ack(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Ack() {
      bindList_ = java.util.Collections.emptyList();
      hostList_ = java.util.Collections.emptyList();
      parentControlTaskList_ = java.util.Collections.emptyList();
      macList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      speedLimitList_ = java.util.Collections.emptyList();
      authorizationList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      smartSockets_ = java.util.Collections.emptyList();
      wifiMode_ = 0;
      smartBandwidth_ = 0;
      powerStatus_ = 0;
      sambaPassword_ = "";
      uuid_ = "";
      homeShareMode_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Ack(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                      extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.hanschen.multidex.bean.TestBean7.RequestState.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = state_.toBuilder();
              }
              state_ = input.readMessage(com.hanschen.multidex.bean.TestBean7.RequestState.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(state_);
                state_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                bindList_ = new java.util.ArrayList<com.hanschen.multidex.bean.TestBean7.CloudAccount>();
                mutable_bitField0_ |= 0x00000002;
              }
              bindList_.add(
                      input.readMessage(com.hanschen.multidex.bean.TestBean7.CloudAccount.PARSER, extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                hostList_ = new java.util.ArrayList<com.hanschen.multidex.bean.TestBean7.Host>();
                mutable_bitField0_ |= 0x00000004;
              }
              hostList_.add(
                      input.readMessage(com.hanschen.multidex.bean.TestBean7.Host.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                parentControlTaskList_ = new java.util.ArrayList<com.hanschen.multidex.bean.TestBean7.ParentControlTask>();
                mutable_bitField0_ |= 0x00000008;
              }
              parentControlTaskList_.add(
                      input.readMessage(com.hanschen.multidex.bean.TestBean7.ParentControlTask.PARSER, extensionRegistry));
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                macList_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000010;
              }
              macList_.add(bs);
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                speedLimitList_ = new java.util.ArrayList<com.hanschen.multidex.bean.TestBean7.SpeedLimit>();
                mutable_bitField0_ |= 0x00000020;
              }
              speedLimitList_.add(
                      input.readMessage(com.hanschen.multidex.bean.TestBean7.SpeedLimit.PARSER, extensionRegistry));
              break;
            }
            case 58: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                authorizationList_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000040;
              }
              authorizationList_.add(bs);
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                smartSockets_ = new java.util.ArrayList<com.hanschen.multidex.bean.TestBean7.SmartSocket>();
                mutable_bitField0_ |= 0x00000080;
              }
              smartSockets_.add(
                      input.readMessage(com.hanschen.multidex.bean.TestBean7.SmartSocket.PARSER, extensionRegistry));
              break;
            }
            case 74: {
              com.hanschen.multidex.bean.TestBean7.SystemInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = systemInfo_.toBuilder();
              }
              systemInfo_ = input.readMessage(com.hanschen.multidex.bean.TestBean7.SystemInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(systemInfo_);
                systemInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 80: {
              int rawValue = input.readEnum();
              com.hanschen.multidex.bean.TestBean7.WifiMode value = com.hanschen.multidex.bean.TestBean7.WifiMode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(10, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                wifiMode_ = rawValue;
              }
              break;
            }
            case 90: {
              com.hanschen.multidex.bean.TestBean7.GuestWifi.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = guestWifi_.toBuilder();
              }
              guestWifi_ = input.readMessage(com.hanschen.multidex.bean.TestBean7.GuestWifi.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(guestWifi_);
                guestWifi_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 98: {
              com.hanschen.multidex.bean.TestBean7.SuperAdmin.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = superAdmin_.toBuilder();
              }
              superAdmin_ = input.readMessage(com.hanschen.multidex.bean.TestBean7.SuperAdmin.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(superAdmin_);
                superAdmin_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 104: {
              int rawValue = input.readEnum();
              com.hanschen.multidex.bean.TestBean7.SmartBandwidth value = com.hanschen.multidex.bean.TestBean7.SmartBandwidth.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(13, rawValue);
              } else {
                bitField0_ |= 0x00000020;
                smartBandwidth_ = rawValue;
              }
              break;
            }
            case 114: {
              com.hanschen.multidex.bean.TestBean7.HardDiskInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = hardDiskInfo_.toBuilder();
              }
              hardDiskInfo_ = input.readMessage(com.hanschen.multidex.bean.TestBean7.HardDiskInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(hardDiskInfo_);
                hardDiskInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 122: {
              com.hanschen.multidex.bean.TestBean7.WanSetting.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = wanSetting_.toBuilder();
              }
              wanSetting_ = input.readMessage(com.hanschen.multidex.bean.TestBean7.WanSetting.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(wanSetting_);
                wanSetting_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
            case 130: {
              com.hanschen.multidex.bean.TestBean7.WifiSetting.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) == 0x00000100)) {
                subBuilder = wifiSetting_.toBuilder();
              }
              wifiSetting_ = input.readMessage(com.hanschen.multidex.bean.TestBean7.WifiSetting.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(wifiSetting_);
                wifiSetting_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
            case 136: {
              int rawValue = input.readEnum();
              com.hanschen.multidex.bean.TestBean7.PowerStatus value = com.hanschen.multidex.bean.TestBean7.PowerStatus.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(17, rawValue);
              } else {
                bitField0_ |= 0x00000200;
                powerStatus_ = rawValue;
              }
              break;
            }
            case 146: {
              com.hanschen.multidex.bean.TestBean7.RouterInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000400) == 0x00000400)) {
                subBuilder = routerInfo_.toBuilder();
              }
              routerInfo_ = input.readMessage(com.hanschen.multidex.bean.TestBean7.RouterInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(routerInfo_);
                routerInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000400;
              break;
            }
            case 154: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000800;
              sambaPassword_ = bs;
              break;
            }
            case 162: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00001000;
              uuid_ = bs;
              break;
            }
            case 168: {
              int rawValue = input.readEnum();
              com.hanschen.multidex.bean.TestBean7.HomeShareMode value = com.hanschen.multidex.bean.TestBean7.HomeShareMode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(21, rawValue);
              } else {
                bitField0_ |= 0x00002000;
                homeShareMode_ = rawValue;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          bindList_ = java.util.Collections.unmodifiableList(bindList_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          hostList_ = java.util.Collections.unmodifiableList(hostList_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          parentControlTaskList_ = java.util.Collections.unmodifiableList(parentControlTaskList_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          macList_ = macList_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          speedLimitList_ = java.util.Collections.unmodifiableList(speedLimitList_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          authorizationList_ = authorizationList_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          smartSockets_ = java.util.Collections.unmodifiableList(smartSockets_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_Ack_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_Ack_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      com.hanschen.multidex.bean.TestBean7.Ack.class, com.hanschen.multidex.bean.TestBean7.Ack.Builder.class);
    }

    private int bitField0_;
    public static final int STATE_FIELD_NUMBER = 1;
    private com.hanschen.multidex.bean.TestBean7.RequestState state_;
    /**
     * <code>required .com.hanschen.multidex.bean.RequestState state = 1;</code>
     */
    public boolean hasState() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .com.hanschen.multidex.bean.RequestState state = 1;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.RequestState getState() {
      return state_ == null ? com.hanschen.multidex.bean.TestBean7.RequestState.getDefaultInstance() : state_;
    }
    /**
     * <code>required .com.hanschen.multidex.bean.RequestState state = 1;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.RequestStateOrBuilder getStateOrBuilder() {
      return state_ == null ? com.hanschen.multidex.bean.TestBean7.RequestState.getDefaultInstance() : state_;
    }

    public static final int BIND_LIST_FIELD_NUMBER = 2;
    private java.util.List<com.hanschen.multidex.bean.TestBean7.CloudAccount> bindList_;
    /**
     * <code>repeated .com.hanschen.multidex.bean.CloudAccount bind_list = 2;</code>
     */
    public java.util.List<com.hanschen.multidex.bean.TestBean7.CloudAccount> getBindListList() {
      return bindList_;
    }
    /**
     * <code>repeated .com.hanschen.multidex.bean.CloudAccount bind_list = 2;</code>
     */
    public java.util.List<? extends com.hanschen.multidex.bean.TestBean7.CloudAccountOrBuilder>
    getBindListOrBuilderList() {
      return bindList_;
    }
    /**
     * <code>repeated .com.hanschen.multidex.bean.CloudAccount bind_list = 2;</code>
     */
    public int getBindListCount() {
      return bindList_.size();
    }
    /**
     * <code>repeated .com.hanschen.multidex.bean.CloudAccount bind_list = 2;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.CloudAccount getBindList(int index) {
      return bindList_.get(index);
    }
    /**
     * <code>repeated .com.hanschen.multidex.bean.CloudAccount bind_list = 2;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.CloudAccountOrBuilder getBindListOrBuilder(
            int index) {
      return bindList_.get(index);
    }

    public static final int HOST_LIST_FIELD_NUMBER = 3;
    private java.util.List<com.hanschen.multidex.bean.TestBean7.Host> hostList_;
    /**
     * <code>repeated .com.hanschen.multidex.bean.Host host_list = 3;</code>
     */
    public java.util.List<com.hanschen.multidex.bean.TestBean7.Host> getHostListList() {
      return hostList_;
    }
    /**
     * <code>repeated .com.hanschen.multidex.bean.Host host_list = 3;</code>
     */
    public java.util.List<? extends com.hanschen.multidex.bean.TestBean7.HostOrBuilder>
    getHostListOrBuilderList() {
      return hostList_;
    }
    /**
     * <code>repeated .com.hanschen.multidex.bean.Host host_list = 3;</code>
     */
    public int getHostListCount() {
      return hostList_.size();
    }
    /**
     * <code>repeated .com.hanschen.multidex.bean.Host host_list = 3;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.Host getHostList(int index) {
      return hostList_.get(index);
    }
    /**
     * <code>repeated .com.hanschen.multidex.bean.Host host_list = 3;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.HostOrBuilder getHostListOrBuilder(
            int index) {
      return hostList_.get(index);
    }

    public static final int PARENT_CONTROL_TASK_LIST_FIELD_NUMBER = 4;
    private java.util.List<com.hanschen.multidex.bean.TestBean7.ParentControlTask> parentControlTaskList_;
    /**
     * <code>repeated .com.hanschen.multidex.bean.ParentControlTask parent_control_task_list = 4;</code>
     */
    public java.util.List<com.hanschen.multidex.bean.TestBean7.ParentControlTask> getParentControlTaskListList() {
      return parentControlTaskList_;
    }
    /**
     * <code>repeated .com.hanschen.multidex.bean.ParentControlTask parent_control_task_list = 4;</code>
     */
    public java.util.List<? extends com.hanschen.multidex.bean.TestBean7.ParentControlTaskOrBuilder>
    getParentControlTaskListOrBuilderList() {
      return parentControlTaskList_;
    }
    /**
     * <code>repeated .com.hanschen.multidex.bean.ParentControlTask parent_control_task_list = 4;</code>
     */
    public int getParentControlTaskListCount() {
      return parentControlTaskList_.size();
    }
    /**
     * <code>repeated .com.hanschen.multidex.bean.ParentControlTask parent_control_task_list = 4;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.ParentControlTask getParentControlTaskList(int index) {
      return parentControlTaskList_.get(index);
    }
    /**
     * <code>repeated .com.hanschen.multidex.bean.ParentControlTask parent_control_task_list = 4;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.ParentControlTaskOrBuilder getParentControlTaskListOrBuilder(
            int index) {
      return parentControlTaskList_.get(index);
    }

    public static final int MAC_LIST_FIELD_NUMBER = 5;
    private com.google.protobuf.LazyStringList macList_;
    /**
     * <code>repeated string mac_list = 5;</code>
     */
    public com.google.protobuf.ProtocolStringList
    getMacListList() {
      return macList_;
    }
    /**
     * <code>repeated string mac_list = 5;</code>
     */
    public int getMacListCount() {
      return macList_.size();
    }
    /**
     * <code>repeated string mac_list = 5;</code>
     */
    public java.lang.String getMacList(int index) {
      return macList_.get(index);
    }
    /**
     * <code>repeated string mac_list = 5;</code>
     */
    public com.google.protobuf.ByteString
    getMacListBytes(int index) {
      return macList_.getByteString(index);
    }

    public static final int SPEED_LIMIT_LIST_FIELD_NUMBER = 6;
    private java.util.List<com.hanschen.multidex.bean.TestBean7.SpeedLimit> speedLimitList_;
    /**
     * <code>repeated .com.hanschen.multidex.bean.SpeedLimit speed_limit_list = 6;</code>
     */
    public java.util.List<com.hanschen.multidex.bean.TestBean7.SpeedLimit> getSpeedLimitListList() {
      return speedLimitList_;
    }
    /**
     * <code>repeated .com.hanschen.multidex.bean.SpeedLimit speed_limit_list = 6;</code>
     */
    public java.util.List<? extends com.hanschen.multidex.bean.TestBean7.SpeedLimitOrBuilder>
    getSpeedLimitListOrBuilderList() {
      return speedLimitList_;
    }
    /**
     * <code>repeated .com.hanschen.multidex.bean.SpeedLimit speed_limit_list = 6;</code>
     */
    public int getSpeedLimitListCount() {
      return speedLimitList_.size();
    }
    /**
     * <code>repeated .com.hanschen.multidex.bean.SpeedLimit speed_limit_list = 6;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.SpeedLimit getSpeedLimitList(int index) {
      return speedLimitList_.get(index);
    }
    /**
     * <code>repeated .com.hanschen.multidex.bean.SpeedLimit speed_limit_list = 6;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.SpeedLimitOrBuilder getSpeedLimitListOrBuilder(
            int index) {
      return speedLimitList_.get(index);
    }

    public static final int AUTHORIZATION_LIST_FIELD_NUMBER = 7;
    private com.google.protobuf.LazyStringList authorizationList_;
    /**
     * <code>repeated string authorization_list = 7;</code>
     */
    public com.google.protobuf.ProtocolStringList
    getAuthorizationListList() {
      return authorizationList_;
    }
    /**
     * <code>repeated string authorization_list = 7;</code>
     */
    public int getAuthorizationListCount() {
      return authorizationList_.size();
    }
    /**
     * <code>repeated string authorization_list = 7;</code>
     */
    public java.lang.String getAuthorizationList(int index) {
      return authorizationList_.get(index);
    }
    /**
     * <code>repeated string authorization_list = 7;</code>
     */
    public com.google.protobuf.ByteString
    getAuthorizationListBytes(int index) {
      return authorizationList_.getByteString(index);
    }

    public static final int SMART_SOCKETS_FIELD_NUMBER = 8;
    private java.util.List<com.hanschen.multidex.bean.TestBean7.SmartSocket> smartSockets_;
    /**
     * <code>repeated .com.hanschen.multidex.bean.SmartSocket smart_sockets = 8;</code>
     */
    public java.util.List<com.hanschen.multidex.bean.TestBean7.SmartSocket> getSmartSocketsList() {
      return smartSockets_;
    }
    /**
     * <code>repeated .com.hanschen.multidex.bean.SmartSocket smart_sockets = 8;</code>
     */
    public java.util.List<? extends com.hanschen.multidex.bean.TestBean7.SmartSocketOrBuilder>
    getSmartSocketsOrBuilderList() {
      return smartSockets_;
    }
    /**
     * <code>repeated .com.hanschen.multidex.bean.SmartSocket smart_sockets = 8;</code>
     */
    public int getSmartSocketsCount() {
      return smartSockets_.size();
    }
    /**
     * <code>repeated .com.hanschen.multidex.bean.SmartSocket smart_sockets = 8;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.SmartSocket getSmartSockets(int index) {
      return smartSockets_.get(index);
    }
    /**
     * <code>repeated .com.hanschen.multidex.bean.SmartSocket smart_sockets = 8;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.SmartSocketOrBuilder getSmartSocketsOrBuilder(
            int index) {
      return smartSockets_.get(index);
    }

    public static final int SYSTEM_INFO_FIELD_NUMBER = 9;
    private com.hanschen.multidex.bean.TestBean7.SystemInfo systemInfo_;
    /**
     * <code>optional .com.hanschen.multidex.bean.SystemInfo system_info = 9;</code>
     */
    public boolean hasSystemInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .com.hanschen.multidex.bean.SystemInfo system_info = 9;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.SystemInfo getSystemInfo() {
      return systemInfo_ == null ? com.hanschen.multidex.bean.TestBean7.SystemInfo.getDefaultInstance() : systemInfo_;
    }
    /**
     * <code>optional .com.hanschen.multidex.bean.SystemInfo system_info = 9;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.SystemInfoOrBuilder getSystemInfoOrBuilder() {
      return systemInfo_ == null ? com.hanschen.multidex.bean.TestBean7.SystemInfo.getDefaultInstance() : systemInfo_;
    }

    public static final int WIFI_MODE_FIELD_NUMBER = 10;
    private int wifiMode_;
    /**
     * <code>optional .com.hanschen.multidex.bean.WifiMode wifi_mode = 10;</code>
     */
    public boolean hasWifiMode() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .com.hanschen.multidex.bean.WifiMode wifi_mode = 10;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.WifiMode getWifiMode() {
      com.hanschen.multidex.bean.TestBean7.WifiMode result = com.hanschen.multidex.bean.TestBean7.WifiMode.valueOf(wifiMode_);
      return result == null ? com.hanschen.multidex.bean.TestBean7.WifiMode.OFF : result;
    }

    public static final int GUEST_WIFI_FIELD_NUMBER = 11;
    private com.hanschen.multidex.bean.TestBean7.GuestWifi guestWifi_;
    /**
     * <code>optional .com.hanschen.multidex.bean.GuestWifi guest_wifi = 11;</code>
     */
    public boolean hasGuestWifi() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .com.hanschen.multidex.bean.GuestWifi guest_wifi = 11;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.GuestWifi getGuestWifi() {
      return guestWifi_ == null ? com.hanschen.multidex.bean.TestBean7.GuestWifi.getDefaultInstance() : guestWifi_;
    }
    /**
     * <code>optional .com.hanschen.multidex.bean.GuestWifi guest_wifi = 11;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.GuestWifiOrBuilder getGuestWifiOrBuilder() {
      return guestWifi_ == null ? com.hanschen.multidex.bean.TestBean7.GuestWifi.getDefaultInstance() : guestWifi_;
    }

    public static final int SUPER_ADMIN_FIELD_NUMBER = 12;
    private com.hanschen.multidex.bean.TestBean7.SuperAdmin superAdmin_;
    /**
     * <code>optional .com.hanschen.multidex.bean.SuperAdmin super_admin = 12;</code>
     */
    public boolean hasSuperAdmin() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .com.hanschen.multidex.bean.SuperAdmin super_admin = 12;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.SuperAdmin getSuperAdmin() {
      return superAdmin_ == null ? com.hanschen.multidex.bean.TestBean7.SuperAdmin.getDefaultInstance() : superAdmin_;
    }
    /**
     * <code>optional .com.hanschen.multidex.bean.SuperAdmin super_admin = 12;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.SuperAdminOrBuilder getSuperAdminOrBuilder() {
      return superAdmin_ == null ? com.hanschen.multidex.bean.TestBean7.SuperAdmin.getDefaultInstance() : superAdmin_;
    }

    public static final int SMART_BANDWIDTH_FIELD_NUMBER = 13;
    private int smartBandwidth_;
    /**
     * <code>optional .com.hanschen.multidex.bean.SmartBandwidth smart_bandwidth = 13;</code>
     */
    public boolean hasSmartBandwidth() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .com.hanschen.multidex.bean.SmartBandwidth smart_bandwidth = 13;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.SmartBandwidth getSmartBandwidth() {
      com.hanschen.multidex.bean.TestBean7.SmartBandwidth result = com.hanschen.multidex.bean.TestBean7.SmartBandwidth.valueOf(smartBandwidth_);
      return result == null ? com.hanschen.multidex.bean.TestBean7.SmartBandwidth.EQUALITY : result;
    }

    public static final int HARD_DISK_INFO_FIELD_NUMBER = 14;
    private com.hanschen.multidex.bean.TestBean7.HardDiskInfo hardDiskInfo_;
    /**
     * <code>optional .com.hanschen.multidex.bean.HardDiskInfo hard_disk_info = 14;</code>
     */
    public boolean hasHardDiskInfo() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .com.hanschen.multidex.bean.HardDiskInfo hard_disk_info = 14;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.HardDiskInfo getHardDiskInfo() {
      return hardDiskInfo_ == null ? com.hanschen.multidex.bean.TestBean7.HardDiskInfo.getDefaultInstance() : hardDiskInfo_;
    }
    /**
     * <code>optional .com.hanschen.multidex.bean.HardDiskInfo hard_disk_info = 14;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.HardDiskInfoOrBuilder getHardDiskInfoOrBuilder() {
      return hardDiskInfo_ == null ? com.hanschen.multidex.bean.TestBean7.HardDiskInfo.getDefaultInstance() : hardDiskInfo_;
    }

    public static final int WAN_SETTING_FIELD_NUMBER = 15;
    private com.hanschen.multidex.bean.TestBean7.WanSetting wanSetting_;
    /**
     * <code>optional .com.hanschen.multidex.bean.WanSetting wan_setting = 15;</code>
     */
    public boolean hasWanSetting() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .com.hanschen.multidex.bean.WanSetting wan_setting = 15;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.WanSetting getWanSetting() {
      return wanSetting_ == null ? com.hanschen.multidex.bean.TestBean7.WanSetting.getDefaultInstance() : wanSetting_;
    }
    /**
     * <code>optional .com.hanschen.multidex.bean.WanSetting wan_setting = 15;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.WanSettingOrBuilder getWanSettingOrBuilder() {
      return wanSetting_ == null ? com.hanschen.multidex.bean.TestBean7.WanSetting.getDefaultInstance() : wanSetting_;
    }

    public static final int WIFI_SETTING_FIELD_NUMBER = 16;
    private com.hanschen.multidex.bean.TestBean7.WifiSetting wifiSetting_;
    /**
     * <code>optional .com.hanschen.multidex.bean.WifiSetting wifi_setting = 16;</code>
     */
    public boolean hasWifiSetting() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .com.hanschen.multidex.bean.WifiSetting wifi_setting = 16;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.WifiSetting getWifiSetting() {
      return wifiSetting_ == null ? com.hanschen.multidex.bean.TestBean7.WifiSetting.getDefaultInstance() : wifiSetting_;
    }
    /**
     * <code>optional .com.hanschen.multidex.bean.WifiSetting wifi_setting = 16;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.WifiSettingOrBuilder getWifiSettingOrBuilder() {
      return wifiSetting_ == null ? com.hanschen.multidex.bean.TestBean7.WifiSetting.getDefaultInstance() : wifiSetting_;
    }

    public static final int POWER_STATUS_FIELD_NUMBER = 17;
    private int powerStatus_;
    /**
     * <code>optional .com.hanschen.multidex.bean.PowerStatus power_status = 17;</code>
     */
    public boolean hasPowerStatus() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .com.hanschen.multidex.bean.PowerStatus power_status = 17;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.PowerStatus getPowerStatus() {
      com.hanschen.multidex.bean.TestBean7.PowerStatus result = com.hanschen.multidex.bean.TestBean7.PowerStatus.valueOf(powerStatus_);
      return result == null ? com.hanschen.multidex.bean.TestBean7.PowerStatus.POWER_OFF : result;
    }

    public static final int ROUTER_INFO_FIELD_NUMBER = 18;
    private com.hanschen.multidex.bean.TestBean7.RouterInfo routerInfo_;
    /**
     * <code>optional .com.hanschen.multidex.bean.RouterInfo router_info = 18;</code>
     */
    public boolean hasRouterInfo() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .com.hanschen.multidex.bean.RouterInfo router_info = 18;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.RouterInfo getRouterInfo() {
      return routerInfo_ == null ? com.hanschen.multidex.bean.TestBean7.RouterInfo.getDefaultInstance() : routerInfo_;
    }
    /**
     * <code>optional .com.hanschen.multidex.bean.RouterInfo router_info = 18;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.RouterInfoOrBuilder getRouterInfoOrBuilder() {
      return routerInfo_ == null ? com.hanschen.multidex.bean.TestBean7.RouterInfo.getDefaultInstance() : routerInfo_;
    }

    public static final int SAMBA_PASSWORD_FIELD_NUMBER = 19;
    private volatile java.lang.Object sambaPassword_;
    /**
     * <code>optional string samba_password = 19;</code>
     */
    public boolean hasSambaPassword() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional string samba_password = 19;</code>
     */
    public java.lang.String getSambaPassword() {
      java.lang.Object ref = sambaPassword_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          sambaPassword_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string samba_password = 19;</code>
     */
    public com.google.protobuf.ByteString
    getSambaPasswordBytes() {
      java.lang.Object ref = sambaPassword_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        sambaPassword_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int UUID_FIELD_NUMBER = 20;
    private volatile java.lang.Object uuid_;
    /**
     * <code>optional string uuid = 20;</code>
     */
    public boolean hasUuid() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional string uuid = 20;</code>
     */
    public java.lang.String getUuid() {
      java.lang.Object ref = uuid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          uuid_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string uuid = 20;</code>
     */
    public com.google.protobuf.ByteString
    getUuidBytes() {
      java.lang.Object ref = uuid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        uuid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int HOME_SHARE_MODE_FIELD_NUMBER = 21;
    private int homeShareMode_;
    /**
     * <code>optional .com.hanschen.multidex.bean.HomeShareMode home_share_mode = 21;</code>
     */
    public boolean hasHomeShareMode() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional .com.hanschen.multidex.bean.HomeShareMode home_share_mode = 21;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.HomeShareMode getHomeShareMode() {
      com.hanschen.multidex.bean.TestBean7.HomeShareMode result = com.hanschen.multidex.bean.TestBean7.HomeShareMode.valueOf(homeShareMode_);
      return result == null ? com.hanschen.multidex.bean.TestBean7.HomeShareMode.MANUAL : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasState()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getState().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getBindListCount(); i++) {
        if (!getBindList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getHostListCount(); i++) {
        if (!getHostList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getParentControlTaskListCount(); i++) {
        if (!getParentControlTaskList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getSpeedLimitListCount(); i++) {
        if (!getSpeedLimitList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getSmartSocketsCount(); i++) {
        if (!getSmartSockets(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasSystemInfo()) {
        if (!getSystemInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasGuestWifi()) {
        if (!getGuestWifi().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasSuperAdmin()) {
        if (!getSuperAdmin().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasHardDiskInfo()) {
        if (!getHardDiskInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasWanSetting()) {
        if (!getWanSetting().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasWifiSetting()) {
        if (!getWifiSetting().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasRouterInfo()) {
        if (!getRouterInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getState());
      }
      for (int i = 0; i < bindList_.size(); i++) {
        output.writeMessage(2, bindList_.get(i));
      }
      for (int i = 0; i < hostList_.size(); i++) {
        output.writeMessage(3, hostList_.get(i));
      }
      for (int i = 0; i < parentControlTaskList_.size(); i++) {
        output.writeMessage(4, parentControlTaskList_.get(i));
      }
      for (int i = 0; i < macList_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, macList_.getRaw(i));
      }
      for (int i = 0; i < speedLimitList_.size(); i++) {
        output.writeMessage(6, speedLimitList_.get(i));
      }
      for (int i = 0; i < authorizationList_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, authorizationList_.getRaw(i));
      }
      for (int i = 0; i < smartSockets_.size(); i++) {
        output.writeMessage(8, smartSockets_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(9, getSystemInfo());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(10, wifiMode_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(11, getGuestWifi());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(12, getSuperAdmin());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeEnum(13, smartBandwidth_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(14, getHardDiskInfo());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(15, getWanSetting());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(16, getWifiSetting());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeEnum(17, powerStatus_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(18, getRouterInfo());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 19, sambaPassword_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 20, uuid_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeEnum(21, homeShareMode_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(1, getState());
      }
      for (int i = 0; i < bindList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(2, bindList_.get(i));
      }
      for (int i = 0; i < hostList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(3, hostList_.get(i));
      }
      for (int i = 0; i < parentControlTaskList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(4, parentControlTaskList_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < macList_.size(); i++) {
          dataSize += computeStringSizeNoTag(macList_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getMacListList().size();
      }
      for (int i = 0; i < speedLimitList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(6, speedLimitList_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < authorizationList_.size(); i++) {
          dataSize += computeStringSizeNoTag(authorizationList_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getAuthorizationListList().size();
      }
      for (int i = 0; i < smartSockets_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(8, smartSockets_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(9, getSystemInfo());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
                .computeEnumSize(10, wifiMode_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(11, getGuestWifi());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(12, getSuperAdmin());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
                .computeEnumSize(13, smartBandwidth_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(14, getHardDiskInfo());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(15, getWanSetting());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(16, getWifiSetting());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
                .computeEnumSize(17, powerStatus_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(18, getRouterInfo());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(19, sambaPassword_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(20, uuid_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
                .computeEnumSize(21, homeShareMode_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.hanschen.multidex.bean.TestBean7.Ack)) {
        return super.equals(obj);
      }
      com.hanschen.multidex.bean.TestBean7.Ack other = (com.hanschen.multidex.bean.TestBean7.Ack) obj;

      boolean result = true;
      result = result && (hasState() == other.hasState());
      if (hasState()) {
        result = result && getState()
                .equals(other.getState());
      }
      result = result && getBindListList()
              .equals(other.getBindListList());
      result = result && getHostListList()
              .equals(other.getHostListList());
      result = result && getParentControlTaskListList()
              .equals(other.getParentControlTaskListList());
      result = result && getMacListList()
              .equals(other.getMacListList());
      result = result && getSpeedLimitListList()
              .equals(other.getSpeedLimitListList());
      result = result && getAuthorizationListList()
              .equals(other.getAuthorizationListList());
      result = result && getSmartSocketsList()
              .equals(other.getSmartSocketsList());
      result = result && (hasSystemInfo() == other.hasSystemInfo());
      if (hasSystemInfo()) {
        result = result && getSystemInfo()
                .equals(other.getSystemInfo());
      }
      result = result && (hasWifiMode() == other.hasWifiMode());
      if (hasWifiMode()) {
        result = result && wifiMode_ == other.wifiMode_;
      }
      result = result && (hasGuestWifi() == other.hasGuestWifi());
      if (hasGuestWifi()) {
        result = result && getGuestWifi()
                .equals(other.getGuestWifi());
      }
      result = result && (hasSuperAdmin() == other.hasSuperAdmin());
      if (hasSuperAdmin()) {
        result = result && getSuperAdmin()
                .equals(other.getSuperAdmin());
      }
      result = result && (hasSmartBandwidth() == other.hasSmartBandwidth());
      if (hasSmartBandwidth()) {
        result = result && smartBandwidth_ == other.smartBandwidth_;
      }
      result = result && (hasHardDiskInfo() == other.hasHardDiskInfo());
      if (hasHardDiskInfo()) {
        result = result && getHardDiskInfo()
                .equals(other.getHardDiskInfo());
      }
      result = result && (hasWanSetting() == other.hasWanSetting());
      if (hasWanSetting()) {
        result = result && getWanSetting()
                .equals(other.getWanSetting());
      }
      result = result && (hasWifiSetting() == other.hasWifiSetting());
      if (hasWifiSetting()) {
        result = result && getWifiSetting()
                .equals(other.getWifiSetting());
      }
      result = result && (hasPowerStatus() == other.hasPowerStatus());
      if (hasPowerStatus()) {
        result = result && powerStatus_ == other.powerStatus_;
      }
      result = result && (hasRouterInfo() == other.hasRouterInfo());
      if (hasRouterInfo()) {
        result = result && getRouterInfo()
                .equals(other.getRouterInfo());
      }
      result = result && (hasSambaPassword() == other.hasSambaPassword());
      if (hasSambaPassword()) {
        result = result && getSambaPassword()
                .equals(other.getSambaPassword());
      }
      result = result && (hasUuid() == other.hasUuid());
      if (hasUuid()) {
        result = result && getUuid()
                .equals(other.getUuid());
      }
      result = result && (hasHomeShareMode() == other.hasHomeShareMode());
      if (hasHomeShareMode()) {
        result = result && homeShareMode_ == other.homeShareMode_;
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasState()) {
        hash = (37 * hash) + STATE_FIELD_NUMBER;
        hash = (53 * hash) + getState().hashCode();
      }
      if (getBindListCount() > 0) {
        hash = (37 * hash) + BIND_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getBindListList().hashCode();
      }
      if (getHostListCount() > 0) {
        hash = (37 * hash) + HOST_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getHostListList().hashCode();
      }
      if (getParentControlTaskListCount() > 0) {
        hash = (37 * hash) + PARENT_CONTROL_TASK_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getParentControlTaskListList().hashCode();
      }
      if (getMacListCount() > 0) {
        hash = (37 * hash) + MAC_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getMacListList().hashCode();
      }
      if (getSpeedLimitListCount() > 0) {
        hash = (37 * hash) + SPEED_LIMIT_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getSpeedLimitListList().hashCode();
      }
      if (getAuthorizationListCount() > 0) {
        hash = (37 * hash) + AUTHORIZATION_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getAuthorizationListList().hashCode();
      }
      if (getSmartSocketsCount() > 0) {
        hash = (37 * hash) + SMART_SOCKETS_FIELD_NUMBER;
        hash = (53 * hash) + getSmartSocketsList().hashCode();
      }
      if (hasSystemInfo()) {
        hash = (37 * hash) + SYSTEM_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getSystemInfo().hashCode();
      }
      if (hasWifiMode()) {
        hash = (37 * hash) + WIFI_MODE_FIELD_NUMBER;
        hash = (53 * hash) + wifiMode_;
      }
      if (hasGuestWifi()) {
        hash = (37 * hash) + GUEST_WIFI_FIELD_NUMBER;
        hash = (53 * hash) + getGuestWifi().hashCode();
      }
      if (hasSuperAdmin()) {
        hash = (37 * hash) + SUPER_ADMIN_FIELD_NUMBER;
        hash = (53 * hash) + getSuperAdmin().hashCode();
      }
      if (hasSmartBandwidth()) {
        hash = (37 * hash) + SMART_BANDWIDTH_FIELD_NUMBER;
        hash = (53 * hash) + smartBandwidth_;
      }
      if (hasHardDiskInfo()) {
        hash = (37 * hash) + HARD_DISK_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getHardDiskInfo().hashCode();
      }
      if (hasWanSetting()) {
        hash = (37 * hash) + WAN_SETTING_FIELD_NUMBER;
        hash = (53 * hash) + getWanSetting().hashCode();
      }
      if (hasWifiSetting()) {
        hash = (37 * hash) + WIFI_SETTING_FIELD_NUMBER;
        hash = (53 * hash) + getWifiSetting().hashCode();
      }
      if (hasPowerStatus()) {
        hash = (37 * hash) + POWER_STATUS_FIELD_NUMBER;
        hash = (53 * hash) + powerStatus_;
      }
      if (hasRouterInfo()) {
        hash = (37 * hash) + ROUTER_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getRouterInfo().hashCode();
      }
      if (hasSambaPassword()) {
        hash = (37 * hash) + SAMBA_PASSWORD_FIELD_NUMBER;
        hash = (53 * hash) + getSambaPassword().hashCode();
      }
      if (hasUuid()) {
        hash = (37 * hash) + UUID_FIELD_NUMBER;
        hash = (53 * hash) + getUuid().hashCode();
      }
      if (hasHomeShareMode()) {
        hash = (37 * hash) + HOME_SHARE_MODE_FIELD_NUMBER;
        hash = (53 * hash) + homeShareMode_;
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.hanschen.multidex.bean.TestBean7.Ack parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hanschen.multidex.bean.TestBean7.Ack parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.Ack parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hanschen.multidex.bean.TestBean7.Ack parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.Ack parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.Ack parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.Ack parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.Ack parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.Ack parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.Ack parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.hanschen.multidex.bean.TestBean7.Ack prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.hanschen.multidex.bean.Ack}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:com.hanschen.multidex.bean.Ack)
            com.hanschen.multidex.bean.TestBean7.AckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_Ack_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_Ack_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        com.hanschen.multidex.bean.TestBean7.Ack.class, com.hanschen.multidex.bean.TestBean7.Ack.Builder.class);
      }

      // Construct using com.hanschen.multidex.bean.TestBean7.Ack.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getStateFieldBuilder();
          getBindListFieldBuilder();
          getHostListFieldBuilder();
          getParentControlTaskListFieldBuilder();
          getSpeedLimitListFieldBuilder();
          getSmartSocketsFieldBuilder();
          getSystemInfoFieldBuilder();
          getGuestWifiFieldBuilder();
          getSuperAdminFieldBuilder();
          getHardDiskInfoFieldBuilder();
          getWanSettingFieldBuilder();
          getWifiSettingFieldBuilder();
          getRouterInfoFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (stateBuilder_ == null) {
          state_ = null;
        } else {
          stateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (bindListBuilder_ == null) {
          bindList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          bindListBuilder_.clear();
        }
        if (hostListBuilder_ == null) {
          hostList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          hostListBuilder_.clear();
        }
        if (parentControlTaskListBuilder_ == null) {
          parentControlTaskList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          parentControlTaskListBuilder_.clear();
        }
        macList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (speedLimitListBuilder_ == null) {
          speedLimitList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          speedLimitListBuilder_.clear();
        }
        authorizationList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000040);
        if (smartSocketsBuilder_ == null) {
          smartSockets_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          smartSocketsBuilder_.clear();
        }
        if (systemInfoBuilder_ == null) {
          systemInfo_ = null;
        } else {
          systemInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        wifiMode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        if (guestWifiBuilder_ == null) {
          guestWifi_ = null;
        } else {
          guestWifiBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        if (superAdminBuilder_ == null) {
          superAdmin_ = null;
        } else {
          superAdminBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        smartBandwidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        if (hardDiskInfoBuilder_ == null) {
          hardDiskInfo_ = null;
        } else {
          hardDiskInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        if (wanSettingBuilder_ == null) {
          wanSetting_ = null;
        } else {
          wanSettingBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00004000);
        if (wifiSettingBuilder_ == null) {
          wifiSetting_ = null;
        } else {
          wifiSettingBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00008000);
        powerStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        if (routerInfoBuilder_ == null) {
          routerInfo_ = null;
        } else {
          routerInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00020000);
        sambaPassword_ = "";
        bitField0_ = (bitField0_ & ~0x00040000);
        uuid_ = "";
        bitField0_ = (bitField0_ & ~0x00080000);
        homeShareMode_ = 0;
        bitField0_ = (bitField0_ & ~0x00100000);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_Ack_descriptor;
      }

      public com.hanschen.multidex.bean.TestBean7.Ack getDefaultInstanceForType() {
        return com.hanschen.multidex.bean.TestBean7.Ack.getDefaultInstance();
      }

      public com.hanschen.multidex.bean.TestBean7.Ack build() {
        com.hanschen.multidex.bean.TestBean7.Ack result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hanschen.multidex.bean.TestBean7.Ack buildPartial() {
        com.hanschen.multidex.bean.TestBean7.Ack result = new com.hanschen.multidex.bean.TestBean7.Ack(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (stateBuilder_ == null) {
          result.state_ = state_;
        } else {
          result.state_ = stateBuilder_.build();
        }
        if (bindListBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            bindList_ = java.util.Collections.unmodifiableList(bindList_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.bindList_ = bindList_;
        } else {
          result.bindList_ = bindListBuilder_.build();
        }
        if (hostListBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            hostList_ = java.util.Collections.unmodifiableList(hostList_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.hostList_ = hostList_;
        } else {
          result.hostList_ = hostListBuilder_.build();
        }
        if (parentControlTaskListBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            parentControlTaskList_ = java.util.Collections.unmodifiableList(parentControlTaskList_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.parentControlTaskList_ = parentControlTaskList_;
        } else {
          result.parentControlTaskList_ = parentControlTaskListBuilder_.build();
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          macList_ = macList_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.macList_ = macList_;
        if (speedLimitListBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            speedLimitList_ = java.util.Collections.unmodifiableList(speedLimitList_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.speedLimitList_ = speedLimitList_;
        } else {
          result.speedLimitList_ = speedLimitListBuilder_.build();
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          authorizationList_ = authorizationList_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.authorizationList_ = authorizationList_;
        if (smartSocketsBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            smartSockets_ = java.util.Collections.unmodifiableList(smartSockets_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.smartSockets_ = smartSockets_;
        } else {
          result.smartSockets_ = smartSocketsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000002;
        }
        if (systemInfoBuilder_ == null) {
          result.systemInfo_ = systemInfo_;
        } else {
          result.systemInfo_ = systemInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000004;
        }
        result.wifiMode_ = wifiMode_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000008;
        }
        if (guestWifiBuilder_ == null) {
          result.guestWifi_ = guestWifi_;
        } else {
          result.guestWifi_ = guestWifiBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000010;
        }
        if (superAdminBuilder_ == null) {
          result.superAdmin_ = superAdmin_;
        } else {
          result.superAdmin_ = superAdminBuilder_.build();
        }
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000020;
        }
        result.smartBandwidth_ = smartBandwidth_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00000040;
        }
        if (hardDiskInfoBuilder_ == null) {
          result.hardDiskInfo_ = hardDiskInfo_;
        } else {
          result.hardDiskInfo_ = hardDiskInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00000080;
        }
        if (wanSettingBuilder_ == null) {
          result.wanSetting_ = wanSetting_;
        } else {
          result.wanSetting_ = wanSettingBuilder_.build();
        }
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00000100;
        }
        if (wifiSettingBuilder_ == null) {
          result.wifiSetting_ = wifiSetting_;
        } else {
          result.wifiSetting_ = wifiSettingBuilder_.build();
        }
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00000200;
        }
        result.powerStatus_ = powerStatus_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00000400;
        }
        if (routerInfoBuilder_ == null) {
          result.routerInfo_ = routerInfo_;
        } else {
          result.routerInfo_ = routerInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.sambaPassword_ = sambaPassword_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.uuid_ = uuid_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.homeShareMode_ = homeShareMode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hanschen.multidex.bean.TestBean7.Ack) {
          return mergeFrom((com.hanschen.multidex.bean.TestBean7.Ack)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hanschen.multidex.bean.TestBean7.Ack other) {
        if (other == com.hanschen.multidex.bean.TestBean7.Ack.getDefaultInstance()) return this;
        if (other.hasState()) {
          mergeState(other.getState());
        }
        if (bindListBuilder_ == null) {
          if (!other.bindList_.isEmpty()) {
            if (bindList_.isEmpty()) {
              bindList_ = other.bindList_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureBindListIsMutable();
              bindList_.addAll(other.bindList_);
            }
            onChanged();
          }
        } else {
          if (!other.bindList_.isEmpty()) {
            if (bindListBuilder_.isEmpty()) {
              bindListBuilder_.dispose();
              bindListBuilder_ = null;
              bindList_ = other.bindList_;
              bitField0_ = (bitField0_ & ~0x00000002);
              bindListBuilder_ =
                      com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                              getBindListFieldBuilder() : null;
            } else {
              bindListBuilder_.addAllMessages(other.bindList_);
            }
          }
        }
        if (hostListBuilder_ == null) {
          if (!other.hostList_.isEmpty()) {
            if (hostList_.isEmpty()) {
              hostList_ = other.hostList_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureHostListIsMutable();
              hostList_.addAll(other.hostList_);
            }
            onChanged();
          }
        } else {
          if (!other.hostList_.isEmpty()) {
            if (hostListBuilder_.isEmpty()) {
              hostListBuilder_.dispose();
              hostListBuilder_ = null;
              hostList_ = other.hostList_;
              bitField0_ = (bitField0_ & ~0x00000004);
              hostListBuilder_ =
                      com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                              getHostListFieldBuilder() : null;
            } else {
              hostListBuilder_.addAllMessages(other.hostList_);
            }
          }
        }
        if (parentControlTaskListBuilder_ == null) {
          if (!other.parentControlTaskList_.isEmpty()) {
            if (parentControlTaskList_.isEmpty()) {
              parentControlTaskList_ = other.parentControlTaskList_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureParentControlTaskListIsMutable();
              parentControlTaskList_.addAll(other.parentControlTaskList_);
            }
            onChanged();
          }
        } else {
          if (!other.parentControlTaskList_.isEmpty()) {
            if (parentControlTaskListBuilder_.isEmpty()) {
              parentControlTaskListBuilder_.dispose();
              parentControlTaskListBuilder_ = null;
              parentControlTaskList_ = other.parentControlTaskList_;
              bitField0_ = (bitField0_ & ~0x00000008);
              parentControlTaskListBuilder_ =
                      com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                              getParentControlTaskListFieldBuilder() : null;
            } else {
              parentControlTaskListBuilder_.addAllMessages(other.parentControlTaskList_);
            }
          }
        }
        if (!other.macList_.isEmpty()) {
          if (macList_.isEmpty()) {
            macList_ = other.macList_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureMacListIsMutable();
            macList_.addAll(other.macList_);
          }
          onChanged();
        }
        if (speedLimitListBuilder_ == null) {
          if (!other.speedLimitList_.isEmpty()) {
            if (speedLimitList_.isEmpty()) {
              speedLimitList_ = other.speedLimitList_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureSpeedLimitListIsMutable();
              speedLimitList_.addAll(other.speedLimitList_);
            }
            onChanged();
          }
        } else {
          if (!other.speedLimitList_.isEmpty()) {
            if (speedLimitListBuilder_.isEmpty()) {
              speedLimitListBuilder_.dispose();
              speedLimitListBuilder_ = null;
              speedLimitList_ = other.speedLimitList_;
              bitField0_ = (bitField0_ & ~0x00000020);
              speedLimitListBuilder_ =
                      com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                              getSpeedLimitListFieldBuilder() : null;
            } else {
              speedLimitListBuilder_.addAllMessages(other.speedLimitList_);
            }
          }
        }
        if (!other.authorizationList_.isEmpty()) {
          if (authorizationList_.isEmpty()) {
            authorizationList_ = other.authorizationList_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureAuthorizationListIsMutable();
            authorizationList_.addAll(other.authorizationList_);
          }
          onChanged();
        }
        if (smartSocketsBuilder_ == null) {
          if (!other.smartSockets_.isEmpty()) {
            if (smartSockets_.isEmpty()) {
              smartSockets_ = other.smartSockets_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureSmartSocketsIsMutable();
              smartSockets_.addAll(other.smartSockets_);
            }
            onChanged();
          }
        } else {
          if (!other.smartSockets_.isEmpty()) {
            if (smartSocketsBuilder_.isEmpty()) {
              smartSocketsBuilder_.dispose();
              smartSocketsBuilder_ = null;
              smartSockets_ = other.smartSockets_;
              bitField0_ = (bitField0_ & ~0x00000080);
              smartSocketsBuilder_ =
                      com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                              getSmartSocketsFieldBuilder() : null;
            } else {
              smartSocketsBuilder_.addAllMessages(other.smartSockets_);
            }
          }
        }
        if (other.hasSystemInfo()) {
          mergeSystemInfo(other.getSystemInfo());
        }
        if (other.hasWifiMode()) {
          setWifiMode(other.getWifiMode());
        }
        if (other.hasGuestWifi()) {
          mergeGuestWifi(other.getGuestWifi());
        }
        if (other.hasSuperAdmin()) {
          mergeSuperAdmin(other.getSuperAdmin());
        }
        if (other.hasSmartBandwidth()) {
          setSmartBandwidth(other.getSmartBandwidth());
        }
        if (other.hasHardDiskInfo()) {
          mergeHardDiskInfo(other.getHardDiskInfo());
        }
        if (other.hasWanSetting()) {
          mergeWanSetting(other.getWanSetting());
        }
        if (other.hasWifiSetting()) {
          mergeWifiSetting(other.getWifiSetting());
        }
        if (other.hasPowerStatus()) {
          setPowerStatus(other.getPowerStatus());
        }
        if (other.hasRouterInfo()) {
          mergeRouterInfo(other.getRouterInfo());
        }
        if (other.hasSambaPassword()) {
          bitField0_ |= 0x00040000;
          sambaPassword_ = other.sambaPassword_;
          onChanged();
        }
        if (other.hasUuid()) {
          bitField0_ |= 0x00080000;
          uuid_ = other.uuid_;
          onChanged();
        }
        if (other.hasHomeShareMode()) {
          setHomeShareMode(other.getHomeShareMode());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasState()) {
          return false;
        }
        if (!getState().isInitialized()) {
          return false;
        }
        for (int i = 0; i < getBindListCount(); i++) {
          if (!getBindList(i).isInitialized()) {
            return false;
          }
        }
        for (int i = 0; i < getHostListCount(); i++) {
          if (!getHostList(i).isInitialized()) {
            return false;
          }
        }
        for (int i = 0; i < getParentControlTaskListCount(); i++) {
          if (!getParentControlTaskList(i).isInitialized()) {
            return false;
          }
        }
        for (int i = 0; i < getSpeedLimitListCount(); i++) {
          if (!getSpeedLimitList(i).isInitialized()) {
            return false;
          }
        }
        for (int i = 0; i < getSmartSocketsCount(); i++) {
          if (!getSmartSockets(i).isInitialized()) {
            return false;
          }
        }
        if (hasSystemInfo()) {
          if (!getSystemInfo().isInitialized()) {
            return false;
          }
        }
        if (hasGuestWifi()) {
          if (!getGuestWifi().isInitialized()) {
            return false;
          }
        }
        if (hasSuperAdmin()) {
          if (!getSuperAdmin().isInitialized()) {
            return false;
          }
        }
        if (hasHardDiskInfo()) {
          if (!getHardDiskInfo().isInitialized()) {
            return false;
          }
        }
        if (hasWanSetting()) {
          if (!getWanSetting().isInitialized()) {
            return false;
          }
        }
        if (hasWifiSetting()) {
          if (!getWifiSetting().isInitialized()) {
            return false;
          }
        }
        if (hasRouterInfo()) {
          if (!getRouterInfo().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        com.hanschen.multidex.bean.TestBean7.Ack parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hanschen.multidex.bean.TestBean7.Ack) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.hanschen.multidex.bean.TestBean7.RequestState state_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.RequestState, com.hanschen.multidex.bean.TestBean7.RequestState.Builder, com.hanschen.multidex.bean.TestBean7.RequestStateOrBuilder> stateBuilder_;
      /**
       * <code>required .com.hanschen.multidex.bean.RequestState state = 1;</code>
       */
      public boolean hasState() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .com.hanschen.multidex.bean.RequestState state = 1;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.RequestState getState() {
        if (stateBuilder_ == null) {
          return state_ == null ? com.hanschen.multidex.bean.TestBean7.RequestState.getDefaultInstance() : state_;
        } else {
          return stateBuilder_.getMessage();
        }
      }
      /**
       * <code>required .com.hanschen.multidex.bean.RequestState state = 1;</code>
       */
      public Builder setState(com.hanschen.multidex.bean.TestBean7.RequestState value) {
        if (stateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          state_ = value;
          onChanged();
        } else {
          stateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .com.hanschen.multidex.bean.RequestState state = 1;</code>
       */
      public Builder setState(
              com.hanschen.multidex.bean.TestBean7.RequestState.Builder builderForValue) {
        if (stateBuilder_ == null) {
          state_ = builderForValue.build();
          onChanged();
        } else {
          stateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .com.hanschen.multidex.bean.RequestState state = 1;</code>
       */
      public Builder mergeState(com.hanschen.multidex.bean.TestBean7.RequestState value) {
        if (stateBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
                  state_ != null &&
                  state_ != com.hanschen.multidex.bean.TestBean7.RequestState.getDefaultInstance()) {
            state_ =
                    com.hanschen.multidex.bean.TestBean7.RequestState.newBuilder(state_).mergeFrom(value).buildPartial();
          } else {
            state_ = value;
          }
          onChanged();
        } else {
          stateBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .com.hanschen.multidex.bean.RequestState state = 1;</code>
       */
      public Builder clearState() {
        if (stateBuilder_ == null) {
          state_ = null;
          onChanged();
        } else {
          stateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .com.hanschen.multidex.bean.RequestState state = 1;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.RequestState.Builder getStateBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getStateFieldBuilder().getBuilder();
      }
      /**
       * <code>required .com.hanschen.multidex.bean.RequestState state = 1;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.RequestStateOrBuilder getStateOrBuilder() {
        if (stateBuilder_ != null) {
          return stateBuilder_.getMessageOrBuilder();
        } else {
          return state_ == null ?
                  com.hanschen.multidex.bean.TestBean7.RequestState.getDefaultInstance() : state_;
        }
      }
      /**
       * <code>required .com.hanschen.multidex.bean.RequestState state = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.RequestState, com.hanschen.multidex.bean.TestBean7.RequestState.Builder, com.hanschen.multidex.bean.TestBean7.RequestStateOrBuilder>
      getStateFieldBuilder() {
        if (stateBuilder_ == null) {
          stateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.hanschen.multidex.bean.TestBean7.RequestState, com.hanschen.multidex.bean.TestBean7.RequestState.Builder, com.hanschen.multidex.bean.TestBean7.RequestStateOrBuilder>(
                  getState(),
                  getParentForChildren(),
                  isClean());
          state_ = null;
        }
        return stateBuilder_;
      }

      private java.util.List<com.hanschen.multidex.bean.TestBean7.CloudAccount> bindList_ =
              java.util.Collections.emptyList();
      private void ensureBindListIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          bindList_ = new java.util.ArrayList<com.hanschen.multidex.bean.TestBean7.CloudAccount>(bindList_);
          bitField0_ |= 0x00000002;
        }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.CloudAccount, com.hanschen.multidex.bean.TestBean7.CloudAccount.Builder, com.hanschen.multidex.bean.TestBean7.CloudAccountOrBuilder> bindListBuilder_;

      /**
       * <code>repeated .com.hanschen.multidex.bean.CloudAccount bind_list = 2;</code>
       */
      public java.util.List<com.hanschen.multidex.bean.TestBean7.CloudAccount> getBindListList() {
        if (bindListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(bindList_);
        } else {
          return bindListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.CloudAccount bind_list = 2;</code>
       */
      public int getBindListCount() {
        if (bindListBuilder_ == null) {
          return bindList_.size();
        } else {
          return bindListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.CloudAccount bind_list = 2;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.CloudAccount getBindList(int index) {
        if (bindListBuilder_ == null) {
          return bindList_.get(index);
        } else {
          return bindListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.CloudAccount bind_list = 2;</code>
       */
      public Builder setBindList(
              int index, com.hanschen.multidex.bean.TestBean7.CloudAccount value) {
        if (bindListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBindListIsMutable();
          bindList_.set(index, value);
          onChanged();
        } else {
          bindListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.CloudAccount bind_list = 2;</code>
       */
      public Builder setBindList(
              int index, com.hanschen.multidex.bean.TestBean7.CloudAccount.Builder builderForValue) {
        if (bindListBuilder_ == null) {
          ensureBindListIsMutable();
          bindList_.set(index, builderForValue.build());
          onChanged();
        } else {
          bindListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.CloudAccount bind_list = 2;</code>
       */
      public Builder addBindList(com.hanschen.multidex.bean.TestBean7.CloudAccount value) {
        if (bindListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBindListIsMutable();
          bindList_.add(value);
          onChanged();
        } else {
          bindListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.CloudAccount bind_list = 2;</code>
       */
      public Builder addBindList(
              int index, com.hanschen.multidex.bean.TestBean7.CloudAccount value) {
        if (bindListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBindListIsMutable();
          bindList_.add(index, value);
          onChanged();
        } else {
          bindListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.CloudAccount bind_list = 2;</code>
       */
      public Builder addBindList(
              com.hanschen.multidex.bean.TestBean7.CloudAccount.Builder builderForValue) {
        if (bindListBuilder_ == null) {
          ensureBindListIsMutable();
          bindList_.add(builderForValue.build());
          onChanged();
        } else {
          bindListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.CloudAccount bind_list = 2;</code>
       */
      public Builder addBindList(
              int index, com.hanschen.multidex.bean.TestBean7.CloudAccount.Builder builderForValue) {
        if (bindListBuilder_ == null) {
          ensureBindListIsMutable();
          bindList_.add(index, builderForValue.build());
          onChanged();
        } else {
          bindListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.CloudAccount bind_list = 2;</code>
       */
      public Builder addAllBindList(
              java.lang.Iterable<? extends com.hanschen.multidex.bean.TestBean7.CloudAccount> values) {
        if (bindListBuilder_ == null) {
          ensureBindListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
                  values, bindList_);
          onChanged();
        } else {
          bindListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.CloudAccount bind_list = 2;</code>
       */
      public Builder clearBindList() {
        if (bindListBuilder_ == null) {
          bindList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          bindListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.CloudAccount bind_list = 2;</code>
       */
      public Builder removeBindList(int index) {
        if (bindListBuilder_ == null) {
          ensureBindListIsMutable();
          bindList_.remove(index);
          onChanged();
        } else {
          bindListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.CloudAccount bind_list = 2;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.CloudAccount.Builder getBindListBuilder(
              int index) {
        return getBindListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.CloudAccount bind_list = 2;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.CloudAccountOrBuilder getBindListOrBuilder(
              int index) {
        if (bindListBuilder_ == null) {
          return bindList_.get(index);  } else {
          return bindListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.CloudAccount bind_list = 2;</code>
       */
      public java.util.List<? extends com.hanschen.multidex.bean.TestBean7.CloudAccountOrBuilder>
      getBindListOrBuilderList() {
        if (bindListBuilder_ != null) {
          return bindListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(bindList_);
        }
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.CloudAccount bind_list = 2;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.CloudAccount.Builder addBindListBuilder() {
        return getBindListFieldBuilder().addBuilder(
                com.hanschen.multidex.bean.TestBean7.CloudAccount.getDefaultInstance());
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.CloudAccount bind_list = 2;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.CloudAccount.Builder addBindListBuilder(
              int index) {
        return getBindListFieldBuilder().addBuilder(
                index, com.hanschen.multidex.bean.TestBean7.CloudAccount.getDefaultInstance());
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.CloudAccount bind_list = 2;</code>
       */
      public java.util.List<com.hanschen.multidex.bean.TestBean7.CloudAccount.Builder>
      getBindListBuilderList() {
        return getBindListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.CloudAccount, com.hanschen.multidex.bean.TestBean7.CloudAccount.Builder, com.hanschen.multidex.bean.TestBean7.CloudAccountOrBuilder>
      getBindListFieldBuilder() {
        if (bindListBuilder_ == null) {
          bindListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                  com.hanschen.multidex.bean.TestBean7.CloudAccount, com.hanschen.multidex.bean.TestBean7.CloudAccount.Builder, com.hanschen.multidex.bean.TestBean7.CloudAccountOrBuilder>(
                  bindList_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          bindList_ = null;
        }
        return bindListBuilder_;
      }

      private java.util.List<com.hanschen.multidex.bean.TestBean7.Host> hostList_ =
              java.util.Collections.emptyList();
      private void ensureHostListIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          hostList_ = new java.util.ArrayList<com.hanschen.multidex.bean.TestBean7.Host>(hostList_);
          bitField0_ |= 0x00000004;
        }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.Host, com.hanschen.multidex.bean.TestBean7.Host.Builder, com.hanschen.multidex.bean.TestBean7.HostOrBuilder> hostListBuilder_;

      /**
       * <code>repeated .com.hanschen.multidex.bean.Host host_list = 3;</code>
       */
      public java.util.List<com.hanschen.multidex.bean.TestBean7.Host> getHostListList() {
        if (hostListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(hostList_);
        } else {
          return hostListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.Host host_list = 3;</code>
       */
      public int getHostListCount() {
        if (hostListBuilder_ == null) {
          return hostList_.size();
        } else {
          return hostListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.Host host_list = 3;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.Host getHostList(int index) {
        if (hostListBuilder_ == null) {
          return hostList_.get(index);
        } else {
          return hostListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.Host host_list = 3;</code>
       */
      public Builder setHostList(
              int index, com.hanschen.multidex.bean.TestBean7.Host value) {
        if (hostListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHostListIsMutable();
          hostList_.set(index, value);
          onChanged();
        } else {
          hostListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.Host host_list = 3;</code>
       */
      public Builder setHostList(
              int index, com.hanschen.multidex.bean.TestBean7.Host.Builder builderForValue) {
        if (hostListBuilder_ == null) {
          ensureHostListIsMutable();
          hostList_.set(index, builderForValue.build());
          onChanged();
        } else {
          hostListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.Host host_list = 3;</code>
       */
      public Builder addHostList(com.hanschen.multidex.bean.TestBean7.Host value) {
        if (hostListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHostListIsMutable();
          hostList_.add(value);
          onChanged();
        } else {
          hostListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.Host host_list = 3;</code>
       */
      public Builder addHostList(
              int index, com.hanschen.multidex.bean.TestBean7.Host value) {
        if (hostListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHostListIsMutable();
          hostList_.add(index, value);
          onChanged();
        } else {
          hostListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.Host host_list = 3;</code>
       */
      public Builder addHostList(
              com.hanschen.multidex.bean.TestBean7.Host.Builder builderForValue) {
        if (hostListBuilder_ == null) {
          ensureHostListIsMutable();
          hostList_.add(builderForValue.build());
          onChanged();
        } else {
          hostListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.Host host_list = 3;</code>
       */
      public Builder addHostList(
              int index, com.hanschen.multidex.bean.TestBean7.Host.Builder builderForValue) {
        if (hostListBuilder_ == null) {
          ensureHostListIsMutable();
          hostList_.add(index, builderForValue.build());
          onChanged();
        } else {
          hostListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.Host host_list = 3;</code>
       */
      public Builder addAllHostList(
              java.lang.Iterable<? extends com.hanschen.multidex.bean.TestBean7.Host> values) {
        if (hostListBuilder_ == null) {
          ensureHostListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
                  values, hostList_);
          onChanged();
        } else {
          hostListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.Host host_list = 3;</code>
       */
      public Builder clearHostList() {
        if (hostListBuilder_ == null) {
          hostList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          hostListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.Host host_list = 3;</code>
       */
      public Builder removeHostList(int index) {
        if (hostListBuilder_ == null) {
          ensureHostListIsMutable();
          hostList_.remove(index);
          onChanged();
        } else {
          hostListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.Host host_list = 3;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.Host.Builder getHostListBuilder(
              int index) {
        return getHostListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.Host host_list = 3;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.HostOrBuilder getHostListOrBuilder(
              int index) {
        if (hostListBuilder_ == null) {
          return hostList_.get(index);  } else {
          return hostListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.Host host_list = 3;</code>
       */
      public java.util.List<? extends com.hanschen.multidex.bean.TestBean7.HostOrBuilder>
      getHostListOrBuilderList() {
        if (hostListBuilder_ != null) {
          return hostListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(hostList_);
        }
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.Host host_list = 3;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.Host.Builder addHostListBuilder() {
        return getHostListFieldBuilder().addBuilder(
                com.hanschen.multidex.bean.TestBean7.Host.getDefaultInstance());
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.Host host_list = 3;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.Host.Builder addHostListBuilder(
              int index) {
        return getHostListFieldBuilder().addBuilder(
                index, com.hanschen.multidex.bean.TestBean7.Host.getDefaultInstance());
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.Host host_list = 3;</code>
       */
      public java.util.List<com.hanschen.multidex.bean.TestBean7.Host.Builder>
      getHostListBuilderList() {
        return getHostListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.Host, com.hanschen.multidex.bean.TestBean7.Host.Builder, com.hanschen.multidex.bean.TestBean7.HostOrBuilder>
      getHostListFieldBuilder() {
        if (hostListBuilder_ == null) {
          hostListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                  com.hanschen.multidex.bean.TestBean7.Host, com.hanschen.multidex.bean.TestBean7.Host.Builder, com.hanschen.multidex.bean.TestBean7.HostOrBuilder>(
                  hostList_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          hostList_ = null;
        }
        return hostListBuilder_;
      }

      private java.util.List<com.hanschen.multidex.bean.TestBean7.ParentControlTask> parentControlTaskList_ =
              java.util.Collections.emptyList();
      private void ensureParentControlTaskListIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          parentControlTaskList_ = new java.util.ArrayList<com.hanschen.multidex.bean.TestBean7.ParentControlTask>(parentControlTaskList_);
          bitField0_ |= 0x00000008;
        }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.ParentControlTask, com.hanschen.multidex.bean.TestBean7.ParentControlTask.Builder, com.hanschen.multidex.bean.TestBean7.ParentControlTaskOrBuilder> parentControlTaskListBuilder_;

      /**
       * <code>repeated .com.hanschen.multidex.bean.ParentControlTask parent_control_task_list = 4;</code>
       */
      public java.util.List<com.hanschen.multidex.bean.TestBean7.ParentControlTask> getParentControlTaskListList() {
        if (parentControlTaskListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(parentControlTaskList_);
        } else {
          return parentControlTaskListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.ParentControlTask parent_control_task_list = 4;</code>
       */
      public int getParentControlTaskListCount() {
        if (parentControlTaskListBuilder_ == null) {
          return parentControlTaskList_.size();
        } else {
          return parentControlTaskListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.ParentControlTask parent_control_task_list = 4;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.ParentControlTask getParentControlTaskList(int index) {
        if (parentControlTaskListBuilder_ == null) {
          return parentControlTaskList_.get(index);
        } else {
          return parentControlTaskListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.ParentControlTask parent_control_task_list = 4;</code>
       */
      public Builder setParentControlTaskList(
              int index, com.hanschen.multidex.bean.TestBean7.ParentControlTask value) {
        if (parentControlTaskListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParentControlTaskListIsMutable();
          parentControlTaskList_.set(index, value);
          onChanged();
        } else {
          parentControlTaskListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.ParentControlTask parent_control_task_list = 4;</code>
       */
      public Builder setParentControlTaskList(
              int index, com.hanschen.multidex.bean.TestBean7.ParentControlTask.Builder builderForValue) {
        if (parentControlTaskListBuilder_ == null) {
          ensureParentControlTaskListIsMutable();
          parentControlTaskList_.set(index, builderForValue.build());
          onChanged();
        } else {
          parentControlTaskListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.ParentControlTask parent_control_task_list = 4;</code>
       */
      public Builder addParentControlTaskList(com.hanschen.multidex.bean.TestBean7.ParentControlTask value) {
        if (parentControlTaskListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParentControlTaskListIsMutable();
          parentControlTaskList_.add(value);
          onChanged();
        } else {
          parentControlTaskListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.ParentControlTask parent_control_task_list = 4;</code>
       */
      public Builder addParentControlTaskList(
              int index, com.hanschen.multidex.bean.TestBean7.ParentControlTask value) {
        if (parentControlTaskListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParentControlTaskListIsMutable();
          parentControlTaskList_.add(index, value);
          onChanged();
        } else {
          parentControlTaskListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.ParentControlTask parent_control_task_list = 4;</code>
       */
      public Builder addParentControlTaskList(
              com.hanschen.multidex.bean.TestBean7.ParentControlTask.Builder builderForValue) {
        if (parentControlTaskListBuilder_ == null) {
          ensureParentControlTaskListIsMutable();
          parentControlTaskList_.add(builderForValue.build());
          onChanged();
        } else {
          parentControlTaskListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.ParentControlTask parent_control_task_list = 4;</code>
       */
      public Builder addParentControlTaskList(
              int index, com.hanschen.multidex.bean.TestBean7.ParentControlTask.Builder builderForValue) {
        if (parentControlTaskListBuilder_ == null) {
          ensureParentControlTaskListIsMutable();
          parentControlTaskList_.add(index, builderForValue.build());
          onChanged();
        } else {
          parentControlTaskListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.ParentControlTask parent_control_task_list = 4;</code>
       */
      public Builder addAllParentControlTaskList(
              java.lang.Iterable<? extends com.hanschen.multidex.bean.TestBean7.ParentControlTask> values) {
        if (parentControlTaskListBuilder_ == null) {
          ensureParentControlTaskListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
                  values, parentControlTaskList_);
          onChanged();
        } else {
          parentControlTaskListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.ParentControlTask parent_control_task_list = 4;</code>
       */
      public Builder clearParentControlTaskList() {
        if (parentControlTaskListBuilder_ == null) {
          parentControlTaskList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          parentControlTaskListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.ParentControlTask parent_control_task_list = 4;</code>
       */
      public Builder removeParentControlTaskList(int index) {
        if (parentControlTaskListBuilder_ == null) {
          ensureParentControlTaskListIsMutable();
          parentControlTaskList_.remove(index);
          onChanged();
        } else {
          parentControlTaskListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.ParentControlTask parent_control_task_list = 4;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.ParentControlTask.Builder getParentControlTaskListBuilder(
              int index) {
        return getParentControlTaskListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.ParentControlTask parent_control_task_list = 4;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.ParentControlTaskOrBuilder getParentControlTaskListOrBuilder(
              int index) {
        if (parentControlTaskListBuilder_ == null) {
          return parentControlTaskList_.get(index);  } else {
          return parentControlTaskListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.ParentControlTask parent_control_task_list = 4;</code>
       */
      public java.util.List<? extends com.hanschen.multidex.bean.TestBean7.ParentControlTaskOrBuilder>
      getParentControlTaskListOrBuilderList() {
        if (parentControlTaskListBuilder_ != null) {
          return parentControlTaskListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(parentControlTaskList_);
        }
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.ParentControlTask parent_control_task_list = 4;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.ParentControlTask.Builder addParentControlTaskListBuilder() {
        return getParentControlTaskListFieldBuilder().addBuilder(
                com.hanschen.multidex.bean.TestBean7.ParentControlTask.getDefaultInstance());
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.ParentControlTask parent_control_task_list = 4;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.ParentControlTask.Builder addParentControlTaskListBuilder(
              int index) {
        return getParentControlTaskListFieldBuilder().addBuilder(
                index, com.hanschen.multidex.bean.TestBean7.ParentControlTask.getDefaultInstance());
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.ParentControlTask parent_control_task_list = 4;</code>
       */
      public java.util.List<com.hanschen.multidex.bean.TestBean7.ParentControlTask.Builder>
      getParentControlTaskListBuilderList() {
        return getParentControlTaskListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.ParentControlTask, com.hanschen.multidex.bean.TestBean7.ParentControlTask.Builder, com.hanschen.multidex.bean.TestBean7.ParentControlTaskOrBuilder>
      getParentControlTaskListFieldBuilder() {
        if (parentControlTaskListBuilder_ == null) {
          parentControlTaskListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                  com.hanschen.multidex.bean.TestBean7.ParentControlTask, com.hanschen.multidex.bean.TestBean7.ParentControlTask.Builder, com.hanschen.multidex.bean.TestBean7.ParentControlTaskOrBuilder>(
                  parentControlTaskList_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          parentControlTaskList_ = null;
        }
        return parentControlTaskListBuilder_;
      }

      private com.google.protobuf.LazyStringList macList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureMacListIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          macList_ = new com.google.protobuf.LazyStringArrayList(macList_);
          bitField0_ |= 0x00000010;
        }
      }
      /**
       * <code>repeated string mac_list = 5;</code>
       */
      public com.google.protobuf.ProtocolStringList
      getMacListList() {
        return macList_.getUnmodifiableView();
      }
      /**
       * <code>repeated string mac_list = 5;</code>
       */
      public int getMacListCount() {
        return macList_.size();
      }
      /**
       * <code>repeated string mac_list = 5;</code>
       */
      public java.lang.String getMacList(int index) {
        return macList_.get(index);
      }
      /**
       * <code>repeated string mac_list = 5;</code>
       */
      public com.google.protobuf.ByteString
      getMacListBytes(int index) {
        return macList_.getByteString(index);
      }
      /**
       * <code>repeated string mac_list = 5;</code>
       */
      public Builder setMacList(
              int index, java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMacListIsMutable();
        macList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string mac_list = 5;</code>
       */
      public Builder addMacList(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMacListIsMutable();
        macList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string mac_list = 5;</code>
       */
      public Builder addAllMacList(
              java.lang.Iterable<java.lang.String> values) {
        ensureMacListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, macList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string mac_list = 5;</code>
       */
      public Builder clearMacList() {
        macList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string mac_list = 5;</code>
       */
      public Builder addMacListBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMacListIsMutable();
        macList_.add(value);
        onChanged();
        return this;
      }

      private java.util.List<com.hanschen.multidex.bean.TestBean7.SpeedLimit> speedLimitList_ =
              java.util.Collections.emptyList();
      private void ensureSpeedLimitListIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          speedLimitList_ = new java.util.ArrayList<com.hanschen.multidex.bean.TestBean7.SpeedLimit>(speedLimitList_);
          bitField0_ |= 0x00000020;
        }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.SpeedLimit, com.hanschen.multidex.bean.TestBean7.SpeedLimit.Builder, com.hanschen.multidex.bean.TestBean7.SpeedLimitOrBuilder> speedLimitListBuilder_;

      /**
       * <code>repeated .com.hanschen.multidex.bean.SpeedLimit speed_limit_list = 6;</code>
       */
      public java.util.List<com.hanschen.multidex.bean.TestBean7.SpeedLimit> getSpeedLimitListList() {
        if (speedLimitListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(speedLimitList_);
        } else {
          return speedLimitListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.SpeedLimit speed_limit_list = 6;</code>
       */
      public int getSpeedLimitListCount() {
        if (speedLimitListBuilder_ == null) {
          return speedLimitList_.size();
        } else {
          return speedLimitListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.SpeedLimit speed_limit_list = 6;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.SpeedLimit getSpeedLimitList(int index) {
        if (speedLimitListBuilder_ == null) {
          return speedLimitList_.get(index);
        } else {
          return speedLimitListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.SpeedLimit speed_limit_list = 6;</code>
       */
      public Builder setSpeedLimitList(
              int index, com.hanschen.multidex.bean.TestBean7.SpeedLimit value) {
        if (speedLimitListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSpeedLimitListIsMutable();
          speedLimitList_.set(index, value);
          onChanged();
        } else {
          speedLimitListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.SpeedLimit speed_limit_list = 6;</code>
       */
      public Builder setSpeedLimitList(
              int index, com.hanschen.multidex.bean.TestBean7.SpeedLimit.Builder builderForValue) {
        if (speedLimitListBuilder_ == null) {
          ensureSpeedLimitListIsMutable();
          speedLimitList_.set(index, builderForValue.build());
          onChanged();
        } else {
          speedLimitListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.SpeedLimit speed_limit_list = 6;</code>
       */
      public Builder addSpeedLimitList(com.hanschen.multidex.bean.TestBean7.SpeedLimit value) {
        if (speedLimitListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSpeedLimitListIsMutable();
          speedLimitList_.add(value);
          onChanged();
        } else {
          speedLimitListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.SpeedLimit speed_limit_list = 6;</code>
       */
      public Builder addSpeedLimitList(
              int index, com.hanschen.multidex.bean.TestBean7.SpeedLimit value) {
        if (speedLimitListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSpeedLimitListIsMutable();
          speedLimitList_.add(index, value);
          onChanged();
        } else {
          speedLimitListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.SpeedLimit speed_limit_list = 6;</code>
       */
      public Builder addSpeedLimitList(
              com.hanschen.multidex.bean.TestBean7.SpeedLimit.Builder builderForValue) {
        if (speedLimitListBuilder_ == null) {
          ensureSpeedLimitListIsMutable();
          speedLimitList_.add(builderForValue.build());
          onChanged();
        } else {
          speedLimitListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.SpeedLimit speed_limit_list = 6;</code>
       */
      public Builder addSpeedLimitList(
              int index, com.hanschen.multidex.bean.TestBean7.SpeedLimit.Builder builderForValue) {
        if (speedLimitListBuilder_ == null) {
          ensureSpeedLimitListIsMutable();
          speedLimitList_.add(index, builderForValue.build());
          onChanged();
        } else {
          speedLimitListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.SpeedLimit speed_limit_list = 6;</code>
       */
      public Builder addAllSpeedLimitList(
              java.lang.Iterable<? extends com.hanschen.multidex.bean.TestBean7.SpeedLimit> values) {
        if (speedLimitListBuilder_ == null) {
          ensureSpeedLimitListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
                  values, speedLimitList_);
          onChanged();
        } else {
          speedLimitListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.SpeedLimit speed_limit_list = 6;</code>
       */
      public Builder clearSpeedLimitList() {
        if (speedLimitListBuilder_ == null) {
          speedLimitList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          speedLimitListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.SpeedLimit speed_limit_list = 6;</code>
       */
      public Builder removeSpeedLimitList(int index) {
        if (speedLimitListBuilder_ == null) {
          ensureSpeedLimitListIsMutable();
          speedLimitList_.remove(index);
          onChanged();
        } else {
          speedLimitListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.SpeedLimit speed_limit_list = 6;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.SpeedLimit.Builder getSpeedLimitListBuilder(
              int index) {
        return getSpeedLimitListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.SpeedLimit speed_limit_list = 6;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.SpeedLimitOrBuilder getSpeedLimitListOrBuilder(
              int index) {
        if (speedLimitListBuilder_ == null) {
          return speedLimitList_.get(index);  } else {
          return speedLimitListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.SpeedLimit speed_limit_list = 6;</code>
       */
      public java.util.List<? extends com.hanschen.multidex.bean.TestBean7.SpeedLimitOrBuilder>
      getSpeedLimitListOrBuilderList() {
        if (speedLimitListBuilder_ != null) {
          return speedLimitListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(speedLimitList_);
        }
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.SpeedLimit speed_limit_list = 6;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.SpeedLimit.Builder addSpeedLimitListBuilder() {
        return getSpeedLimitListFieldBuilder().addBuilder(
                com.hanschen.multidex.bean.TestBean7.SpeedLimit.getDefaultInstance());
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.SpeedLimit speed_limit_list = 6;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.SpeedLimit.Builder addSpeedLimitListBuilder(
              int index) {
        return getSpeedLimitListFieldBuilder().addBuilder(
                index, com.hanschen.multidex.bean.TestBean7.SpeedLimit.getDefaultInstance());
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.SpeedLimit speed_limit_list = 6;</code>
       */
      public java.util.List<com.hanschen.multidex.bean.TestBean7.SpeedLimit.Builder>
      getSpeedLimitListBuilderList() {
        return getSpeedLimitListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.SpeedLimit, com.hanschen.multidex.bean.TestBean7.SpeedLimit.Builder, com.hanschen.multidex.bean.TestBean7.SpeedLimitOrBuilder>
      getSpeedLimitListFieldBuilder() {
        if (speedLimitListBuilder_ == null) {
          speedLimitListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                  com.hanschen.multidex.bean.TestBean7.SpeedLimit, com.hanschen.multidex.bean.TestBean7.SpeedLimit.Builder, com.hanschen.multidex.bean.TestBean7.SpeedLimitOrBuilder>(
                  speedLimitList_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          speedLimitList_ = null;
        }
        return speedLimitListBuilder_;
      }

      private com.google.protobuf.LazyStringList authorizationList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureAuthorizationListIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          authorizationList_ = new com.google.protobuf.LazyStringArrayList(authorizationList_);
          bitField0_ |= 0x00000040;
        }
      }
      /**
       * <code>repeated string authorization_list = 7;</code>
       */
      public com.google.protobuf.ProtocolStringList
      getAuthorizationListList() {
        return authorizationList_.getUnmodifiableView();
      }
      /**
       * <code>repeated string authorization_list = 7;</code>
       */
      public int getAuthorizationListCount() {
        return authorizationList_.size();
      }
      /**
       * <code>repeated string authorization_list = 7;</code>
       */
      public java.lang.String getAuthorizationList(int index) {
        return authorizationList_.get(index);
      }
      /**
       * <code>repeated string authorization_list = 7;</code>
       */
      public com.google.protobuf.ByteString
      getAuthorizationListBytes(int index) {
        return authorizationList_.getByteString(index);
      }
      /**
       * <code>repeated string authorization_list = 7;</code>
       */
      public Builder setAuthorizationList(
              int index, java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAuthorizationListIsMutable();
        authorizationList_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string authorization_list = 7;</code>
       */
      public Builder addAuthorizationList(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAuthorizationListIsMutable();
        authorizationList_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string authorization_list = 7;</code>
       */
      public Builder addAllAuthorizationList(
              java.lang.Iterable<java.lang.String> values) {
        ensureAuthorizationListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, authorizationList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string authorization_list = 7;</code>
       */
      public Builder clearAuthorizationList() {
        authorizationList_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string authorization_list = 7;</code>
       */
      public Builder addAuthorizationListBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAuthorizationListIsMutable();
        authorizationList_.add(value);
        onChanged();
        return this;
      }

      private java.util.List<com.hanschen.multidex.bean.TestBean7.SmartSocket> smartSockets_ =
              java.util.Collections.emptyList();
      private void ensureSmartSocketsIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          smartSockets_ = new java.util.ArrayList<com.hanschen.multidex.bean.TestBean7.SmartSocket>(smartSockets_);
          bitField0_ |= 0x00000080;
        }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.SmartSocket, com.hanschen.multidex.bean.TestBean7.SmartSocket.Builder, com.hanschen.multidex.bean.TestBean7.SmartSocketOrBuilder> smartSocketsBuilder_;

      /**
       * <code>repeated .com.hanschen.multidex.bean.SmartSocket smart_sockets = 8;</code>
       */
      public java.util.List<com.hanschen.multidex.bean.TestBean7.SmartSocket> getSmartSocketsList() {
        if (smartSocketsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(smartSockets_);
        } else {
          return smartSocketsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.SmartSocket smart_sockets = 8;</code>
       */
      public int getSmartSocketsCount() {
        if (smartSocketsBuilder_ == null) {
          return smartSockets_.size();
        } else {
          return smartSocketsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.SmartSocket smart_sockets = 8;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.SmartSocket getSmartSockets(int index) {
        if (smartSocketsBuilder_ == null) {
          return smartSockets_.get(index);
        } else {
          return smartSocketsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.SmartSocket smart_sockets = 8;</code>
       */
      public Builder setSmartSockets(
              int index, com.hanschen.multidex.bean.TestBean7.SmartSocket value) {
        if (smartSocketsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSmartSocketsIsMutable();
          smartSockets_.set(index, value);
          onChanged();
        } else {
          smartSocketsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.SmartSocket smart_sockets = 8;</code>
       */
      public Builder setSmartSockets(
              int index, com.hanschen.multidex.bean.TestBean7.SmartSocket.Builder builderForValue) {
        if (smartSocketsBuilder_ == null) {
          ensureSmartSocketsIsMutable();
          smartSockets_.set(index, builderForValue.build());
          onChanged();
        } else {
          smartSocketsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.SmartSocket smart_sockets = 8;</code>
       */
      public Builder addSmartSockets(com.hanschen.multidex.bean.TestBean7.SmartSocket value) {
        if (smartSocketsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSmartSocketsIsMutable();
          smartSockets_.add(value);
          onChanged();
        } else {
          smartSocketsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.SmartSocket smart_sockets = 8;</code>
       */
      public Builder addSmartSockets(
              int index, com.hanschen.multidex.bean.TestBean7.SmartSocket value) {
        if (smartSocketsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSmartSocketsIsMutable();
          smartSockets_.add(index, value);
          onChanged();
        } else {
          smartSocketsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.SmartSocket smart_sockets = 8;</code>
       */
      public Builder addSmartSockets(
              com.hanschen.multidex.bean.TestBean7.SmartSocket.Builder builderForValue) {
        if (smartSocketsBuilder_ == null) {
          ensureSmartSocketsIsMutable();
          smartSockets_.add(builderForValue.build());
          onChanged();
        } else {
          smartSocketsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.SmartSocket smart_sockets = 8;</code>
       */
      public Builder addSmartSockets(
              int index, com.hanschen.multidex.bean.TestBean7.SmartSocket.Builder builderForValue) {
        if (smartSocketsBuilder_ == null) {
          ensureSmartSocketsIsMutable();
          smartSockets_.add(index, builderForValue.build());
          onChanged();
        } else {
          smartSocketsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.SmartSocket smart_sockets = 8;</code>
       */
      public Builder addAllSmartSockets(
              java.lang.Iterable<? extends com.hanschen.multidex.bean.TestBean7.SmartSocket> values) {
        if (smartSocketsBuilder_ == null) {
          ensureSmartSocketsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
                  values, smartSockets_);
          onChanged();
        } else {
          smartSocketsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.SmartSocket smart_sockets = 8;</code>
       */
      public Builder clearSmartSockets() {
        if (smartSocketsBuilder_ == null) {
          smartSockets_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          smartSocketsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.SmartSocket smart_sockets = 8;</code>
       */
      public Builder removeSmartSockets(int index) {
        if (smartSocketsBuilder_ == null) {
          ensureSmartSocketsIsMutable();
          smartSockets_.remove(index);
          onChanged();
        } else {
          smartSocketsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.SmartSocket smart_sockets = 8;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.SmartSocket.Builder getSmartSocketsBuilder(
              int index) {
        return getSmartSocketsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.SmartSocket smart_sockets = 8;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.SmartSocketOrBuilder getSmartSocketsOrBuilder(
              int index) {
        if (smartSocketsBuilder_ == null) {
          return smartSockets_.get(index);  } else {
          return smartSocketsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.SmartSocket smart_sockets = 8;</code>
       */
      public java.util.List<? extends com.hanschen.multidex.bean.TestBean7.SmartSocketOrBuilder>
      getSmartSocketsOrBuilderList() {
        if (smartSocketsBuilder_ != null) {
          return smartSocketsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(smartSockets_);
        }
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.SmartSocket smart_sockets = 8;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.SmartSocket.Builder addSmartSocketsBuilder() {
        return getSmartSocketsFieldBuilder().addBuilder(
                com.hanschen.multidex.bean.TestBean7.SmartSocket.getDefaultInstance());
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.SmartSocket smart_sockets = 8;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.SmartSocket.Builder addSmartSocketsBuilder(
              int index) {
        return getSmartSocketsFieldBuilder().addBuilder(
                index, com.hanschen.multidex.bean.TestBean7.SmartSocket.getDefaultInstance());
      }
      /**
       * <code>repeated .com.hanschen.multidex.bean.SmartSocket smart_sockets = 8;</code>
       */
      public java.util.List<com.hanschen.multidex.bean.TestBean7.SmartSocket.Builder>
      getSmartSocketsBuilderList() {
        return getSmartSocketsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.SmartSocket, com.hanschen.multidex.bean.TestBean7.SmartSocket.Builder, com.hanschen.multidex.bean.TestBean7.SmartSocketOrBuilder>
      getSmartSocketsFieldBuilder() {
        if (smartSocketsBuilder_ == null) {
          smartSocketsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                  com.hanschen.multidex.bean.TestBean7.SmartSocket, com.hanschen.multidex.bean.TestBean7.SmartSocket.Builder, com.hanschen.multidex.bean.TestBean7.SmartSocketOrBuilder>(
                  smartSockets_,
                  ((bitField0_ & 0x00000080) == 0x00000080),
                  getParentForChildren(),
                  isClean());
          smartSockets_ = null;
        }
        return smartSocketsBuilder_;
      }

      private com.hanschen.multidex.bean.TestBean7.SystemInfo systemInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.SystemInfo, com.hanschen.multidex.bean.TestBean7.SystemInfo.Builder, com.hanschen.multidex.bean.TestBean7.SystemInfoOrBuilder> systemInfoBuilder_;
      /**
       * <code>optional .com.hanschen.multidex.bean.SystemInfo system_info = 9;</code>
       */
      public boolean hasSystemInfo() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.SystemInfo system_info = 9;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.SystemInfo getSystemInfo() {
        if (systemInfoBuilder_ == null) {
          return systemInfo_ == null ? com.hanschen.multidex.bean.TestBean7.SystemInfo.getDefaultInstance() : systemInfo_;
        } else {
          return systemInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.SystemInfo system_info = 9;</code>
       */
      public Builder setSystemInfo(com.hanschen.multidex.bean.TestBean7.SystemInfo value) {
        if (systemInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          systemInfo_ = value;
          onChanged();
        } else {
          systemInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.SystemInfo system_info = 9;</code>
       */
      public Builder setSystemInfo(
              com.hanschen.multidex.bean.TestBean7.SystemInfo.Builder builderForValue) {
        if (systemInfoBuilder_ == null) {
          systemInfo_ = builderForValue.build();
          onChanged();
        } else {
          systemInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.SystemInfo system_info = 9;</code>
       */
      public Builder mergeSystemInfo(com.hanschen.multidex.bean.TestBean7.SystemInfo value) {
        if (systemInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100) &&
                  systemInfo_ != null &&
                  systemInfo_ != com.hanschen.multidex.bean.TestBean7.SystemInfo.getDefaultInstance()) {
            systemInfo_ =
                    com.hanschen.multidex.bean.TestBean7.SystemInfo.newBuilder(systemInfo_).mergeFrom(value).buildPartial();
          } else {
            systemInfo_ = value;
          }
          onChanged();
        } else {
          systemInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.SystemInfo system_info = 9;</code>
       */
      public Builder clearSystemInfo() {
        if (systemInfoBuilder_ == null) {
          systemInfo_ = null;
          onChanged();
        } else {
          systemInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.SystemInfo system_info = 9;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.SystemInfo.Builder getSystemInfoBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getSystemInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.SystemInfo system_info = 9;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.SystemInfoOrBuilder getSystemInfoOrBuilder() {
        if (systemInfoBuilder_ != null) {
          return systemInfoBuilder_.getMessageOrBuilder();
        } else {
          return systemInfo_ == null ?
                  com.hanschen.multidex.bean.TestBean7.SystemInfo.getDefaultInstance() : systemInfo_;
        }
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.SystemInfo system_info = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.SystemInfo, com.hanschen.multidex.bean.TestBean7.SystemInfo.Builder, com.hanschen.multidex.bean.TestBean7.SystemInfoOrBuilder>
      getSystemInfoFieldBuilder() {
        if (systemInfoBuilder_ == null) {
          systemInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.hanschen.multidex.bean.TestBean7.SystemInfo, com.hanschen.multidex.bean.TestBean7.SystemInfo.Builder, com.hanschen.multidex.bean.TestBean7.SystemInfoOrBuilder>(
                  getSystemInfo(),
                  getParentForChildren(),
                  isClean());
          systemInfo_ = null;
        }
        return systemInfoBuilder_;
      }

      private int wifiMode_ = 0;
      /**
       * <code>optional .com.hanschen.multidex.bean.WifiMode wifi_mode = 10;</code>
       */
      public boolean hasWifiMode() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.WifiMode wifi_mode = 10;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.WifiMode getWifiMode() {
        com.hanschen.multidex.bean.TestBean7.WifiMode result = com.hanschen.multidex.bean.TestBean7.WifiMode.valueOf(wifiMode_);
        return result == null ? com.hanschen.multidex.bean.TestBean7.WifiMode.OFF : result;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.WifiMode wifi_mode = 10;</code>
       */
      public Builder setWifiMode(com.hanschen.multidex.bean.TestBean7.WifiMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000200;
        wifiMode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.WifiMode wifi_mode = 10;</code>
       */
      public Builder clearWifiMode() {
        bitField0_ = (bitField0_ & ~0x00000200);
        wifiMode_ = 0;
        onChanged();
        return this;
      }

      private com.hanschen.multidex.bean.TestBean7.GuestWifi guestWifi_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.GuestWifi, com.hanschen.multidex.bean.TestBean7.GuestWifi.Builder, com.hanschen.multidex.bean.TestBean7.GuestWifiOrBuilder> guestWifiBuilder_;
      /**
       * <code>optional .com.hanschen.multidex.bean.GuestWifi guest_wifi = 11;</code>
       */
      public boolean hasGuestWifi() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.GuestWifi guest_wifi = 11;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.GuestWifi getGuestWifi() {
        if (guestWifiBuilder_ == null) {
          return guestWifi_ == null ? com.hanschen.multidex.bean.TestBean7.GuestWifi.getDefaultInstance() : guestWifi_;
        } else {
          return guestWifiBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.GuestWifi guest_wifi = 11;</code>
       */
      public Builder setGuestWifi(com.hanschen.multidex.bean.TestBean7.GuestWifi value) {
        if (guestWifiBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          guestWifi_ = value;
          onChanged();
        } else {
          guestWifiBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.GuestWifi guest_wifi = 11;</code>
       */
      public Builder setGuestWifi(
              com.hanschen.multidex.bean.TestBean7.GuestWifi.Builder builderForValue) {
        if (guestWifiBuilder_ == null) {
          guestWifi_ = builderForValue.build();
          onChanged();
        } else {
          guestWifiBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.GuestWifi guest_wifi = 11;</code>
       */
      public Builder mergeGuestWifi(com.hanschen.multidex.bean.TestBean7.GuestWifi value) {
        if (guestWifiBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400) &&
                  guestWifi_ != null &&
                  guestWifi_ != com.hanschen.multidex.bean.TestBean7.GuestWifi.getDefaultInstance()) {
            guestWifi_ =
                    com.hanschen.multidex.bean.TestBean7.GuestWifi.newBuilder(guestWifi_).mergeFrom(value).buildPartial();
          } else {
            guestWifi_ = value;
          }
          onChanged();
        } else {
          guestWifiBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.GuestWifi guest_wifi = 11;</code>
       */
      public Builder clearGuestWifi() {
        if (guestWifiBuilder_ == null) {
          guestWifi_ = null;
          onChanged();
        } else {
          guestWifiBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.GuestWifi guest_wifi = 11;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.GuestWifi.Builder getGuestWifiBuilder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getGuestWifiFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.GuestWifi guest_wifi = 11;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.GuestWifiOrBuilder getGuestWifiOrBuilder() {
        if (guestWifiBuilder_ != null) {
          return guestWifiBuilder_.getMessageOrBuilder();
        } else {
          return guestWifi_ == null ?
                  com.hanschen.multidex.bean.TestBean7.GuestWifi.getDefaultInstance() : guestWifi_;
        }
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.GuestWifi guest_wifi = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.GuestWifi, com.hanschen.multidex.bean.TestBean7.GuestWifi.Builder, com.hanschen.multidex.bean.TestBean7.GuestWifiOrBuilder>
      getGuestWifiFieldBuilder() {
        if (guestWifiBuilder_ == null) {
          guestWifiBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.hanschen.multidex.bean.TestBean7.GuestWifi, com.hanschen.multidex.bean.TestBean7.GuestWifi.Builder, com.hanschen.multidex.bean.TestBean7.GuestWifiOrBuilder>(
                  getGuestWifi(),
                  getParentForChildren(),
                  isClean());
          guestWifi_ = null;
        }
        return guestWifiBuilder_;
      }

      private com.hanschen.multidex.bean.TestBean7.SuperAdmin superAdmin_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.SuperAdmin, com.hanschen.multidex.bean.TestBean7.SuperAdmin.Builder, com.hanschen.multidex.bean.TestBean7.SuperAdminOrBuilder> superAdminBuilder_;
      /**
       * <code>optional .com.hanschen.multidex.bean.SuperAdmin super_admin = 12;</code>
       */
      public boolean hasSuperAdmin() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.SuperAdmin super_admin = 12;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.SuperAdmin getSuperAdmin() {
        if (superAdminBuilder_ == null) {
          return superAdmin_ == null ? com.hanschen.multidex.bean.TestBean7.SuperAdmin.getDefaultInstance() : superAdmin_;
        } else {
          return superAdminBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.SuperAdmin super_admin = 12;</code>
       */
      public Builder setSuperAdmin(com.hanschen.multidex.bean.TestBean7.SuperAdmin value) {
        if (superAdminBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          superAdmin_ = value;
          onChanged();
        } else {
          superAdminBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.SuperAdmin super_admin = 12;</code>
       */
      public Builder setSuperAdmin(
              com.hanschen.multidex.bean.TestBean7.SuperAdmin.Builder builderForValue) {
        if (superAdminBuilder_ == null) {
          superAdmin_ = builderForValue.build();
          onChanged();
        } else {
          superAdminBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.SuperAdmin super_admin = 12;</code>
       */
      public Builder mergeSuperAdmin(com.hanschen.multidex.bean.TestBean7.SuperAdmin value) {
        if (superAdminBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800) &&
                  superAdmin_ != null &&
                  superAdmin_ != com.hanschen.multidex.bean.TestBean7.SuperAdmin.getDefaultInstance()) {
            superAdmin_ =
                    com.hanschen.multidex.bean.TestBean7.SuperAdmin.newBuilder(superAdmin_).mergeFrom(value).buildPartial();
          } else {
            superAdmin_ = value;
          }
          onChanged();
        } else {
          superAdminBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.SuperAdmin super_admin = 12;</code>
       */
      public Builder clearSuperAdmin() {
        if (superAdminBuilder_ == null) {
          superAdmin_ = null;
          onChanged();
        } else {
          superAdminBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.SuperAdmin super_admin = 12;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.SuperAdmin.Builder getSuperAdminBuilder() {
        bitField0_ |= 0x00000800;
        onChanged();
        return getSuperAdminFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.SuperAdmin super_admin = 12;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.SuperAdminOrBuilder getSuperAdminOrBuilder() {
        if (superAdminBuilder_ != null) {
          return superAdminBuilder_.getMessageOrBuilder();
        } else {
          return superAdmin_ == null ?
                  com.hanschen.multidex.bean.TestBean7.SuperAdmin.getDefaultInstance() : superAdmin_;
        }
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.SuperAdmin super_admin = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.SuperAdmin, com.hanschen.multidex.bean.TestBean7.SuperAdmin.Builder, com.hanschen.multidex.bean.TestBean7.SuperAdminOrBuilder>
      getSuperAdminFieldBuilder() {
        if (superAdminBuilder_ == null) {
          superAdminBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.hanschen.multidex.bean.TestBean7.SuperAdmin, com.hanschen.multidex.bean.TestBean7.SuperAdmin.Builder, com.hanschen.multidex.bean.TestBean7.SuperAdminOrBuilder>(
                  getSuperAdmin(),
                  getParentForChildren(),
                  isClean());
          superAdmin_ = null;
        }
        return superAdminBuilder_;
      }

      private int smartBandwidth_ = 0;
      /**
       * <code>optional .com.hanschen.multidex.bean.SmartBandwidth smart_bandwidth = 13;</code>
       */
      public boolean hasSmartBandwidth() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.SmartBandwidth smart_bandwidth = 13;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.SmartBandwidth getSmartBandwidth() {
        com.hanschen.multidex.bean.TestBean7.SmartBandwidth result = com.hanschen.multidex.bean.TestBean7.SmartBandwidth.valueOf(smartBandwidth_);
        return result == null ? com.hanschen.multidex.bean.TestBean7.SmartBandwidth.EQUALITY : result;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.SmartBandwidth smart_bandwidth = 13;</code>
       */
      public Builder setSmartBandwidth(com.hanschen.multidex.bean.TestBean7.SmartBandwidth value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00001000;
        smartBandwidth_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.SmartBandwidth smart_bandwidth = 13;</code>
       */
      public Builder clearSmartBandwidth() {
        bitField0_ = (bitField0_ & ~0x00001000);
        smartBandwidth_ = 0;
        onChanged();
        return this;
      }

      private com.hanschen.multidex.bean.TestBean7.HardDiskInfo hardDiskInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.HardDiskInfo, com.hanschen.multidex.bean.TestBean7.HardDiskInfo.Builder, com.hanschen.multidex.bean.TestBean7.HardDiskInfoOrBuilder> hardDiskInfoBuilder_;
      /**
       * <code>optional .com.hanschen.multidex.bean.HardDiskInfo hard_disk_info = 14;</code>
       */
      public boolean hasHardDiskInfo() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.HardDiskInfo hard_disk_info = 14;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.HardDiskInfo getHardDiskInfo() {
        if (hardDiskInfoBuilder_ == null) {
          return hardDiskInfo_ == null ? com.hanschen.multidex.bean.TestBean7.HardDiskInfo.getDefaultInstance() : hardDiskInfo_;
        } else {
          return hardDiskInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.HardDiskInfo hard_disk_info = 14;</code>
       */
      public Builder setHardDiskInfo(com.hanschen.multidex.bean.TestBean7.HardDiskInfo value) {
        if (hardDiskInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          hardDiskInfo_ = value;
          onChanged();
        } else {
          hardDiskInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.HardDiskInfo hard_disk_info = 14;</code>
       */
      public Builder setHardDiskInfo(
              com.hanschen.multidex.bean.TestBean7.HardDiskInfo.Builder builderForValue) {
        if (hardDiskInfoBuilder_ == null) {
          hardDiskInfo_ = builderForValue.build();
          onChanged();
        } else {
          hardDiskInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.HardDiskInfo hard_disk_info = 14;</code>
       */
      public Builder mergeHardDiskInfo(com.hanschen.multidex.bean.TestBean7.HardDiskInfo value) {
        if (hardDiskInfoBuilder_ == null) {
          if (((bitField0_ & 0x00002000) == 0x00002000) &&
                  hardDiskInfo_ != null &&
                  hardDiskInfo_ != com.hanschen.multidex.bean.TestBean7.HardDiskInfo.getDefaultInstance()) {
            hardDiskInfo_ =
                    com.hanschen.multidex.bean.TestBean7.HardDiskInfo.newBuilder(hardDiskInfo_).mergeFrom(value).buildPartial();
          } else {
            hardDiskInfo_ = value;
          }
          onChanged();
        } else {
          hardDiskInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.HardDiskInfo hard_disk_info = 14;</code>
       */
      public Builder clearHardDiskInfo() {
        if (hardDiskInfoBuilder_ == null) {
          hardDiskInfo_ = null;
          onChanged();
        } else {
          hardDiskInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.HardDiskInfo hard_disk_info = 14;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.HardDiskInfo.Builder getHardDiskInfoBuilder() {
        bitField0_ |= 0x00002000;
        onChanged();
        return getHardDiskInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.HardDiskInfo hard_disk_info = 14;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.HardDiskInfoOrBuilder getHardDiskInfoOrBuilder() {
        if (hardDiskInfoBuilder_ != null) {
          return hardDiskInfoBuilder_.getMessageOrBuilder();
        } else {
          return hardDiskInfo_ == null ?
                  com.hanschen.multidex.bean.TestBean7.HardDiskInfo.getDefaultInstance() : hardDiskInfo_;
        }
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.HardDiskInfo hard_disk_info = 14;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.HardDiskInfo, com.hanschen.multidex.bean.TestBean7.HardDiskInfo.Builder, com.hanschen.multidex.bean.TestBean7.HardDiskInfoOrBuilder>
      getHardDiskInfoFieldBuilder() {
        if (hardDiskInfoBuilder_ == null) {
          hardDiskInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.hanschen.multidex.bean.TestBean7.HardDiskInfo, com.hanschen.multidex.bean.TestBean7.HardDiskInfo.Builder, com.hanschen.multidex.bean.TestBean7.HardDiskInfoOrBuilder>(
                  getHardDiskInfo(),
                  getParentForChildren(),
                  isClean());
          hardDiskInfo_ = null;
        }
        return hardDiskInfoBuilder_;
      }

      private com.hanschen.multidex.bean.TestBean7.WanSetting wanSetting_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.WanSetting, com.hanschen.multidex.bean.TestBean7.WanSetting.Builder, com.hanschen.multidex.bean.TestBean7.WanSettingOrBuilder> wanSettingBuilder_;
      /**
       * <code>optional .com.hanschen.multidex.bean.WanSetting wan_setting = 15;</code>
       */
      public boolean hasWanSetting() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.WanSetting wan_setting = 15;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.WanSetting getWanSetting() {
        if (wanSettingBuilder_ == null) {
          return wanSetting_ == null ? com.hanschen.multidex.bean.TestBean7.WanSetting.getDefaultInstance() : wanSetting_;
        } else {
          return wanSettingBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.WanSetting wan_setting = 15;</code>
       */
      public Builder setWanSetting(com.hanschen.multidex.bean.TestBean7.WanSetting value) {
        if (wanSettingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          wanSetting_ = value;
          onChanged();
        } else {
          wanSettingBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.WanSetting wan_setting = 15;</code>
       */
      public Builder setWanSetting(
              com.hanschen.multidex.bean.TestBean7.WanSetting.Builder builderForValue) {
        if (wanSettingBuilder_ == null) {
          wanSetting_ = builderForValue.build();
          onChanged();
        } else {
          wanSettingBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.WanSetting wan_setting = 15;</code>
       */
      public Builder mergeWanSetting(com.hanschen.multidex.bean.TestBean7.WanSetting value) {
        if (wanSettingBuilder_ == null) {
          if (((bitField0_ & 0x00004000) == 0x00004000) &&
                  wanSetting_ != null &&
                  wanSetting_ != com.hanschen.multidex.bean.TestBean7.WanSetting.getDefaultInstance()) {
            wanSetting_ =
                    com.hanschen.multidex.bean.TestBean7.WanSetting.newBuilder(wanSetting_).mergeFrom(value).buildPartial();
          } else {
            wanSetting_ = value;
          }
          onChanged();
        } else {
          wanSettingBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.WanSetting wan_setting = 15;</code>
       */
      public Builder clearWanSetting() {
        if (wanSettingBuilder_ == null) {
          wanSetting_ = null;
          onChanged();
        } else {
          wanSettingBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.WanSetting wan_setting = 15;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.WanSetting.Builder getWanSettingBuilder() {
        bitField0_ |= 0x00004000;
        onChanged();
        return getWanSettingFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.WanSetting wan_setting = 15;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.WanSettingOrBuilder getWanSettingOrBuilder() {
        if (wanSettingBuilder_ != null) {
          return wanSettingBuilder_.getMessageOrBuilder();
        } else {
          return wanSetting_ == null ?
                  com.hanschen.multidex.bean.TestBean7.WanSetting.getDefaultInstance() : wanSetting_;
        }
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.WanSetting wan_setting = 15;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.WanSetting, com.hanschen.multidex.bean.TestBean7.WanSetting.Builder, com.hanschen.multidex.bean.TestBean7.WanSettingOrBuilder>
      getWanSettingFieldBuilder() {
        if (wanSettingBuilder_ == null) {
          wanSettingBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.hanschen.multidex.bean.TestBean7.WanSetting, com.hanschen.multidex.bean.TestBean7.WanSetting.Builder, com.hanschen.multidex.bean.TestBean7.WanSettingOrBuilder>(
                  getWanSetting(),
                  getParentForChildren(),
                  isClean());
          wanSetting_ = null;
        }
        return wanSettingBuilder_;
      }

      private com.hanschen.multidex.bean.TestBean7.WifiSetting wifiSetting_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.WifiSetting, com.hanschen.multidex.bean.TestBean7.WifiSetting.Builder, com.hanschen.multidex.bean.TestBean7.WifiSettingOrBuilder> wifiSettingBuilder_;
      /**
       * <code>optional .com.hanschen.multidex.bean.WifiSetting wifi_setting = 16;</code>
       */
      public boolean hasWifiSetting() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.WifiSetting wifi_setting = 16;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.WifiSetting getWifiSetting() {
        if (wifiSettingBuilder_ == null) {
          return wifiSetting_ == null ? com.hanschen.multidex.bean.TestBean7.WifiSetting.getDefaultInstance() : wifiSetting_;
        } else {
          return wifiSettingBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.WifiSetting wifi_setting = 16;</code>
       */
      public Builder setWifiSetting(com.hanschen.multidex.bean.TestBean7.WifiSetting value) {
        if (wifiSettingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          wifiSetting_ = value;
          onChanged();
        } else {
          wifiSettingBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.WifiSetting wifi_setting = 16;</code>
       */
      public Builder setWifiSetting(
              com.hanschen.multidex.bean.TestBean7.WifiSetting.Builder builderForValue) {
        if (wifiSettingBuilder_ == null) {
          wifiSetting_ = builderForValue.build();
          onChanged();
        } else {
          wifiSettingBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.WifiSetting wifi_setting = 16;</code>
       */
      public Builder mergeWifiSetting(com.hanschen.multidex.bean.TestBean7.WifiSetting value) {
        if (wifiSettingBuilder_ == null) {
          if (((bitField0_ & 0x00008000) == 0x00008000) &&
                  wifiSetting_ != null &&
                  wifiSetting_ != com.hanschen.multidex.bean.TestBean7.WifiSetting.getDefaultInstance()) {
            wifiSetting_ =
                    com.hanschen.multidex.bean.TestBean7.WifiSetting.newBuilder(wifiSetting_).mergeFrom(value).buildPartial();
          } else {
            wifiSetting_ = value;
          }
          onChanged();
        } else {
          wifiSettingBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.WifiSetting wifi_setting = 16;</code>
       */
      public Builder clearWifiSetting() {
        if (wifiSettingBuilder_ == null) {
          wifiSetting_ = null;
          onChanged();
        } else {
          wifiSettingBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.WifiSetting wifi_setting = 16;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.WifiSetting.Builder getWifiSettingBuilder() {
        bitField0_ |= 0x00008000;
        onChanged();
        return getWifiSettingFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.WifiSetting wifi_setting = 16;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.WifiSettingOrBuilder getWifiSettingOrBuilder() {
        if (wifiSettingBuilder_ != null) {
          return wifiSettingBuilder_.getMessageOrBuilder();
        } else {
          return wifiSetting_ == null ?
                  com.hanschen.multidex.bean.TestBean7.WifiSetting.getDefaultInstance() : wifiSetting_;
        }
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.WifiSetting wifi_setting = 16;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.WifiSetting, com.hanschen.multidex.bean.TestBean7.WifiSetting.Builder, com.hanschen.multidex.bean.TestBean7.WifiSettingOrBuilder>
      getWifiSettingFieldBuilder() {
        if (wifiSettingBuilder_ == null) {
          wifiSettingBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.hanschen.multidex.bean.TestBean7.WifiSetting, com.hanschen.multidex.bean.TestBean7.WifiSetting.Builder, com.hanschen.multidex.bean.TestBean7.WifiSettingOrBuilder>(
                  getWifiSetting(),
                  getParentForChildren(),
                  isClean());
          wifiSetting_ = null;
        }
        return wifiSettingBuilder_;
      }

      private int powerStatus_ = 0;
      /**
       * <code>optional .com.hanschen.multidex.bean.PowerStatus power_status = 17;</code>
       */
      public boolean hasPowerStatus() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.PowerStatus power_status = 17;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.PowerStatus getPowerStatus() {
        com.hanschen.multidex.bean.TestBean7.PowerStatus result = com.hanschen.multidex.bean.TestBean7.PowerStatus.valueOf(powerStatus_);
        return result == null ? com.hanschen.multidex.bean.TestBean7.PowerStatus.POWER_OFF : result;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.PowerStatus power_status = 17;</code>
       */
      public Builder setPowerStatus(com.hanschen.multidex.bean.TestBean7.PowerStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00010000;
        powerStatus_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.PowerStatus power_status = 17;</code>
       */
      public Builder clearPowerStatus() {
        bitField0_ = (bitField0_ & ~0x00010000);
        powerStatus_ = 0;
        onChanged();
        return this;
      }

      private com.hanschen.multidex.bean.TestBean7.RouterInfo routerInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.RouterInfo, com.hanschen.multidex.bean.TestBean7.RouterInfo.Builder, com.hanschen.multidex.bean.TestBean7.RouterInfoOrBuilder> routerInfoBuilder_;
      /**
       * <code>optional .com.hanschen.multidex.bean.RouterInfo router_info = 18;</code>
       */
      public boolean hasRouterInfo() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.RouterInfo router_info = 18;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.RouterInfo getRouterInfo() {
        if (routerInfoBuilder_ == null) {
          return routerInfo_ == null ? com.hanschen.multidex.bean.TestBean7.RouterInfo.getDefaultInstance() : routerInfo_;
        } else {
          return routerInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.RouterInfo router_info = 18;</code>
       */
      public Builder setRouterInfo(com.hanschen.multidex.bean.TestBean7.RouterInfo value) {
        if (routerInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          routerInfo_ = value;
          onChanged();
        } else {
          routerInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.RouterInfo router_info = 18;</code>
       */
      public Builder setRouterInfo(
              com.hanschen.multidex.bean.TestBean7.RouterInfo.Builder builderForValue) {
        if (routerInfoBuilder_ == null) {
          routerInfo_ = builderForValue.build();
          onChanged();
        } else {
          routerInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.RouterInfo router_info = 18;</code>
       */
      public Builder mergeRouterInfo(com.hanschen.multidex.bean.TestBean7.RouterInfo value) {
        if (routerInfoBuilder_ == null) {
          if (((bitField0_ & 0x00020000) == 0x00020000) &&
                  routerInfo_ != null &&
                  routerInfo_ != com.hanschen.multidex.bean.TestBean7.RouterInfo.getDefaultInstance()) {
            routerInfo_ =
                    com.hanschen.multidex.bean.TestBean7.RouterInfo.newBuilder(routerInfo_).mergeFrom(value).buildPartial();
          } else {
            routerInfo_ = value;
          }
          onChanged();
        } else {
          routerInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.RouterInfo router_info = 18;</code>
       */
      public Builder clearRouterInfo() {
        if (routerInfoBuilder_ == null) {
          routerInfo_ = null;
          onChanged();
        } else {
          routerInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00020000);
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.RouterInfo router_info = 18;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.RouterInfo.Builder getRouterInfoBuilder() {
        bitField0_ |= 0x00020000;
        onChanged();
        return getRouterInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.RouterInfo router_info = 18;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.RouterInfoOrBuilder getRouterInfoOrBuilder() {
        if (routerInfoBuilder_ != null) {
          return routerInfoBuilder_.getMessageOrBuilder();
        } else {
          return routerInfo_ == null ?
                  com.hanschen.multidex.bean.TestBean7.RouterInfo.getDefaultInstance() : routerInfo_;
        }
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.RouterInfo router_info = 18;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.RouterInfo, com.hanschen.multidex.bean.TestBean7.RouterInfo.Builder, com.hanschen.multidex.bean.TestBean7.RouterInfoOrBuilder>
      getRouterInfoFieldBuilder() {
        if (routerInfoBuilder_ == null) {
          routerInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.hanschen.multidex.bean.TestBean7.RouterInfo, com.hanschen.multidex.bean.TestBean7.RouterInfo.Builder, com.hanschen.multidex.bean.TestBean7.RouterInfoOrBuilder>(
                  getRouterInfo(),
                  getParentForChildren(),
                  isClean());
          routerInfo_ = null;
        }
        return routerInfoBuilder_;
      }

      private java.lang.Object sambaPassword_ = "";
      /**
       * <code>optional string samba_password = 19;</code>
       */
      public boolean hasSambaPassword() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional string samba_password = 19;</code>
       */
      public java.lang.String getSambaPassword() {
        java.lang.Object ref = sambaPassword_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            sambaPassword_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string samba_password = 19;</code>
       */
      public com.google.protobuf.ByteString
      getSambaPasswordBytes() {
        java.lang.Object ref = sambaPassword_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          sambaPassword_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string samba_password = 19;</code>
       */
      public Builder setSambaPassword(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00040000;
        sambaPassword_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string samba_password = 19;</code>
       */
      public Builder clearSambaPassword() {
        bitField0_ = (bitField0_ & ~0x00040000);
        sambaPassword_ = getDefaultInstance().getSambaPassword();
        onChanged();
        return this;
      }
      /**
       * <code>optional string samba_password = 19;</code>
       */
      public Builder setSambaPasswordBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00040000;
        sambaPassword_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object uuid_ = "";
      /**
       * <code>optional string uuid = 20;</code>
       */
      public boolean hasUuid() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional string uuid = 20;</code>
       */
      public java.lang.String getUuid() {
        java.lang.Object ref = uuid_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            uuid_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string uuid = 20;</code>
       */
      public com.google.protobuf.ByteString
      getUuidBytes() {
        java.lang.Object ref = uuid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          uuid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string uuid = 20;</code>
       */
      public Builder setUuid(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00080000;
        uuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string uuid = 20;</code>
       */
      public Builder clearUuid() {
        bitField0_ = (bitField0_ & ~0x00080000);
        uuid_ = getDefaultInstance().getUuid();
        onChanged();
        return this;
      }
      /**
       * <code>optional string uuid = 20;</code>
       */
      public Builder setUuidBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00080000;
        uuid_ = value;
        onChanged();
        return this;
      }

      private int homeShareMode_ = 0;
      /**
       * <code>optional .com.hanschen.multidex.bean.HomeShareMode home_share_mode = 21;</code>
       */
      public boolean hasHomeShareMode() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.HomeShareMode home_share_mode = 21;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.HomeShareMode getHomeShareMode() {
        com.hanschen.multidex.bean.TestBean7.HomeShareMode result = com.hanschen.multidex.bean.TestBean7.HomeShareMode.valueOf(homeShareMode_);
        return result == null ? com.hanschen.multidex.bean.TestBean7.HomeShareMode.MANUAL : result;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.HomeShareMode home_share_mode = 21;</code>
       */
      public Builder setHomeShareMode(com.hanschen.multidex.bean.TestBean7.HomeShareMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00100000;
        homeShareMode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.HomeShareMode home_share_mode = 21;</code>
       */
      public Builder clearHomeShareMode() {
        bitField0_ = (bitField0_ & ~0x00100000);
        homeShareMode_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.hanschen.multidex.bean.Ack)
    }

    // @@protoc_insertion_point(class_scope:com.hanschen.multidex.bean.Ack)
    private static final com.hanschen.multidex.bean.TestBean7.Ack DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.hanschen.multidex.bean.TestBean7.Ack();
    }

    public static com.hanschen.multidex.bean.TestBean7.Ack getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Ack>
            PARSER = new com.google.protobuf.AbstractParser<Ack>() {
      public Ack parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return new Ack(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Ack> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Ack> getParserForType() {
      return PARSER;
    }

    public com.hanschen.multidex.bean.TestBean7.Ack getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NotificationOrBuilder extends
          // @@protoc_insertion_point(interface_extends:com.hanschen.multidex.bean.Notification)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 hard_disk_format_progress = 1;</code>
     */
    boolean hasHardDiskFormatProgress();
    /**
     * <code>optional int32 hard_disk_format_progress = 1;</code>
     */
    int getHardDiskFormatProgress();

    /**
     * <code>optional .com.hanschen.multidex.bean.PowerStatus power_status = 2;</code>
     */
    boolean hasPowerStatus();
    /**
     * <code>optional .com.hanschen.multidex.bean.PowerStatus power_status = 2;</code>
     */
    com.hanschen.multidex.bean.TestBean7.PowerStatus getPowerStatus();
  }
  /**
   * Protobuf type {@code com.hanschen.multidex.bean.Notification}
   */
  public  static final class Notification extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:com.hanschen.multidex.bean.Notification)
          NotificationOrBuilder {
    // Use Notification.newBuilder() to construct.
    private Notification(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Notification() {
      hardDiskFormatProgress_ = 0;
      powerStatus_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Notification(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                      extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              hardDiskFormatProgress_ = input.readInt32();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.hanschen.multidex.bean.TestBean7.PowerStatus value = com.hanschen.multidex.bean.TestBean7.PowerStatus.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                powerStatus_ = rawValue;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_Notification_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_Notification_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      com.hanschen.multidex.bean.TestBean7.Notification.class, com.hanschen.multidex.bean.TestBean7.Notification.Builder.class);
    }

    private int bitField0_;
    public static final int HARD_DISK_FORMAT_PROGRESS_FIELD_NUMBER = 1;
    private int hardDiskFormatProgress_;
    /**
     * <code>optional int32 hard_disk_format_progress = 1;</code>
     */
    public boolean hasHardDiskFormatProgress() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 hard_disk_format_progress = 1;</code>
     */
    public int getHardDiskFormatProgress() {
      return hardDiskFormatProgress_;
    }

    public static final int POWER_STATUS_FIELD_NUMBER = 2;
    private int powerStatus_;
    /**
     * <code>optional .com.hanschen.multidex.bean.PowerStatus power_status = 2;</code>
     */
    public boolean hasPowerStatus() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .com.hanschen.multidex.bean.PowerStatus power_status = 2;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.PowerStatus getPowerStatus() {
      com.hanschen.multidex.bean.TestBean7.PowerStatus result = com.hanschen.multidex.bean.TestBean7.PowerStatus.valueOf(powerStatus_);
      return result == null ? com.hanschen.multidex.bean.TestBean7.PowerStatus.POWER_OFF : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, hardDiskFormatProgress_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, powerStatus_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(1, hardDiskFormatProgress_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
                .computeEnumSize(2, powerStatus_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.hanschen.multidex.bean.TestBean7.Notification)) {
        return super.equals(obj);
      }
      com.hanschen.multidex.bean.TestBean7.Notification other = (com.hanschen.multidex.bean.TestBean7.Notification) obj;

      boolean result = true;
      result = result && (hasHardDiskFormatProgress() == other.hasHardDiskFormatProgress());
      if (hasHardDiskFormatProgress()) {
        result = result && (getHardDiskFormatProgress()
                == other.getHardDiskFormatProgress());
      }
      result = result && (hasPowerStatus() == other.hasPowerStatus());
      if (hasPowerStatus()) {
        result = result && powerStatus_ == other.powerStatus_;
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasHardDiskFormatProgress()) {
        hash = (37 * hash) + HARD_DISK_FORMAT_PROGRESS_FIELD_NUMBER;
        hash = (53 * hash) + getHardDiskFormatProgress();
      }
      if (hasPowerStatus()) {
        hash = (37 * hash) + POWER_STATUS_FIELD_NUMBER;
        hash = (53 * hash) + powerStatus_;
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.hanschen.multidex.bean.TestBean7.Notification parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hanschen.multidex.bean.TestBean7.Notification parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.Notification parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hanschen.multidex.bean.TestBean7.Notification parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.Notification parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.Notification parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.Notification parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.Notification parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.Notification parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.Notification parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.hanschen.multidex.bean.TestBean7.Notification prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.hanschen.multidex.bean.Notification}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:com.hanschen.multidex.bean.Notification)
            com.hanschen.multidex.bean.TestBean7.NotificationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_Notification_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_Notification_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        com.hanschen.multidex.bean.TestBean7.Notification.class, com.hanschen.multidex.bean.TestBean7.Notification.Builder.class);
      }

      // Construct using com.hanschen.multidex.bean.TestBean7.Notification.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        hardDiskFormatProgress_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        powerStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_Notification_descriptor;
      }

      public com.hanschen.multidex.bean.TestBean7.Notification getDefaultInstanceForType() {
        return com.hanschen.multidex.bean.TestBean7.Notification.getDefaultInstance();
      }

      public com.hanschen.multidex.bean.TestBean7.Notification build() {
        com.hanschen.multidex.bean.TestBean7.Notification result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hanschen.multidex.bean.TestBean7.Notification buildPartial() {
        com.hanschen.multidex.bean.TestBean7.Notification result = new com.hanschen.multidex.bean.TestBean7.Notification(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.hardDiskFormatProgress_ = hardDiskFormatProgress_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.powerStatus_ = powerStatus_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hanschen.multidex.bean.TestBean7.Notification) {
          return mergeFrom((com.hanschen.multidex.bean.TestBean7.Notification)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hanschen.multidex.bean.TestBean7.Notification other) {
        if (other == com.hanschen.multidex.bean.TestBean7.Notification.getDefaultInstance()) return this;
        if (other.hasHardDiskFormatProgress()) {
          setHardDiskFormatProgress(other.getHardDiskFormatProgress());
        }
        if (other.hasPowerStatus()) {
          setPowerStatus(other.getPowerStatus());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        com.hanschen.multidex.bean.TestBean7.Notification parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hanschen.multidex.bean.TestBean7.Notification) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int hardDiskFormatProgress_ ;
      /**
       * <code>optional int32 hard_disk_format_progress = 1;</code>
       */
      public boolean hasHardDiskFormatProgress() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 hard_disk_format_progress = 1;</code>
       */
      public int getHardDiskFormatProgress() {
        return hardDiskFormatProgress_;
      }
      /**
       * <code>optional int32 hard_disk_format_progress = 1;</code>
       */
      public Builder setHardDiskFormatProgress(int value) {
        bitField0_ |= 0x00000001;
        hardDiskFormatProgress_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 hard_disk_format_progress = 1;</code>
       */
      public Builder clearHardDiskFormatProgress() {
        bitField0_ = (bitField0_ & ~0x00000001);
        hardDiskFormatProgress_ = 0;
        onChanged();
        return this;
      }

      private int powerStatus_ = 0;
      /**
       * <code>optional .com.hanschen.multidex.bean.PowerStatus power_status = 2;</code>
       */
      public boolean hasPowerStatus() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.PowerStatus power_status = 2;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.PowerStatus getPowerStatus() {
        com.hanschen.multidex.bean.TestBean7.PowerStatus result = com.hanschen.multidex.bean.TestBean7.PowerStatus.valueOf(powerStatus_);
        return result == null ? com.hanschen.multidex.bean.TestBean7.PowerStatus.POWER_OFF : result;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.PowerStatus power_status = 2;</code>
       */
      public Builder setPowerStatus(com.hanschen.multidex.bean.TestBean7.PowerStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        powerStatus_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.PowerStatus power_status = 2;</code>
       */
      public Builder clearPowerStatus() {
        bitField0_ = (bitField0_ & ~0x00000002);
        powerStatus_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.hanschen.multidex.bean.Notification)
    }

    // @@protoc_insertion_point(class_scope:com.hanschen.multidex.bean.Notification)
    private static final com.hanschen.multidex.bean.TestBean7.Notification DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.hanschen.multidex.bean.TestBean7.Notification();
    }

    public static com.hanschen.multidex.bean.TestBean7.Notification getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Notification>
            PARSER = new com.google.protobuf.AbstractParser<Notification>() {
      public Notification parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return new Notification(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Notification> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Notification> getParserForType() {
      return PARSER;
    }

    public com.hanschen.multidex.bean.TestBean7.Notification getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RequestStateOrBuilder extends
          // @@protoc_insertion_point(interface_extends:com.hanschen.multidex.bean.RequestState)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required bool success = 1;</code>
     */
    boolean hasSuccess();
    /**
     * <code>required bool success = 1;</code>
     */
    boolean getSuccess();

    /**
     * <code>optional int32 err_code = 2;</code>
     */
    boolean hasErrCode();
    /**
     * <code>optional int32 err_code = 2;</code>
     */
    int getErrCode();
  }
  /**
   * Protobuf type {@code com.hanschen.multidex.bean.RequestState}
   */
  public  static final class RequestState extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:com.hanschen.multidex.bean.RequestState)
          RequestStateOrBuilder {
    // Use RequestState.newBuilder() to construct.
    private RequestState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RequestState() {
      success_ = false;
      errCode_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RequestState(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                      extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              success_ = input.readBool();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              errCode_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_RequestState_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_RequestState_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      com.hanschen.multidex.bean.TestBean7.RequestState.class, com.hanschen.multidex.bean.TestBean7.RequestState.Builder.class);
    }

    private int bitField0_;
    public static final int SUCCESS_FIELD_NUMBER = 1;
    private boolean success_;
    /**
     * <code>required bool success = 1;</code>
     */
    public boolean hasSuccess() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bool success = 1;</code>
     */
    public boolean getSuccess() {
      return success_;
    }

    public static final int ERR_CODE_FIELD_NUMBER = 2;
    private int errCode_;
    /**
     * <code>optional int32 err_code = 2;</code>
     */
    public boolean hasErrCode() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 err_code = 2;</code>
     */
    public int getErrCode() {
      return errCode_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSuccess()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, success_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, errCode_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
                .computeBoolSize(1, success_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(2, errCode_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.hanschen.multidex.bean.TestBean7.RequestState)) {
        return super.equals(obj);
      }
      com.hanschen.multidex.bean.TestBean7.RequestState other = (com.hanschen.multidex.bean.TestBean7.RequestState) obj;

      boolean result = true;
      result = result && (hasSuccess() == other.hasSuccess());
      if (hasSuccess()) {
        result = result && (getSuccess()
                == other.getSuccess());
      }
      result = result && (hasErrCode() == other.hasErrCode());
      if (hasErrCode()) {
        result = result && (getErrCode()
                == other.getErrCode());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasSuccess()) {
        hash = (37 * hash) + SUCCESS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getSuccess());
      }
      if (hasErrCode()) {
        hash = (37 * hash) + ERR_CODE_FIELD_NUMBER;
        hash = (53 * hash) + getErrCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.hanschen.multidex.bean.TestBean7.RequestState parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hanschen.multidex.bean.TestBean7.RequestState parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.RequestState parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hanschen.multidex.bean.TestBean7.RequestState parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.RequestState parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.RequestState parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.RequestState parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.RequestState parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.RequestState parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.RequestState parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.hanschen.multidex.bean.TestBean7.RequestState prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.hanschen.multidex.bean.RequestState}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:com.hanschen.multidex.bean.RequestState)
            com.hanschen.multidex.bean.TestBean7.RequestStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_RequestState_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_RequestState_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        com.hanschen.multidex.bean.TestBean7.RequestState.class, com.hanschen.multidex.bean.TestBean7.RequestState.Builder.class);
      }

      // Construct using com.hanschen.multidex.bean.TestBean7.RequestState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        success_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        errCode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_RequestState_descriptor;
      }

      public com.hanschen.multidex.bean.TestBean7.RequestState getDefaultInstanceForType() {
        return com.hanschen.multidex.bean.TestBean7.RequestState.getDefaultInstance();
      }

      public com.hanschen.multidex.bean.TestBean7.RequestState build() {
        com.hanschen.multidex.bean.TestBean7.RequestState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hanschen.multidex.bean.TestBean7.RequestState buildPartial() {
        com.hanschen.multidex.bean.TestBean7.RequestState result = new com.hanschen.multidex.bean.TestBean7.RequestState(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.success_ = success_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.errCode_ = errCode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hanschen.multidex.bean.TestBean7.RequestState) {
          return mergeFrom((com.hanschen.multidex.bean.TestBean7.RequestState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hanschen.multidex.bean.TestBean7.RequestState other) {
        if (other == com.hanschen.multidex.bean.TestBean7.RequestState.getDefaultInstance()) return this;
        if (other.hasSuccess()) {
          setSuccess(other.getSuccess());
        }
        if (other.hasErrCode()) {
          setErrCode(other.getErrCode());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSuccess()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        com.hanschen.multidex.bean.TestBean7.RequestState parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hanschen.multidex.bean.TestBean7.RequestState) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private boolean success_ ;
      /**
       * <code>required bool success = 1;</code>
       */
      public boolean hasSuccess() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bool success = 1;</code>
       */
      public boolean getSuccess() {
        return success_;
      }
      /**
       * <code>required bool success = 1;</code>
       */
      public Builder setSuccess(boolean value) {
        bitField0_ |= 0x00000001;
        success_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool success = 1;</code>
       */
      public Builder clearSuccess() {
        bitField0_ = (bitField0_ & ~0x00000001);
        success_ = false;
        onChanged();
        return this;
      }

      private int errCode_ ;
      /**
       * <code>optional int32 err_code = 2;</code>
       */
      public boolean hasErrCode() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 err_code = 2;</code>
       */
      public int getErrCode() {
        return errCode_;
      }
      /**
       * <code>optional int32 err_code = 2;</code>
       */
      public Builder setErrCode(int value) {
        bitField0_ |= 0x00000002;
        errCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 err_code = 2;</code>
       */
      public Builder clearErrCode() {
        bitField0_ = (bitField0_ & ~0x00000002);
        errCode_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.hanschen.multidex.bean.RequestState)
    }

    // @@protoc_insertion_point(class_scope:com.hanschen.multidex.bean.RequestState)
    private static final com.hanschen.multidex.bean.TestBean7.RequestState DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.hanschen.multidex.bean.TestBean7.RequestState();
    }

    public static com.hanschen.multidex.bean.TestBean7.RequestState getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RequestState>
            PARSER = new com.google.protobuf.AbstractParser<RequestState>() {
      public RequestState parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return new RequestState(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RequestState> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RequestState> getParserForType() {
      return PARSER;
    }

    public com.hanschen.multidex.bean.TestBean7.RequestState getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CloudAccountOrBuilder extends
          // @@protoc_insertion_point(interface_extends:com.hanschen.multidex.bean.CloudAccount)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *云账号用户名
     * </pre>
     *
     * <code>required string user_name = 1;</code>
     */
    boolean hasUserName();
    /**
     * <pre>
     *云账号用户名
     * </pre>
     *
     * <code>required string user_name = 1;</code>
     */
    java.lang.String getUserName();
    /**
     * <pre>
     *云账号用户名
     * </pre>
     *
     * <code>required string user_name = 1;</code>
     */
    com.google.protobuf.ByteString
    getUserNameBytes();

    /**
     * <pre>
     *云账号密码(md5)
     * </pre>
     *
     * <code>optional string md5_password = 2;</code>
     */
    boolean hasMd5Password();
    /**
     * <pre>
     *云账号密码(md5)
     * </pre>
     *
     * <code>optional string md5_password = 2;</code>
     */
    java.lang.String getMd5Password();
    /**
     * <pre>
     *云账号密码(md5)
     * </pre>
     *
     * <code>optional string md5_password = 2;</code>
     */
    com.google.protobuf.ByteString
    getMd5PasswordBytes();
  }
  /**
   * Protobuf type {@code com.hanschen.multidex.bean.CloudAccount}
   */
  public  static final class CloudAccount extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:com.hanschen.multidex.bean.CloudAccount)
          CloudAccountOrBuilder {
    // Use CloudAccount.newBuilder() to construct.
    private CloudAccount(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CloudAccount() {
      userName_ = "";
      md5Password_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CloudAccount(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                      extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              userName_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              md5Password_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_CloudAccount_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_CloudAccount_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      com.hanschen.multidex.bean.TestBean7.CloudAccount.class, com.hanschen.multidex.bean.TestBean7.CloudAccount.Builder.class);
    }

    private int bitField0_;
    public static final int USER_NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object userName_;
    /**
     * <pre>
     *云账号用户名
     * </pre>
     *
     * <code>required string user_name = 1;</code>
     */
    public boolean hasUserName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *云账号用户名
     * </pre>
     *
     * <code>required string user_name = 1;</code>
     */
    public java.lang.String getUserName() {
      java.lang.Object ref = userName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          userName_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *云账号用户名
     * </pre>
     *
     * <code>required string user_name = 1;</code>
     */
    public com.google.protobuf.ByteString
    getUserNameBytes() {
      java.lang.Object ref = userName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        userName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MD5_PASSWORD_FIELD_NUMBER = 2;
    private volatile java.lang.Object md5Password_;
    /**
     * <pre>
     *云账号密码(md5)
     * </pre>
     *
     * <code>optional string md5_password = 2;</code>
     */
    public boolean hasMd5Password() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *云账号密码(md5)
     * </pre>
     *
     * <code>optional string md5_password = 2;</code>
     */
    public java.lang.String getMd5Password() {
      java.lang.Object ref = md5Password_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          md5Password_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *云账号密码(md5)
     * </pre>
     *
     * <code>optional string md5_password = 2;</code>
     */
    public com.google.protobuf.ByteString
    getMd5PasswordBytes() {
      java.lang.Object ref = md5Password_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        md5Password_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasUserName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, userName_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, md5Password_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, userName_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, md5Password_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.hanschen.multidex.bean.TestBean7.CloudAccount)) {
        return super.equals(obj);
      }
      com.hanschen.multidex.bean.TestBean7.CloudAccount other = (com.hanschen.multidex.bean.TestBean7.CloudAccount) obj;

      boolean result = true;
      result = result && (hasUserName() == other.hasUserName());
      if (hasUserName()) {
        result = result && getUserName()
                .equals(other.getUserName());
      }
      result = result && (hasMd5Password() == other.hasMd5Password());
      if (hasMd5Password()) {
        result = result && getMd5Password()
                .equals(other.getMd5Password());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasUserName()) {
        hash = (37 * hash) + USER_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getUserName().hashCode();
      }
      if (hasMd5Password()) {
        hash = (37 * hash) + MD5_PASSWORD_FIELD_NUMBER;
        hash = (53 * hash) + getMd5Password().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.hanschen.multidex.bean.TestBean7.CloudAccount parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hanschen.multidex.bean.TestBean7.CloudAccount parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.CloudAccount parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hanschen.multidex.bean.TestBean7.CloudAccount parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.CloudAccount parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.CloudAccount parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.CloudAccount parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.CloudAccount parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.CloudAccount parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.CloudAccount parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.hanschen.multidex.bean.TestBean7.CloudAccount prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.hanschen.multidex.bean.CloudAccount}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:com.hanschen.multidex.bean.CloudAccount)
            com.hanschen.multidex.bean.TestBean7.CloudAccountOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_CloudAccount_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_CloudAccount_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        com.hanschen.multidex.bean.TestBean7.CloudAccount.class, com.hanschen.multidex.bean.TestBean7.CloudAccount.Builder.class);
      }

      // Construct using com.hanschen.multidex.bean.TestBean7.CloudAccount.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        userName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        md5Password_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_CloudAccount_descriptor;
      }

      public com.hanschen.multidex.bean.TestBean7.CloudAccount getDefaultInstanceForType() {
        return com.hanschen.multidex.bean.TestBean7.CloudAccount.getDefaultInstance();
      }

      public com.hanschen.multidex.bean.TestBean7.CloudAccount build() {
        com.hanschen.multidex.bean.TestBean7.CloudAccount result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hanschen.multidex.bean.TestBean7.CloudAccount buildPartial() {
        com.hanschen.multidex.bean.TestBean7.CloudAccount result = new com.hanschen.multidex.bean.TestBean7.CloudAccount(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.userName_ = userName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.md5Password_ = md5Password_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hanschen.multidex.bean.TestBean7.CloudAccount) {
          return mergeFrom((com.hanschen.multidex.bean.TestBean7.CloudAccount)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hanschen.multidex.bean.TestBean7.CloudAccount other) {
        if (other == com.hanschen.multidex.bean.TestBean7.CloudAccount.getDefaultInstance()) return this;
        if (other.hasUserName()) {
          bitField0_ |= 0x00000001;
          userName_ = other.userName_;
          onChanged();
        }
        if (other.hasMd5Password()) {
          bitField0_ |= 0x00000002;
          md5Password_ = other.md5Password_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasUserName()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        com.hanschen.multidex.bean.TestBean7.CloudAccount parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hanschen.multidex.bean.TestBean7.CloudAccount) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object userName_ = "";
      /**
       * <pre>
       *云账号用户名
       * </pre>
       *
       * <code>required string user_name = 1;</code>
       */
      public boolean hasUserName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       *云账号用户名
       * </pre>
       *
       * <code>required string user_name = 1;</code>
       */
      public java.lang.String getUserName() {
        java.lang.Object ref = userName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            userName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *云账号用户名
       * </pre>
       *
       * <code>required string user_name = 1;</code>
       */
      public com.google.protobuf.ByteString
      getUserNameBytes() {
        java.lang.Object ref = userName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          userName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *云账号用户名
       * </pre>
       *
       * <code>required string user_name = 1;</code>
       */
      public Builder setUserName(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        userName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *云账号用户名
       * </pre>
       *
       * <code>required string user_name = 1;</code>
       */
      public Builder clearUserName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        userName_ = getDefaultInstance().getUserName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *云账号用户名
       * </pre>
       *
       * <code>required string user_name = 1;</code>
       */
      public Builder setUserNameBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        userName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object md5Password_ = "";
      /**
       * <pre>
       *云账号密码(md5)
       * </pre>
       *
       * <code>optional string md5_password = 2;</code>
       */
      public boolean hasMd5Password() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       *云账号密码(md5)
       * </pre>
       *
       * <code>optional string md5_password = 2;</code>
       */
      public java.lang.String getMd5Password() {
        java.lang.Object ref = md5Password_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            md5Password_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *云账号密码(md5)
       * </pre>
       *
       * <code>optional string md5_password = 2;</code>
       */
      public com.google.protobuf.ByteString
      getMd5PasswordBytes() {
        java.lang.Object ref = md5Password_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          md5Password_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *云账号密码(md5)
       * </pre>
       *
       * <code>optional string md5_password = 2;</code>
       */
      public Builder setMd5Password(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        md5Password_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *云账号密码(md5)
       * </pre>
       *
       * <code>optional string md5_password = 2;</code>
       */
      public Builder clearMd5Password() {
        bitField0_ = (bitField0_ & ~0x00000002);
        md5Password_ = getDefaultInstance().getMd5Password();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *云账号密码(md5)
       * </pre>
       *
       * <code>optional string md5_password = 2;</code>
       */
      public Builder setMd5PasswordBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        md5Password_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.hanschen.multidex.bean.CloudAccount)
    }

    // @@protoc_insertion_point(class_scope:com.hanschen.multidex.bean.CloudAccount)
    private static final com.hanschen.multidex.bean.TestBean7.CloudAccount DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.hanschen.multidex.bean.TestBean7.CloudAccount();
    }

    public static com.hanschen.multidex.bean.TestBean7.CloudAccount getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CloudAccount>
            PARSER = new com.google.protobuf.AbstractParser<CloudAccount>() {
      public CloudAccount parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return new CloudAccount(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CloudAccount> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CloudAccount> getParserForType() {
      return PARSER;
    }

    public com.hanschen.multidex.bean.TestBean7.CloudAccount getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HostOrBuilder extends
          // @@protoc_insertion_point(interface_extends:com.hanschen.multidex.bean.Host)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .com.hanschen.multidex.bean.OnlineState online = 1;</code>
     */
    boolean hasOnline();
    /**
     * <code>required .com.hanschen.multidex.bean.OnlineState online = 1;</code>
     */
    com.hanschen.multidex.bean.TestBean7.OnlineState getOnline();

    /**
     * <code>required .com.hanschen.multidex.bean.LinkType LinkType = 2;</code>
     */
    boolean hasLinkType();
    /**
     * <code>required .com.hanschen.multidex.bean.LinkType LinkType = 2;</code>
     */
    com.hanschen.multidex.bean.TestBean7.LinkType getLinkType();

    /**
     * <code>required string host_name = 3;</code>
     */
    boolean hasHostName();
    /**
     * <code>required string host_name = 3;</code>
     */
    java.lang.String getHostName();
    /**
     * <code>required string host_name = 3;</code>
     */
    com.google.protobuf.ByteString
    getHostNameBytes();

    /**
     * <code>required string ip = 4;</code>
     */
    boolean hasIp();
    /**
     * <code>required string ip = 4;</code>
     */
    java.lang.String getIp();
    /**
     * <code>required string ip = 4;</code>
     */
    com.google.protobuf.ByteString
    getIpBytes();

    /**
     * <code>required string mac = 5;</code>
     */
    boolean hasMac();
    /**
     * <code>required string mac = 5;</code>
     */
    java.lang.String getMac();
    /**
     * <code>required string mac = 5;</code>
     */
    com.google.protobuf.ByteString
    getMacBytes();

    /**
     * <code>required .com.hanschen.multidex.bean.DeviceType device_type = 6;</code>
     */
    boolean hasDeviceType();
    /**
     * <code>required .com.hanschen.multidex.bean.DeviceType device_type = 6;</code>
     */
    com.hanschen.multidex.bean.TestBean7.DeviceType getDeviceType();
  }
  /**
   * Protobuf type {@code com.hanschen.multidex.bean.Host}
   */
  public  static final class Host extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:com.hanschen.multidex.bean.Host)
          HostOrBuilder {
    // Use Host.newBuilder() to construct.
    private Host(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Host() {
      online_ = 0;
      linkType_ = 0;
      hostName_ = "";
      ip_ = "";
      mac_ = "";
      deviceType_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Host(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                      extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.hanschen.multidex.bean.TestBean7.OnlineState value = com.hanschen.multidex.bean.TestBean7.OnlineState.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                online_ = rawValue;
              }
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.hanschen.multidex.bean.TestBean7.LinkType value = com.hanschen.multidex.bean.TestBean7.LinkType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                linkType_ = rawValue;
              }
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              hostName_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              ip_ = bs;
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              mac_ = bs;
              break;
            }
            case 48: {
              int rawValue = input.readEnum();
              com.hanschen.multidex.bean.TestBean7.DeviceType value = com.hanschen.multidex.bean.TestBean7.DeviceType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(6, rawValue);
              } else {
                bitField0_ |= 0x00000020;
                deviceType_ = rawValue;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_Host_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_Host_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      com.hanschen.multidex.bean.TestBean7.Host.class, com.hanschen.multidex.bean.TestBean7.Host.Builder.class);
    }

    private int bitField0_;
    public static final int ONLINE_FIELD_NUMBER = 1;
    private int online_;
    /**
     * <code>required .com.hanschen.multidex.bean.OnlineState online = 1;</code>
     */
    public boolean hasOnline() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .com.hanschen.multidex.bean.OnlineState online = 1;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.OnlineState getOnline() {
      com.hanschen.multidex.bean.TestBean7.OnlineState result = com.hanschen.multidex.bean.TestBean7.OnlineState.valueOf(online_);
      return result == null ? com.hanschen.multidex.bean.TestBean7.OnlineState.ONLINE : result;
    }

    public static final int LINKTYPE_FIELD_NUMBER = 2;
    private int linkType_;
    /**
     * <code>required .com.hanschen.multidex.bean.LinkType LinkType = 2;</code>
     */
    public boolean hasLinkType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .com.hanschen.multidex.bean.LinkType LinkType = 2;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.LinkType getLinkType() {
      com.hanschen.multidex.bean.TestBean7.LinkType result = com.hanschen.multidex.bean.TestBean7.LinkType.valueOf(linkType_);
      return result == null ? com.hanschen.multidex.bean.TestBean7.LinkType.WIRE : result;
    }

    public static final int HOST_NAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object hostName_;
    /**
     * <code>required string host_name = 3;</code>
     */
    public boolean hasHostName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string host_name = 3;</code>
     */
    public java.lang.String getHostName() {
      java.lang.Object ref = hostName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          hostName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string host_name = 3;</code>
     */
    public com.google.protobuf.ByteString
    getHostNameBytes() {
      java.lang.Object ref = hostName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        hostName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int IP_FIELD_NUMBER = 4;
    private volatile java.lang.Object ip_;
    /**
     * <code>required string ip = 4;</code>
     */
    public boolean hasIp() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required string ip = 4;</code>
     */
    public java.lang.String getIp() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ip_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string ip = 4;</code>
     */
    public com.google.protobuf.ByteString
    getIpBytes() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        ip_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MAC_FIELD_NUMBER = 5;
    private volatile java.lang.Object mac_;
    /**
     * <code>required string mac = 5;</code>
     */
    public boolean hasMac() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required string mac = 5;</code>
     */
    public java.lang.String getMac() {
      java.lang.Object ref = mac_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          mac_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string mac = 5;</code>
     */
    public com.google.protobuf.ByteString
    getMacBytes() {
      java.lang.Object ref = mac_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        mac_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DEVICE_TYPE_FIELD_NUMBER = 6;
    private int deviceType_;
    /**
     * <code>required .com.hanschen.multidex.bean.DeviceType device_type = 6;</code>
     */
    public boolean hasDeviceType() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required .com.hanschen.multidex.bean.DeviceType device_type = 6;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.DeviceType getDeviceType() {
      com.hanschen.multidex.bean.TestBean7.DeviceType result = com.hanschen.multidex.bean.TestBean7.DeviceType.valueOf(deviceType_);
      return result == null ? com.hanschen.multidex.bean.TestBean7.DeviceType.PC : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasOnline()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLinkType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHostName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMac()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDeviceType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, online_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, linkType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, hostName_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, ip_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, mac_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeEnum(6, deviceType_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
                .computeEnumSize(1, online_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
                .computeEnumSize(2, linkType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, hostName_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, ip_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, mac_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
                .computeEnumSize(6, deviceType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.hanschen.multidex.bean.TestBean7.Host)) {
        return super.equals(obj);
      }
      com.hanschen.multidex.bean.TestBean7.Host other = (com.hanschen.multidex.bean.TestBean7.Host) obj;

      boolean result = true;
      result = result && (hasOnline() == other.hasOnline());
      if (hasOnline()) {
        result = result && online_ == other.online_;
      }
      result = result && (hasLinkType() == other.hasLinkType());
      if (hasLinkType()) {
        result = result && linkType_ == other.linkType_;
      }
      result = result && (hasHostName() == other.hasHostName());
      if (hasHostName()) {
        result = result && getHostName()
                .equals(other.getHostName());
      }
      result = result && (hasIp() == other.hasIp());
      if (hasIp()) {
        result = result && getIp()
                .equals(other.getIp());
      }
      result = result && (hasMac() == other.hasMac());
      if (hasMac()) {
        result = result && getMac()
                .equals(other.getMac());
      }
      result = result && (hasDeviceType() == other.hasDeviceType());
      if (hasDeviceType()) {
        result = result && deviceType_ == other.deviceType_;
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasOnline()) {
        hash = (37 * hash) + ONLINE_FIELD_NUMBER;
        hash = (53 * hash) + online_;
      }
      if (hasLinkType()) {
        hash = (37 * hash) + LINKTYPE_FIELD_NUMBER;
        hash = (53 * hash) + linkType_;
      }
      if (hasHostName()) {
        hash = (37 * hash) + HOST_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getHostName().hashCode();
      }
      if (hasIp()) {
        hash = (37 * hash) + IP_FIELD_NUMBER;
        hash = (53 * hash) + getIp().hashCode();
      }
      if (hasMac()) {
        hash = (37 * hash) + MAC_FIELD_NUMBER;
        hash = (53 * hash) + getMac().hashCode();
      }
      if (hasDeviceType()) {
        hash = (37 * hash) + DEVICE_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + deviceType_;
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.hanschen.multidex.bean.TestBean7.Host parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hanschen.multidex.bean.TestBean7.Host parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.Host parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hanschen.multidex.bean.TestBean7.Host parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.Host parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.Host parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.Host parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.Host parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.Host parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.Host parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.hanschen.multidex.bean.TestBean7.Host prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.hanschen.multidex.bean.Host}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:com.hanschen.multidex.bean.Host)
            com.hanschen.multidex.bean.TestBean7.HostOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_Host_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_Host_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        com.hanschen.multidex.bean.TestBean7.Host.class, com.hanschen.multidex.bean.TestBean7.Host.Builder.class);
      }

      // Construct using com.hanschen.multidex.bean.TestBean7.Host.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        online_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        linkType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        hostName_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        ip_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        mac_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        deviceType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_Host_descriptor;
      }

      public com.hanschen.multidex.bean.TestBean7.Host getDefaultInstanceForType() {
        return com.hanschen.multidex.bean.TestBean7.Host.getDefaultInstance();
      }

      public com.hanschen.multidex.bean.TestBean7.Host build() {
        com.hanschen.multidex.bean.TestBean7.Host result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hanschen.multidex.bean.TestBean7.Host buildPartial() {
        com.hanschen.multidex.bean.TestBean7.Host result = new com.hanschen.multidex.bean.TestBean7.Host(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.online_ = online_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.linkType_ = linkType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.hostName_ = hostName_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.ip_ = ip_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.mac_ = mac_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.deviceType_ = deviceType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hanschen.multidex.bean.TestBean7.Host) {
          return mergeFrom((com.hanschen.multidex.bean.TestBean7.Host)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hanschen.multidex.bean.TestBean7.Host other) {
        if (other == com.hanschen.multidex.bean.TestBean7.Host.getDefaultInstance()) return this;
        if (other.hasOnline()) {
          setOnline(other.getOnline());
        }
        if (other.hasLinkType()) {
          setLinkType(other.getLinkType());
        }
        if (other.hasHostName()) {
          bitField0_ |= 0x00000004;
          hostName_ = other.hostName_;
          onChanged();
        }
        if (other.hasIp()) {
          bitField0_ |= 0x00000008;
          ip_ = other.ip_;
          onChanged();
        }
        if (other.hasMac()) {
          bitField0_ |= 0x00000010;
          mac_ = other.mac_;
          onChanged();
        }
        if (other.hasDeviceType()) {
          setDeviceType(other.getDeviceType());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasOnline()) {
          return false;
        }
        if (!hasLinkType()) {
          return false;
        }
        if (!hasHostName()) {
          return false;
        }
        if (!hasIp()) {
          return false;
        }
        if (!hasMac()) {
          return false;
        }
        if (!hasDeviceType()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        com.hanschen.multidex.bean.TestBean7.Host parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hanschen.multidex.bean.TestBean7.Host) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int online_ = 0;
      /**
       * <code>required .com.hanschen.multidex.bean.OnlineState online = 1;</code>
       */
      public boolean hasOnline() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .com.hanschen.multidex.bean.OnlineState online = 1;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.OnlineState getOnline() {
        com.hanschen.multidex.bean.TestBean7.OnlineState result = com.hanschen.multidex.bean.TestBean7.OnlineState.valueOf(online_);
        return result == null ? com.hanschen.multidex.bean.TestBean7.OnlineState.ONLINE : result;
      }
      /**
       * <code>required .com.hanschen.multidex.bean.OnlineState online = 1;</code>
       */
      public Builder setOnline(com.hanschen.multidex.bean.TestBean7.OnlineState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        online_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .com.hanschen.multidex.bean.OnlineState online = 1;</code>
       */
      public Builder clearOnline() {
        bitField0_ = (bitField0_ & ~0x00000001);
        online_ = 0;
        onChanged();
        return this;
      }

      private int linkType_ = 0;
      /**
       * <code>required .com.hanschen.multidex.bean.LinkType LinkType = 2;</code>
       */
      public boolean hasLinkType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .com.hanschen.multidex.bean.LinkType LinkType = 2;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.LinkType getLinkType() {
        com.hanschen.multidex.bean.TestBean7.LinkType result = com.hanschen.multidex.bean.TestBean7.LinkType.valueOf(linkType_);
        return result == null ? com.hanschen.multidex.bean.TestBean7.LinkType.WIRE : result;
      }
      /**
       * <code>required .com.hanschen.multidex.bean.LinkType LinkType = 2;</code>
       */
      public Builder setLinkType(com.hanschen.multidex.bean.TestBean7.LinkType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        linkType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .com.hanschen.multidex.bean.LinkType LinkType = 2;</code>
       */
      public Builder clearLinkType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        linkType_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object hostName_ = "";
      /**
       * <code>required string host_name = 3;</code>
       */
      public boolean hasHostName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string host_name = 3;</code>
       */
      public java.lang.String getHostName() {
        java.lang.Object ref = hostName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            hostName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string host_name = 3;</code>
       */
      public com.google.protobuf.ByteString
      getHostNameBytes() {
        java.lang.Object ref = hostName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          hostName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string host_name = 3;</code>
       */
      public Builder setHostName(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        hostName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string host_name = 3;</code>
       */
      public Builder clearHostName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        hostName_ = getDefaultInstance().getHostName();
        onChanged();
        return this;
      }
      /**
       * <code>required string host_name = 3;</code>
       */
      public Builder setHostNameBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        hostName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object ip_ = "";
      /**
       * <code>required string ip = 4;</code>
       */
      public boolean hasIp() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required string ip = 4;</code>
       */
      public java.lang.String getIp() {
        java.lang.Object ref = ip_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            ip_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string ip = 4;</code>
       */
      public com.google.protobuf.ByteString
      getIpBytes() {
        java.lang.Object ref = ip_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          ip_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string ip = 4;</code>
       */
      public Builder setIp(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        ip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string ip = 4;</code>
       */
      public Builder clearIp() {
        bitField0_ = (bitField0_ & ~0x00000008);
        ip_ = getDefaultInstance().getIp();
        onChanged();
        return this;
      }
      /**
       * <code>required string ip = 4;</code>
       */
      public Builder setIpBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        ip_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object mac_ = "";
      /**
       * <code>required string mac = 5;</code>
       */
      public boolean hasMac() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required string mac = 5;</code>
       */
      public java.lang.String getMac() {
        java.lang.Object ref = mac_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            mac_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string mac = 5;</code>
       */
      public com.google.protobuf.ByteString
      getMacBytes() {
        java.lang.Object ref = mac_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          mac_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string mac = 5;</code>
       */
      public Builder setMac(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        mac_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string mac = 5;</code>
       */
      public Builder clearMac() {
        bitField0_ = (bitField0_ & ~0x00000010);
        mac_ = getDefaultInstance().getMac();
        onChanged();
        return this;
      }
      /**
       * <code>required string mac = 5;</code>
       */
      public Builder setMacBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        mac_ = value;
        onChanged();
        return this;
      }

      private int deviceType_ = 0;
      /**
       * <code>required .com.hanschen.multidex.bean.DeviceType device_type = 6;</code>
       */
      public boolean hasDeviceType() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required .com.hanschen.multidex.bean.DeviceType device_type = 6;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.DeviceType getDeviceType() {
        com.hanschen.multidex.bean.TestBean7.DeviceType result = com.hanschen.multidex.bean.TestBean7.DeviceType.valueOf(deviceType_);
        return result == null ? com.hanschen.multidex.bean.TestBean7.DeviceType.PC : result;
      }
      /**
       * <code>required .com.hanschen.multidex.bean.DeviceType device_type = 6;</code>
       */
      public Builder setDeviceType(com.hanschen.multidex.bean.TestBean7.DeviceType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        deviceType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .com.hanschen.multidex.bean.DeviceType device_type = 6;</code>
       */
      public Builder clearDeviceType() {
        bitField0_ = (bitField0_ & ~0x00000020);
        deviceType_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.hanschen.multidex.bean.Host)
    }

    // @@protoc_insertion_point(class_scope:com.hanschen.multidex.bean.Host)
    private static final com.hanschen.multidex.bean.TestBean7.Host DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.hanschen.multidex.bean.TestBean7.Host();
    }

    public static com.hanschen.multidex.bean.TestBean7.Host getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Host>
            PARSER = new com.google.protobuf.AbstractParser<Host>() {
      public Host parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return new Host(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Host> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Host> getParserForType() {
      return PARSER;
    }

    public com.hanschen.multidex.bean.TestBean7.Host getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SystemInfoOrBuilder extends
          // @@protoc_insertion_point(interface_extends:com.hanschen.multidex.bean.SystemInfo)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 current_speed = 1;</code>
     */
    boolean hasCurrentSpeed();
    /**
     * <code>required int32 current_speed = 1;</code>
     */
    int getCurrentSpeed();

    /**
     * <code>required int32 max_speed = 2;</code>
     */
    boolean hasMaxSpeed();
    /**
     * <code>required int32 max_speed = 2;</code>
     */
    int getMaxSpeed();

    /**
     * <code>required int32 mem_per = 3;</code>
     */
    boolean hasMemPer();
    /**
     * <code>required int32 mem_per = 3;</code>
     */
    int getMemPer();

    /**
     * <code>required int32 cpu_per = 4;</code>
     */
    boolean hasCpuPer();
    /**
     * <code>required int32 cpu_per = 4;</code>
     */
    int getCpuPer();
  }
  /**
   * Protobuf type {@code com.hanschen.multidex.bean.SystemInfo}
   */
  public  static final class SystemInfo extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:com.hanschen.multidex.bean.SystemInfo)
          SystemInfoOrBuilder {
    // Use SystemInfo.newBuilder() to construct.
    private SystemInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SystemInfo() {
      currentSpeed_ = 0;
      maxSpeed_ = 0;
      memPer_ = 0;
      cpuPer_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SystemInfo(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                      extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              currentSpeed_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              maxSpeed_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              memPer_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              cpuPer_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_SystemInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_SystemInfo_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      com.hanschen.multidex.bean.TestBean7.SystemInfo.class, com.hanschen.multidex.bean.TestBean7.SystemInfo.Builder.class);
    }

    private int bitField0_;
    public static final int CURRENT_SPEED_FIELD_NUMBER = 1;
    private int currentSpeed_;
    /**
     * <code>required int32 current_speed = 1;</code>
     */
    public boolean hasCurrentSpeed() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 current_speed = 1;</code>
     */
    public int getCurrentSpeed() {
      return currentSpeed_;
    }

    public static final int MAX_SPEED_FIELD_NUMBER = 2;
    private int maxSpeed_;
    /**
     * <code>required int32 max_speed = 2;</code>
     */
    public boolean hasMaxSpeed() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 max_speed = 2;</code>
     */
    public int getMaxSpeed() {
      return maxSpeed_;
    }

    public static final int MEM_PER_FIELD_NUMBER = 3;
    private int memPer_;
    /**
     * <code>required int32 mem_per = 3;</code>
     */
    public boolean hasMemPer() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 mem_per = 3;</code>
     */
    public int getMemPer() {
      return memPer_;
    }

    public static final int CPU_PER_FIELD_NUMBER = 4;
    private int cpuPer_;
    /**
     * <code>required int32 cpu_per = 4;</code>
     */
    public boolean hasCpuPer() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 cpu_per = 4;</code>
     */
    public int getCpuPer() {
      return cpuPer_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasCurrentSpeed()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMaxSpeed()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMemPer()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCpuPer()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, currentSpeed_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, maxSpeed_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, memPer_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, cpuPer_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(1, currentSpeed_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(2, maxSpeed_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(3, memPer_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(4, cpuPer_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.hanschen.multidex.bean.TestBean7.SystemInfo)) {
        return super.equals(obj);
      }
      com.hanschen.multidex.bean.TestBean7.SystemInfo other = (com.hanschen.multidex.bean.TestBean7.SystemInfo) obj;

      boolean result = true;
      result = result && (hasCurrentSpeed() == other.hasCurrentSpeed());
      if (hasCurrentSpeed()) {
        result = result && (getCurrentSpeed()
                == other.getCurrentSpeed());
      }
      result = result && (hasMaxSpeed() == other.hasMaxSpeed());
      if (hasMaxSpeed()) {
        result = result && (getMaxSpeed()
                == other.getMaxSpeed());
      }
      result = result && (hasMemPer() == other.hasMemPer());
      if (hasMemPer()) {
        result = result && (getMemPer()
                == other.getMemPer());
      }
      result = result && (hasCpuPer() == other.hasCpuPer());
      if (hasCpuPer()) {
        result = result && (getCpuPer()
                == other.getCpuPer());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasCurrentSpeed()) {
        hash = (37 * hash) + CURRENT_SPEED_FIELD_NUMBER;
        hash = (53 * hash) + getCurrentSpeed();
      }
      if (hasMaxSpeed()) {
        hash = (37 * hash) + MAX_SPEED_FIELD_NUMBER;
        hash = (53 * hash) + getMaxSpeed();
      }
      if (hasMemPer()) {
        hash = (37 * hash) + MEM_PER_FIELD_NUMBER;
        hash = (53 * hash) + getMemPer();
      }
      if (hasCpuPer()) {
        hash = (37 * hash) + CPU_PER_FIELD_NUMBER;
        hash = (53 * hash) + getCpuPer();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.hanschen.multidex.bean.TestBean7.SystemInfo parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hanschen.multidex.bean.TestBean7.SystemInfo parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.SystemInfo parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hanschen.multidex.bean.TestBean7.SystemInfo parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.SystemInfo parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.SystemInfo parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.SystemInfo parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.SystemInfo parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.SystemInfo parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.SystemInfo parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.hanschen.multidex.bean.TestBean7.SystemInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.hanschen.multidex.bean.SystemInfo}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:com.hanschen.multidex.bean.SystemInfo)
            com.hanschen.multidex.bean.TestBean7.SystemInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_SystemInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_SystemInfo_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        com.hanschen.multidex.bean.TestBean7.SystemInfo.class, com.hanschen.multidex.bean.TestBean7.SystemInfo.Builder.class);
      }

      // Construct using com.hanschen.multidex.bean.TestBean7.SystemInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        currentSpeed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        maxSpeed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        memPer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        cpuPer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_SystemInfo_descriptor;
      }

      public com.hanschen.multidex.bean.TestBean7.SystemInfo getDefaultInstanceForType() {
        return com.hanschen.multidex.bean.TestBean7.SystemInfo.getDefaultInstance();
      }

      public com.hanschen.multidex.bean.TestBean7.SystemInfo build() {
        com.hanschen.multidex.bean.TestBean7.SystemInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hanschen.multidex.bean.TestBean7.SystemInfo buildPartial() {
        com.hanschen.multidex.bean.TestBean7.SystemInfo result = new com.hanschen.multidex.bean.TestBean7.SystemInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.currentSpeed_ = currentSpeed_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.maxSpeed_ = maxSpeed_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.memPer_ = memPer_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.cpuPer_ = cpuPer_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hanschen.multidex.bean.TestBean7.SystemInfo) {
          return mergeFrom((com.hanschen.multidex.bean.TestBean7.SystemInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hanschen.multidex.bean.TestBean7.SystemInfo other) {
        if (other == com.hanschen.multidex.bean.TestBean7.SystemInfo.getDefaultInstance()) return this;
        if (other.hasCurrentSpeed()) {
          setCurrentSpeed(other.getCurrentSpeed());
        }
        if (other.hasMaxSpeed()) {
          setMaxSpeed(other.getMaxSpeed());
        }
        if (other.hasMemPer()) {
          setMemPer(other.getMemPer());
        }
        if (other.hasCpuPer()) {
          setCpuPer(other.getCpuPer());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCurrentSpeed()) {
          return false;
        }
        if (!hasMaxSpeed()) {
          return false;
        }
        if (!hasMemPer()) {
          return false;
        }
        if (!hasCpuPer()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        com.hanschen.multidex.bean.TestBean7.SystemInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hanschen.multidex.bean.TestBean7.SystemInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int currentSpeed_ ;
      /**
       * <code>required int32 current_speed = 1;</code>
       */
      public boolean hasCurrentSpeed() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 current_speed = 1;</code>
       */
      public int getCurrentSpeed() {
        return currentSpeed_;
      }
      /**
       * <code>required int32 current_speed = 1;</code>
       */
      public Builder setCurrentSpeed(int value) {
        bitField0_ |= 0x00000001;
        currentSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 current_speed = 1;</code>
       */
      public Builder clearCurrentSpeed() {
        bitField0_ = (bitField0_ & ~0x00000001);
        currentSpeed_ = 0;
        onChanged();
        return this;
      }

      private int maxSpeed_ ;
      /**
       * <code>required int32 max_speed = 2;</code>
       */
      public boolean hasMaxSpeed() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 max_speed = 2;</code>
       */
      public int getMaxSpeed() {
        return maxSpeed_;
      }
      /**
       * <code>required int32 max_speed = 2;</code>
       */
      public Builder setMaxSpeed(int value) {
        bitField0_ |= 0x00000002;
        maxSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 max_speed = 2;</code>
       */
      public Builder clearMaxSpeed() {
        bitField0_ = (bitField0_ & ~0x00000002);
        maxSpeed_ = 0;
        onChanged();
        return this;
      }

      private int memPer_ ;
      /**
       * <code>required int32 mem_per = 3;</code>
       */
      public boolean hasMemPer() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 mem_per = 3;</code>
       */
      public int getMemPer() {
        return memPer_;
      }
      /**
       * <code>required int32 mem_per = 3;</code>
       */
      public Builder setMemPer(int value) {
        bitField0_ |= 0x00000004;
        memPer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 mem_per = 3;</code>
       */
      public Builder clearMemPer() {
        bitField0_ = (bitField0_ & ~0x00000004);
        memPer_ = 0;
        onChanged();
        return this;
      }

      private int cpuPer_ ;
      /**
       * <code>required int32 cpu_per = 4;</code>
       */
      public boolean hasCpuPer() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 cpu_per = 4;</code>
       */
      public int getCpuPer() {
        return cpuPer_;
      }
      /**
       * <code>required int32 cpu_per = 4;</code>
       */
      public Builder setCpuPer(int value) {
        bitField0_ |= 0x00000008;
        cpuPer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 cpu_per = 4;</code>
       */
      public Builder clearCpuPer() {
        bitField0_ = (bitField0_ & ~0x00000008);
        cpuPer_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.hanschen.multidex.bean.SystemInfo)
    }

    // @@protoc_insertion_point(class_scope:com.hanschen.multidex.bean.SystemInfo)
    private static final com.hanschen.multidex.bean.TestBean7.SystemInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.hanschen.multidex.bean.TestBean7.SystemInfo();
    }

    public static com.hanschen.multidex.bean.TestBean7.SystemInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SystemInfo>
            PARSER = new com.google.protobuf.AbstractParser<SystemInfo>() {
      public SystemInfo parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return new SystemInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SystemInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SystemInfo> getParserForType() {
      return PARSER;
    }

    public com.hanschen.multidex.bean.TestBean7.SystemInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GuestWifiOrBuilder extends
          // @@protoc_insertion_point(interface_extends:com.hanschen.multidex.bean.GuestWifi)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required bool enable = 1;</code>
     */
    boolean hasEnable();
    /**
     * <code>required bool enable = 1;</code>
     */
    boolean getEnable();

    /**
     * <code>required string ssid = 2;</code>
     */
    boolean hasSsid();
    /**
     * <code>required string ssid = 2;</code>
     */
    java.lang.String getSsid();
    /**
     * <code>required string ssid = 2;</code>
     */
    com.google.protobuf.ByteString
    getSsidBytes();

    /**
     * <code>required bool encrypt = 3;</code>
     */
    boolean hasEncrypt();
    /**
     * <code>required bool encrypt = 3;</code>
     */
    boolean getEncrypt();

    /**
     * <code>optional string password = 4;</code>
     */
    boolean hasPassword();
    /**
     * <code>optional string password = 4;</code>
     */
    java.lang.String getPassword();
    /**
     * <code>optional string password = 4;</code>
     */
    com.google.protobuf.ByteString
    getPasswordBytes();

    /**
     * <code>required int64 start_timestamp = 5;</code>
     */
    boolean hasStartTimestamp();
    /**
     * <code>required int64 start_timestamp = 5;</code>
     */
    long getStartTimestamp();

    /**
     * <code>required int64 end_timestamp = 6;</code>
     */
    boolean hasEndTimestamp();
    /**
     * <code>required int64 end_timestamp = 6;</code>
     */
    long getEndTimestamp();
  }
  /**
   * Protobuf type {@code com.hanschen.multidex.bean.GuestWifi}
   */
  public  static final class GuestWifi extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:com.hanschen.multidex.bean.GuestWifi)
          GuestWifiOrBuilder {
    // Use GuestWifi.newBuilder() to construct.
    private GuestWifi(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GuestWifi() {
      enable_ = false;
      ssid_ = "";
      encrypt_ = false;
      password_ = "";
      startTimestamp_ = 0L;
      endTimestamp_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GuestWifi(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                      extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              enable_ = input.readBool();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              ssid_ = bs;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              encrypt_ = input.readBool();
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              password_ = bs;
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              startTimestamp_ = input.readInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              endTimestamp_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_GuestWifi_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_GuestWifi_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      com.hanschen.multidex.bean.TestBean7.GuestWifi.class, com.hanschen.multidex.bean.TestBean7.GuestWifi.Builder.class);
    }

    private int bitField0_;
    public static final int ENABLE_FIELD_NUMBER = 1;
    private boolean enable_;
    /**
     * <code>required bool enable = 1;</code>
     */
    public boolean hasEnable() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bool enable = 1;</code>
     */
    public boolean getEnable() {
      return enable_;
    }

    public static final int SSID_FIELD_NUMBER = 2;
    private volatile java.lang.Object ssid_;
    /**
     * <code>required string ssid = 2;</code>
     */
    public boolean hasSsid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string ssid = 2;</code>
     */
    public java.lang.String getSsid() {
      java.lang.Object ref = ssid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ssid_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string ssid = 2;</code>
     */
    public com.google.protobuf.ByteString
    getSsidBytes() {
      java.lang.Object ref = ssid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        ssid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ENCRYPT_FIELD_NUMBER = 3;
    private boolean encrypt_;
    /**
     * <code>required bool encrypt = 3;</code>
     */
    public boolean hasEncrypt() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required bool encrypt = 3;</code>
     */
    public boolean getEncrypt() {
      return encrypt_;
    }

    public static final int PASSWORD_FIELD_NUMBER = 4;
    private volatile java.lang.Object password_;
    /**
     * <code>optional string password = 4;</code>
     */
    public boolean hasPassword() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string password = 4;</code>
     */
    public java.lang.String getPassword() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          password_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string password = 4;</code>
     */
    public com.google.protobuf.ByteString
    getPasswordBytes() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        password_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int START_TIMESTAMP_FIELD_NUMBER = 5;
    private long startTimestamp_;
    /**
     * <code>required int64 start_timestamp = 5;</code>
     */
    public boolean hasStartTimestamp() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int64 start_timestamp = 5;</code>
     */
    public long getStartTimestamp() {
      return startTimestamp_;
    }

    public static final int END_TIMESTAMP_FIELD_NUMBER = 6;
    private long endTimestamp_;
    /**
     * <code>required int64 end_timestamp = 6;</code>
     */
    public boolean hasEndTimestamp() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int64 end_timestamp = 6;</code>
     */
    public long getEndTimestamp() {
      return endTimestamp_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasEnable()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSsid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEncrypt()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStartTimestamp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEndTimestamp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, enable_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, ssid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, encrypt_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, password_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(5, startTimestamp_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt64(6, endTimestamp_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
                .computeBoolSize(1, enable_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, ssid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
                .computeBoolSize(3, encrypt_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, password_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt64Size(5, startTimestamp_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt64Size(6, endTimestamp_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.hanschen.multidex.bean.TestBean7.GuestWifi)) {
        return super.equals(obj);
      }
      com.hanschen.multidex.bean.TestBean7.GuestWifi other = (com.hanschen.multidex.bean.TestBean7.GuestWifi) obj;

      boolean result = true;
      result = result && (hasEnable() == other.hasEnable());
      if (hasEnable()) {
        result = result && (getEnable()
                == other.getEnable());
      }
      result = result && (hasSsid() == other.hasSsid());
      if (hasSsid()) {
        result = result && getSsid()
                .equals(other.getSsid());
      }
      result = result && (hasEncrypt() == other.hasEncrypt());
      if (hasEncrypt()) {
        result = result && (getEncrypt()
                == other.getEncrypt());
      }
      result = result && (hasPassword() == other.hasPassword());
      if (hasPassword()) {
        result = result && getPassword()
                .equals(other.getPassword());
      }
      result = result && (hasStartTimestamp() == other.hasStartTimestamp());
      if (hasStartTimestamp()) {
        result = result && (getStartTimestamp()
                == other.getStartTimestamp());
      }
      result = result && (hasEndTimestamp() == other.hasEndTimestamp());
      if (hasEndTimestamp()) {
        result = result && (getEndTimestamp()
                == other.getEndTimestamp());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasEnable()) {
        hash = (37 * hash) + ENABLE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getEnable());
      }
      if (hasSsid()) {
        hash = (37 * hash) + SSID_FIELD_NUMBER;
        hash = (53 * hash) + getSsid().hashCode();
      }
      if (hasEncrypt()) {
        hash = (37 * hash) + ENCRYPT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getEncrypt());
      }
      if (hasPassword()) {
        hash = (37 * hash) + PASSWORD_FIELD_NUMBER;
        hash = (53 * hash) + getPassword().hashCode();
      }
      if (hasStartTimestamp()) {
        hash = (37 * hash) + START_TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                getStartTimestamp());
      }
      if (hasEndTimestamp()) {
        hash = (37 * hash) + END_TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                getEndTimestamp());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.hanschen.multidex.bean.TestBean7.GuestWifi parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hanschen.multidex.bean.TestBean7.GuestWifi parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.GuestWifi parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hanschen.multidex.bean.TestBean7.GuestWifi parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.GuestWifi parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.GuestWifi parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.GuestWifi parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.GuestWifi parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.GuestWifi parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.GuestWifi parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.hanschen.multidex.bean.TestBean7.GuestWifi prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.hanschen.multidex.bean.GuestWifi}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:com.hanschen.multidex.bean.GuestWifi)
            com.hanschen.multidex.bean.TestBean7.GuestWifiOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_GuestWifi_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_GuestWifi_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        com.hanschen.multidex.bean.TestBean7.GuestWifi.class, com.hanschen.multidex.bean.TestBean7.GuestWifi.Builder.class);
      }

      // Construct using com.hanschen.multidex.bean.TestBean7.GuestWifi.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        enable_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        ssid_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        encrypt_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        password_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        startTimestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        endTimestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_GuestWifi_descriptor;
      }

      public com.hanschen.multidex.bean.TestBean7.GuestWifi getDefaultInstanceForType() {
        return com.hanschen.multidex.bean.TestBean7.GuestWifi.getDefaultInstance();
      }

      public com.hanschen.multidex.bean.TestBean7.GuestWifi build() {
        com.hanschen.multidex.bean.TestBean7.GuestWifi result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hanschen.multidex.bean.TestBean7.GuestWifi buildPartial() {
        com.hanschen.multidex.bean.TestBean7.GuestWifi result = new com.hanschen.multidex.bean.TestBean7.GuestWifi(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.enable_ = enable_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.ssid_ = ssid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.encrypt_ = encrypt_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.password_ = password_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.startTimestamp_ = startTimestamp_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.endTimestamp_ = endTimestamp_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hanschen.multidex.bean.TestBean7.GuestWifi) {
          return mergeFrom((com.hanschen.multidex.bean.TestBean7.GuestWifi)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hanschen.multidex.bean.TestBean7.GuestWifi other) {
        if (other == com.hanschen.multidex.bean.TestBean7.GuestWifi.getDefaultInstance()) return this;
        if (other.hasEnable()) {
          setEnable(other.getEnable());
        }
        if (other.hasSsid()) {
          bitField0_ |= 0x00000002;
          ssid_ = other.ssid_;
          onChanged();
        }
        if (other.hasEncrypt()) {
          setEncrypt(other.getEncrypt());
        }
        if (other.hasPassword()) {
          bitField0_ |= 0x00000008;
          password_ = other.password_;
          onChanged();
        }
        if (other.hasStartTimestamp()) {
          setStartTimestamp(other.getStartTimestamp());
        }
        if (other.hasEndTimestamp()) {
          setEndTimestamp(other.getEndTimestamp());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasEnable()) {
          return false;
        }
        if (!hasSsid()) {
          return false;
        }
        if (!hasEncrypt()) {
          return false;
        }
        if (!hasStartTimestamp()) {
          return false;
        }
        if (!hasEndTimestamp()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        com.hanschen.multidex.bean.TestBean7.GuestWifi parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hanschen.multidex.bean.TestBean7.GuestWifi) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private boolean enable_ ;
      /**
       * <code>required bool enable = 1;</code>
       */
      public boolean hasEnable() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bool enable = 1;</code>
       */
      public boolean getEnable() {
        return enable_;
      }
      /**
       * <code>required bool enable = 1;</code>
       */
      public Builder setEnable(boolean value) {
        bitField0_ |= 0x00000001;
        enable_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool enable = 1;</code>
       */
      public Builder clearEnable() {
        bitField0_ = (bitField0_ & ~0x00000001);
        enable_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object ssid_ = "";
      /**
       * <code>required string ssid = 2;</code>
       */
      public boolean hasSsid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string ssid = 2;</code>
       */
      public java.lang.String getSsid() {
        java.lang.Object ref = ssid_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            ssid_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string ssid = 2;</code>
       */
      public com.google.protobuf.ByteString
      getSsidBytes() {
        java.lang.Object ref = ssid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          ssid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string ssid = 2;</code>
       */
      public Builder setSsid(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        ssid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string ssid = 2;</code>
       */
      public Builder clearSsid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ssid_ = getDefaultInstance().getSsid();
        onChanged();
        return this;
      }
      /**
       * <code>required string ssid = 2;</code>
       */
      public Builder setSsidBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        ssid_ = value;
        onChanged();
        return this;
      }

      private boolean encrypt_ ;
      /**
       * <code>required bool encrypt = 3;</code>
       */
      public boolean hasEncrypt() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required bool encrypt = 3;</code>
       */
      public boolean getEncrypt() {
        return encrypt_;
      }
      /**
       * <code>required bool encrypt = 3;</code>
       */
      public Builder setEncrypt(boolean value) {
        bitField0_ |= 0x00000004;
        encrypt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool encrypt = 3;</code>
       */
      public Builder clearEncrypt() {
        bitField0_ = (bitField0_ & ~0x00000004);
        encrypt_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object password_ = "";
      /**
       * <code>optional string password = 4;</code>
       */
      public boolean hasPassword() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string password = 4;</code>
       */
      public java.lang.String getPassword() {
        java.lang.Object ref = password_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            password_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string password = 4;</code>
       */
      public com.google.protobuf.ByteString
      getPasswordBytes() {
        java.lang.Object ref = password_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          password_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string password = 4;</code>
       */
      public Builder setPassword(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        password_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string password = 4;</code>
       */
      public Builder clearPassword() {
        bitField0_ = (bitField0_ & ~0x00000008);
        password_ = getDefaultInstance().getPassword();
        onChanged();
        return this;
      }
      /**
       * <code>optional string password = 4;</code>
       */
      public Builder setPasswordBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        password_ = value;
        onChanged();
        return this;
      }

      private long startTimestamp_ ;
      /**
       * <code>required int64 start_timestamp = 5;</code>
       */
      public boolean hasStartTimestamp() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int64 start_timestamp = 5;</code>
       */
      public long getStartTimestamp() {
        return startTimestamp_;
      }
      /**
       * <code>required int64 start_timestamp = 5;</code>
       */
      public Builder setStartTimestamp(long value) {
        bitField0_ |= 0x00000010;
        startTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 start_timestamp = 5;</code>
       */
      public Builder clearStartTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000010);
        startTimestamp_ = 0L;
        onChanged();
        return this;
      }

      private long endTimestamp_ ;
      /**
       * <code>required int64 end_timestamp = 6;</code>
       */
      public boolean hasEndTimestamp() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int64 end_timestamp = 6;</code>
       */
      public long getEndTimestamp() {
        return endTimestamp_;
      }
      /**
       * <code>required int64 end_timestamp = 6;</code>
       */
      public Builder setEndTimestamp(long value) {
        bitField0_ |= 0x00000020;
        endTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 end_timestamp = 6;</code>
       */
      public Builder clearEndTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000020);
        endTimestamp_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.hanschen.multidex.bean.GuestWifi)
    }

    // @@protoc_insertion_point(class_scope:com.hanschen.multidex.bean.GuestWifi)
    private static final com.hanschen.multidex.bean.TestBean7.GuestWifi DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.hanschen.multidex.bean.TestBean7.GuestWifi();
    }

    public static com.hanschen.multidex.bean.TestBean7.GuestWifi getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<GuestWifi>
            PARSER = new com.google.protobuf.AbstractParser<GuestWifi>() {
      public GuestWifi parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return new GuestWifi(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GuestWifi> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GuestWifi> getParserForType() {
      return PARSER;
    }

    public com.hanschen.multidex.bean.TestBean7.GuestWifi getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RepeatModeOrBuilder extends
          // @@protoc_insertion_point(interface_extends:com.hanschen.multidex.bean.RepeatMode)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required bool monday = 1 [default = false];</code>
     */
    boolean hasMonday();
    /**
     * <code>required bool monday = 1 [default = false];</code>
     */
    boolean getMonday();

    /**
     * <code>required bool tuesday = 2 [default = false];</code>
     */
    boolean hasTuesday();
    /**
     * <code>required bool tuesday = 2 [default = false];</code>
     */
    boolean getTuesday();

    /**
     * <code>required bool wednesday = 3 [default = false];</code>
     */
    boolean hasWednesday();
    /**
     * <code>required bool wednesday = 3 [default = false];</code>
     */
    boolean getWednesday();

    /**
     * <code>required bool thursday = 4 [default = false];</code>
     */
    boolean hasThursday();
    /**
     * <code>required bool thursday = 4 [default = false];</code>
     */
    boolean getThursday();

    /**
     * <code>required bool friday = 5 [default = false];</code>
     */
    boolean hasFriday();
    /**
     * <code>required bool friday = 5 [default = false];</code>
     */
    boolean getFriday();

    /**
     * <code>required bool saturday = 6 [default = false];</code>
     */
    boolean hasSaturday();
    /**
     * <code>required bool saturday = 6 [default = false];</code>
     */
    boolean getSaturday();

    /**
     * <code>required bool sunday = 7 [default = false];</code>
     */
    boolean hasSunday();
    /**
     * <code>required bool sunday = 7 [default = false];</code>
     */
    boolean getSunday();
  }
  /**
   * Protobuf type {@code com.hanschen.multidex.bean.RepeatMode}
   */
  public  static final class RepeatMode extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:com.hanschen.multidex.bean.RepeatMode)
          RepeatModeOrBuilder {
    // Use RepeatMode.newBuilder() to construct.
    private RepeatMode(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RepeatMode() {
      monday_ = false;
      tuesday_ = false;
      wednesday_ = false;
      thursday_ = false;
      friday_ = false;
      saturday_ = false;
      sunday_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RepeatMode(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                      extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              monday_ = input.readBool();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              tuesday_ = input.readBool();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              wednesday_ = input.readBool();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              thursday_ = input.readBool();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              friday_ = input.readBool();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              saturday_ = input.readBool();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              sunday_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_RepeatMode_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_RepeatMode_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      com.hanschen.multidex.bean.TestBean7.RepeatMode.class, com.hanschen.multidex.bean.TestBean7.RepeatMode.Builder.class);
    }

    private int bitField0_;
    public static final int MONDAY_FIELD_NUMBER = 1;
    private boolean monday_;
    /**
     * <code>required bool monday = 1 [default = false];</code>
     */
    public boolean hasMonday() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bool monday = 1 [default = false];</code>
     */
    public boolean getMonday() {
      return monday_;
    }

    public static final int TUESDAY_FIELD_NUMBER = 2;
    private boolean tuesday_;
    /**
     * <code>required bool tuesday = 2 [default = false];</code>
     */
    public boolean hasTuesday() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bool tuesday = 2 [default = false];</code>
     */
    public boolean getTuesday() {
      return tuesday_;
    }

    public static final int WEDNESDAY_FIELD_NUMBER = 3;
    private boolean wednesday_;
    /**
     * <code>required bool wednesday = 3 [default = false];</code>
     */
    public boolean hasWednesday() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required bool wednesday = 3 [default = false];</code>
     */
    public boolean getWednesday() {
      return wednesday_;
    }

    public static final int THURSDAY_FIELD_NUMBER = 4;
    private boolean thursday_;
    /**
     * <code>required bool thursday = 4 [default = false];</code>
     */
    public boolean hasThursday() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required bool thursday = 4 [default = false];</code>
     */
    public boolean getThursday() {
      return thursday_;
    }

    public static final int FRIDAY_FIELD_NUMBER = 5;
    private boolean friday_;
    /**
     * <code>required bool friday = 5 [default = false];</code>
     */
    public boolean hasFriday() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required bool friday = 5 [default = false];</code>
     */
    public boolean getFriday() {
      return friday_;
    }

    public static final int SATURDAY_FIELD_NUMBER = 6;
    private boolean saturday_;
    /**
     * <code>required bool saturday = 6 [default = false];</code>
     */
    public boolean hasSaturday() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required bool saturday = 6 [default = false];</code>
     */
    public boolean getSaturday() {
      return saturday_;
    }

    public static final int SUNDAY_FIELD_NUMBER = 7;
    private boolean sunday_;
    /**
     * <code>required bool sunday = 7 [default = false];</code>
     */
    public boolean hasSunday() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required bool sunday = 7 [default = false];</code>
     */
    public boolean getSunday() {
      return sunday_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasMonday()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTuesday()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWednesday()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasThursday()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFriday()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSaturday()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSunday()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, monday_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, tuesday_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, wednesday_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, thursday_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, friday_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(6, saturday_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(7, sunday_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
                .computeBoolSize(1, monday_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
                .computeBoolSize(2, tuesday_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
                .computeBoolSize(3, wednesday_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
                .computeBoolSize(4, thursday_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
                .computeBoolSize(5, friday_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
                .computeBoolSize(6, saturday_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
                .computeBoolSize(7, sunday_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.hanschen.multidex.bean.TestBean7.RepeatMode)) {
        return super.equals(obj);
      }
      com.hanschen.multidex.bean.TestBean7.RepeatMode other = (com.hanschen.multidex.bean.TestBean7.RepeatMode) obj;

      boolean result = true;
      result = result && (hasMonday() == other.hasMonday());
      if (hasMonday()) {
        result = result && (getMonday()
                == other.getMonday());
      }
      result = result && (hasTuesday() == other.hasTuesday());
      if (hasTuesday()) {
        result = result && (getTuesday()
                == other.getTuesday());
      }
      result = result && (hasWednesday() == other.hasWednesday());
      if (hasWednesday()) {
        result = result && (getWednesday()
                == other.getWednesday());
      }
      result = result && (hasThursday() == other.hasThursday());
      if (hasThursday()) {
        result = result && (getThursday()
                == other.getThursday());
      }
      result = result && (hasFriday() == other.hasFriday());
      if (hasFriday()) {
        result = result && (getFriday()
                == other.getFriday());
      }
      result = result && (hasSaturday() == other.hasSaturday());
      if (hasSaturday()) {
        result = result && (getSaturday()
                == other.getSaturday());
      }
      result = result && (hasSunday() == other.hasSunday());
      if (hasSunday()) {
        result = result && (getSunday()
                == other.getSunday());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasMonday()) {
        hash = (37 * hash) + MONDAY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getMonday());
      }
      if (hasTuesday()) {
        hash = (37 * hash) + TUESDAY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getTuesday());
      }
      if (hasWednesday()) {
        hash = (37 * hash) + WEDNESDAY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getWednesday());
      }
      if (hasThursday()) {
        hash = (37 * hash) + THURSDAY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getThursday());
      }
      if (hasFriday()) {
        hash = (37 * hash) + FRIDAY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getFriday());
      }
      if (hasSaturday()) {
        hash = (37 * hash) + SATURDAY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getSaturday());
      }
      if (hasSunday()) {
        hash = (37 * hash) + SUNDAY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getSunday());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.hanschen.multidex.bean.TestBean7.RepeatMode parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hanschen.multidex.bean.TestBean7.RepeatMode parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.RepeatMode parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hanschen.multidex.bean.TestBean7.RepeatMode parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.RepeatMode parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.RepeatMode parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.RepeatMode parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.RepeatMode parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.RepeatMode parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.RepeatMode parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.hanschen.multidex.bean.TestBean7.RepeatMode prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.hanschen.multidex.bean.RepeatMode}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:com.hanschen.multidex.bean.RepeatMode)
            com.hanschen.multidex.bean.TestBean7.RepeatModeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_RepeatMode_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_RepeatMode_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        com.hanschen.multidex.bean.TestBean7.RepeatMode.class, com.hanschen.multidex.bean.TestBean7.RepeatMode.Builder.class);
      }

      // Construct using com.hanschen.multidex.bean.TestBean7.RepeatMode.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        monday_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        tuesday_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        wednesday_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        thursday_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        friday_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        saturday_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        sunday_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_RepeatMode_descriptor;
      }

      public com.hanschen.multidex.bean.TestBean7.RepeatMode getDefaultInstanceForType() {
        return com.hanschen.multidex.bean.TestBean7.RepeatMode.getDefaultInstance();
      }

      public com.hanschen.multidex.bean.TestBean7.RepeatMode build() {
        com.hanschen.multidex.bean.TestBean7.RepeatMode result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hanschen.multidex.bean.TestBean7.RepeatMode buildPartial() {
        com.hanschen.multidex.bean.TestBean7.RepeatMode result = new com.hanschen.multidex.bean.TestBean7.RepeatMode(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.monday_ = monday_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.tuesday_ = tuesday_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.wednesday_ = wednesday_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.thursday_ = thursday_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.friday_ = friday_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.saturday_ = saturday_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.sunday_ = sunday_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hanschen.multidex.bean.TestBean7.RepeatMode) {
          return mergeFrom((com.hanschen.multidex.bean.TestBean7.RepeatMode)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hanschen.multidex.bean.TestBean7.RepeatMode other) {
        if (other == com.hanschen.multidex.bean.TestBean7.RepeatMode.getDefaultInstance()) return this;
        if (other.hasMonday()) {
          setMonday(other.getMonday());
        }
        if (other.hasTuesday()) {
          setTuesday(other.getTuesday());
        }
        if (other.hasWednesday()) {
          setWednesday(other.getWednesday());
        }
        if (other.hasThursday()) {
          setThursday(other.getThursday());
        }
        if (other.hasFriday()) {
          setFriday(other.getFriday());
        }
        if (other.hasSaturday()) {
          setSaturday(other.getSaturday());
        }
        if (other.hasSunday()) {
          setSunday(other.getSunday());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMonday()) {
          return false;
        }
        if (!hasTuesday()) {
          return false;
        }
        if (!hasWednesday()) {
          return false;
        }
        if (!hasThursday()) {
          return false;
        }
        if (!hasFriday()) {
          return false;
        }
        if (!hasSaturday()) {
          return false;
        }
        if (!hasSunday()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        com.hanschen.multidex.bean.TestBean7.RepeatMode parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hanschen.multidex.bean.TestBean7.RepeatMode) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private boolean monday_ ;
      /**
       * <code>required bool monday = 1 [default = false];</code>
       */
      public boolean hasMonday() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bool monday = 1 [default = false];</code>
       */
      public boolean getMonday() {
        return monday_;
      }
      /**
       * <code>required bool monday = 1 [default = false];</code>
       */
      public Builder setMonday(boolean value) {
        bitField0_ |= 0x00000001;
        monday_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool monday = 1 [default = false];</code>
       */
      public Builder clearMonday() {
        bitField0_ = (bitField0_ & ~0x00000001);
        monday_ = false;
        onChanged();
        return this;
      }

      private boolean tuesday_ ;
      /**
       * <code>required bool tuesday = 2 [default = false];</code>
       */
      public boolean hasTuesday() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bool tuesday = 2 [default = false];</code>
       */
      public boolean getTuesday() {
        return tuesday_;
      }
      /**
       * <code>required bool tuesday = 2 [default = false];</code>
       */
      public Builder setTuesday(boolean value) {
        bitField0_ |= 0x00000002;
        tuesday_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool tuesday = 2 [default = false];</code>
       */
      public Builder clearTuesday() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tuesday_ = false;
        onChanged();
        return this;
      }

      private boolean wednesday_ ;
      /**
       * <code>required bool wednesday = 3 [default = false];</code>
       */
      public boolean hasWednesday() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required bool wednesday = 3 [default = false];</code>
       */
      public boolean getWednesday() {
        return wednesday_;
      }
      /**
       * <code>required bool wednesday = 3 [default = false];</code>
       */
      public Builder setWednesday(boolean value) {
        bitField0_ |= 0x00000004;
        wednesday_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool wednesday = 3 [default = false];</code>
       */
      public Builder clearWednesday() {
        bitField0_ = (bitField0_ & ~0x00000004);
        wednesday_ = false;
        onChanged();
        return this;
      }

      private boolean thursday_ ;
      /**
       * <code>required bool thursday = 4 [default = false];</code>
       */
      public boolean hasThursday() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required bool thursday = 4 [default = false];</code>
       */
      public boolean getThursday() {
        return thursday_;
      }
      /**
       * <code>required bool thursday = 4 [default = false];</code>
       */
      public Builder setThursday(boolean value) {
        bitField0_ |= 0x00000008;
        thursday_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool thursday = 4 [default = false];</code>
       */
      public Builder clearThursday() {
        bitField0_ = (bitField0_ & ~0x00000008);
        thursday_ = false;
        onChanged();
        return this;
      }

      private boolean friday_ ;
      /**
       * <code>required bool friday = 5 [default = false];</code>
       */
      public boolean hasFriday() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required bool friday = 5 [default = false];</code>
       */
      public boolean getFriday() {
        return friday_;
      }
      /**
       * <code>required bool friday = 5 [default = false];</code>
       */
      public Builder setFriday(boolean value) {
        bitField0_ |= 0x00000010;
        friday_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool friday = 5 [default = false];</code>
       */
      public Builder clearFriday() {
        bitField0_ = (bitField0_ & ~0x00000010);
        friday_ = false;
        onChanged();
        return this;
      }

      private boolean saturday_ ;
      /**
       * <code>required bool saturday = 6 [default = false];</code>
       */
      public boolean hasSaturday() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required bool saturday = 6 [default = false];</code>
       */
      public boolean getSaturday() {
        return saturday_;
      }
      /**
       * <code>required bool saturday = 6 [default = false];</code>
       */
      public Builder setSaturday(boolean value) {
        bitField0_ |= 0x00000020;
        saturday_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool saturday = 6 [default = false];</code>
       */
      public Builder clearSaturday() {
        bitField0_ = (bitField0_ & ~0x00000020);
        saturday_ = false;
        onChanged();
        return this;
      }

      private boolean sunday_ ;
      /**
       * <code>required bool sunday = 7 [default = false];</code>
       */
      public boolean hasSunday() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required bool sunday = 7 [default = false];</code>
       */
      public boolean getSunday() {
        return sunday_;
      }
      /**
       * <code>required bool sunday = 7 [default = false];</code>
       */
      public Builder setSunday(boolean value) {
        bitField0_ |= 0x00000040;
        sunday_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool sunday = 7 [default = false];</code>
       */
      public Builder clearSunday() {
        bitField0_ = (bitField0_ & ~0x00000040);
        sunday_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.hanschen.multidex.bean.RepeatMode)
    }

    // @@protoc_insertion_point(class_scope:com.hanschen.multidex.bean.RepeatMode)
    private static final com.hanschen.multidex.bean.TestBean7.RepeatMode DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.hanschen.multidex.bean.TestBean7.RepeatMode();
    }

    public static com.hanschen.multidex.bean.TestBean7.RepeatMode getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RepeatMode>
            PARSER = new com.google.protobuf.AbstractParser<RepeatMode>() {
      public RepeatMode parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return new RepeatMode(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RepeatMode> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RepeatMode> getParserForType() {
      return PARSER;
    }

    public com.hanschen.multidex.bean.TestBean7.RepeatMode getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ParentControlTaskOrBuilder extends
          // @@protoc_insertion_point(interface_extends:com.hanschen.multidex.bean.ParentControlTask)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 index = 1;</code>
     */
    boolean hasIndex();
    /**
     * <code>optional int32 index = 1;</code>
     */
    int getIndex();

    /**
     * <code>required string mac_addr = 2;</code>
     */
    boolean hasMacAddr();
    /**
     * <code>required string mac_addr = 2;</code>
     */
    java.lang.String getMacAddr();
    /**
     * <code>required string mac_addr = 2;</code>
     */
    com.google.protobuf.ByteString
    getMacAddrBytes();

    /**
     * <code>required bool repeat = 3;</code>
     */
    boolean hasRepeat();
    /**
     * <code>required bool repeat = 3;</code>
     */
    boolean getRepeat();

    /**
     * <code>optional .com.hanschen.multidex.bean.RepeatMode repeat_mode = 4;</code>
     */
    boolean hasRepeatMode();
    /**
     * <code>optional .com.hanschen.multidex.bean.RepeatMode repeat_mode = 4;</code>
     */
    com.hanschen.multidex.bean.TestBean7.RepeatMode getRepeatMode();
    /**
     * <code>optional .com.hanschen.multidex.bean.RepeatMode repeat_mode = 4;</code>
     */
    com.hanschen.multidex.bean.TestBean7.RepeatModeOrBuilder getRepeatModeOrBuilder();

    /**
     * <code>required string start_time = 5;</code>
     */
    boolean hasStartTime();
    /**
     * <code>required string start_time = 5;</code>
     */
    java.lang.String getStartTime();
    /**
     * <code>required string start_time = 5;</code>
     */
    com.google.protobuf.ByteString
    getStartTimeBytes();

    /**
     * <code>required string end_time = 6;</code>
     */
    boolean hasEndTime();
    /**
     * <code>required string end_time = 6;</code>
     */
    java.lang.String getEndTime();
    /**
     * <code>required string end_time = 6;</code>
     */
    com.google.protobuf.ByteString
    getEndTimeBytes();
  }
  /**
   * Protobuf type {@code com.hanschen.multidex.bean.ParentControlTask}
   */
  public  static final class ParentControlTask extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:com.hanschen.multidex.bean.ParentControlTask)
          ParentControlTaskOrBuilder {
    // Use ParentControlTask.newBuilder() to construct.
    private ParentControlTask(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ParentControlTask() {
      index_ = 0;
      macAddr_ = "";
      repeat_ = false;
      startTime_ = "";
      endTime_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ParentControlTask(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                      extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              index_ = input.readInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              macAddr_ = bs;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              repeat_ = input.readBool();
              break;
            }
            case 34: {
              com.hanschen.multidex.bean.TestBean7.RepeatMode.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = repeatMode_.toBuilder();
              }
              repeatMode_ = input.readMessage(com.hanschen.multidex.bean.TestBean7.RepeatMode.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(repeatMode_);
                repeatMode_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              startTime_ = bs;
              break;
            }
            case 50: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000020;
              endTime_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_ParentControlTask_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_ParentControlTask_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      com.hanschen.multidex.bean.TestBean7.ParentControlTask.class, com.hanschen.multidex.bean.TestBean7.ParentControlTask.Builder.class);
    }

    private int bitField0_;
    public static final int INDEX_FIELD_NUMBER = 1;
    private int index_;
    /**
     * <code>optional int32 index = 1;</code>
     */
    public boolean hasIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 index = 1;</code>
     */
    public int getIndex() {
      return index_;
    }

    public static final int MAC_ADDR_FIELD_NUMBER = 2;
    private volatile java.lang.Object macAddr_;
    /**
     * <code>required string mac_addr = 2;</code>
     */
    public boolean hasMacAddr() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string mac_addr = 2;</code>
     */
    public java.lang.String getMacAddr() {
      java.lang.Object ref = macAddr_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          macAddr_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string mac_addr = 2;</code>
     */
    public com.google.protobuf.ByteString
    getMacAddrBytes() {
      java.lang.Object ref = macAddr_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        macAddr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REPEAT_FIELD_NUMBER = 3;
    private boolean repeat_;
    /**
     * <code>required bool repeat = 3;</code>
     */
    public boolean hasRepeat() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required bool repeat = 3;</code>
     */
    public boolean getRepeat() {
      return repeat_;
    }

    public static final int REPEAT_MODE_FIELD_NUMBER = 4;
    private com.hanschen.multidex.bean.TestBean7.RepeatMode repeatMode_;
    /**
     * <code>optional .com.hanschen.multidex.bean.RepeatMode repeat_mode = 4;</code>
     */
    public boolean hasRepeatMode() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .com.hanschen.multidex.bean.RepeatMode repeat_mode = 4;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.RepeatMode getRepeatMode() {
      return repeatMode_ == null ? com.hanschen.multidex.bean.TestBean7.RepeatMode.getDefaultInstance() : repeatMode_;
    }
    /**
     * <code>optional .com.hanschen.multidex.bean.RepeatMode repeat_mode = 4;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.RepeatModeOrBuilder getRepeatModeOrBuilder() {
      return repeatMode_ == null ? com.hanschen.multidex.bean.TestBean7.RepeatMode.getDefaultInstance() : repeatMode_;
    }

    public static final int START_TIME_FIELD_NUMBER = 5;
    private volatile java.lang.Object startTime_;
    /**
     * <code>required string start_time = 5;</code>
     */
    public boolean hasStartTime() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required string start_time = 5;</code>
     */
    public java.lang.String getStartTime() {
      java.lang.Object ref = startTime_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          startTime_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string start_time = 5;</code>
     */
    public com.google.protobuf.ByteString
    getStartTimeBytes() {
      java.lang.Object ref = startTime_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        startTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int END_TIME_FIELD_NUMBER = 6;
    private volatile java.lang.Object endTime_;
    /**
     * <code>required string end_time = 6;</code>
     */
    public boolean hasEndTime() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required string end_time = 6;</code>
     */
    public java.lang.String getEndTime() {
      java.lang.Object ref = endTime_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          endTime_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string end_time = 6;</code>
     */
    public com.google.protobuf.ByteString
    getEndTimeBytes() {
      java.lang.Object ref = endTime_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        endTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasMacAddr()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRepeat()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStartTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEndTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasRepeatMode()) {
        if (!getRepeatMode().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, index_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, macAddr_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, repeat_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, getRepeatMode());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, startTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, endTime_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(1, index_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, macAddr_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
                .computeBoolSize(3, repeat_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(4, getRepeatMode());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, startTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, endTime_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.hanschen.multidex.bean.TestBean7.ParentControlTask)) {
        return super.equals(obj);
      }
      com.hanschen.multidex.bean.TestBean7.ParentControlTask other = (com.hanschen.multidex.bean.TestBean7.ParentControlTask) obj;

      boolean result = true;
      result = result && (hasIndex() == other.hasIndex());
      if (hasIndex()) {
        result = result && (getIndex()
                == other.getIndex());
      }
      result = result && (hasMacAddr() == other.hasMacAddr());
      if (hasMacAddr()) {
        result = result && getMacAddr()
                .equals(other.getMacAddr());
      }
      result = result && (hasRepeat() == other.hasRepeat());
      if (hasRepeat()) {
        result = result && (getRepeat()
                == other.getRepeat());
      }
      result = result && (hasRepeatMode() == other.hasRepeatMode());
      if (hasRepeatMode()) {
        result = result && getRepeatMode()
                .equals(other.getRepeatMode());
      }
      result = result && (hasStartTime() == other.hasStartTime());
      if (hasStartTime()) {
        result = result && getStartTime()
                .equals(other.getStartTime());
      }
      result = result && (hasEndTime() == other.hasEndTime());
      if (hasEndTime()) {
        result = result && getEndTime()
                .equals(other.getEndTime());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasIndex()) {
        hash = (37 * hash) + INDEX_FIELD_NUMBER;
        hash = (53 * hash) + getIndex();
      }
      if (hasMacAddr()) {
        hash = (37 * hash) + MAC_ADDR_FIELD_NUMBER;
        hash = (53 * hash) + getMacAddr().hashCode();
      }
      if (hasRepeat()) {
        hash = (37 * hash) + REPEAT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getRepeat());
      }
      if (hasRepeatMode()) {
        hash = (37 * hash) + REPEAT_MODE_FIELD_NUMBER;
        hash = (53 * hash) + getRepeatMode().hashCode();
      }
      if (hasStartTime()) {
        hash = (37 * hash) + START_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getStartTime().hashCode();
      }
      if (hasEndTime()) {
        hash = (37 * hash) + END_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getEndTime().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.hanschen.multidex.bean.TestBean7.ParentControlTask parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hanschen.multidex.bean.TestBean7.ParentControlTask parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.ParentControlTask parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hanschen.multidex.bean.TestBean7.ParentControlTask parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.ParentControlTask parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.ParentControlTask parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.ParentControlTask parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.ParentControlTask parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.ParentControlTask parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.ParentControlTask parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.hanschen.multidex.bean.TestBean7.ParentControlTask prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.hanschen.multidex.bean.ParentControlTask}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:com.hanschen.multidex.bean.ParentControlTask)
            com.hanschen.multidex.bean.TestBean7.ParentControlTaskOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_ParentControlTask_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_ParentControlTask_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        com.hanschen.multidex.bean.TestBean7.ParentControlTask.class, com.hanschen.multidex.bean.TestBean7.ParentControlTask.Builder.class);
      }

      // Construct using com.hanschen.multidex.bean.TestBean7.ParentControlTask.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRepeatModeFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        index_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        macAddr_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        repeat_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (repeatModeBuilder_ == null) {
          repeatMode_ = null;
        } else {
          repeatModeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        startTime_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        endTime_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_ParentControlTask_descriptor;
      }

      public com.hanschen.multidex.bean.TestBean7.ParentControlTask getDefaultInstanceForType() {
        return com.hanschen.multidex.bean.TestBean7.ParentControlTask.getDefaultInstance();
      }

      public com.hanschen.multidex.bean.TestBean7.ParentControlTask build() {
        com.hanschen.multidex.bean.TestBean7.ParentControlTask result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hanschen.multidex.bean.TestBean7.ParentControlTask buildPartial() {
        com.hanschen.multidex.bean.TestBean7.ParentControlTask result = new com.hanschen.multidex.bean.TestBean7.ParentControlTask(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.index_ = index_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.macAddr_ = macAddr_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.repeat_ = repeat_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (repeatModeBuilder_ == null) {
          result.repeatMode_ = repeatMode_;
        } else {
          result.repeatMode_ = repeatModeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.startTime_ = startTime_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.endTime_ = endTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hanschen.multidex.bean.TestBean7.ParentControlTask) {
          return mergeFrom((com.hanschen.multidex.bean.TestBean7.ParentControlTask)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hanschen.multidex.bean.TestBean7.ParentControlTask other) {
        if (other == com.hanschen.multidex.bean.TestBean7.ParentControlTask.getDefaultInstance()) return this;
        if (other.hasIndex()) {
          setIndex(other.getIndex());
        }
        if (other.hasMacAddr()) {
          bitField0_ |= 0x00000002;
          macAddr_ = other.macAddr_;
          onChanged();
        }
        if (other.hasRepeat()) {
          setRepeat(other.getRepeat());
        }
        if (other.hasRepeatMode()) {
          mergeRepeatMode(other.getRepeatMode());
        }
        if (other.hasStartTime()) {
          bitField0_ |= 0x00000010;
          startTime_ = other.startTime_;
          onChanged();
        }
        if (other.hasEndTime()) {
          bitField0_ |= 0x00000020;
          endTime_ = other.endTime_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMacAddr()) {
          return false;
        }
        if (!hasRepeat()) {
          return false;
        }
        if (!hasStartTime()) {
          return false;
        }
        if (!hasEndTime()) {
          return false;
        }
        if (hasRepeatMode()) {
          if (!getRepeatMode().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        com.hanschen.multidex.bean.TestBean7.ParentControlTask parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hanschen.multidex.bean.TestBean7.ParentControlTask) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int index_ ;
      /**
       * <code>optional int32 index = 1;</code>
       */
      public boolean hasIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 index = 1;</code>
       */
      public int getIndex() {
        return index_;
      }
      /**
       * <code>optional int32 index = 1;</code>
       */
      public Builder setIndex(int value) {
        bitField0_ |= 0x00000001;
        index_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 index = 1;</code>
       */
      public Builder clearIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        index_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object macAddr_ = "";
      /**
       * <code>required string mac_addr = 2;</code>
       */
      public boolean hasMacAddr() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string mac_addr = 2;</code>
       */
      public java.lang.String getMacAddr() {
        java.lang.Object ref = macAddr_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            macAddr_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string mac_addr = 2;</code>
       */
      public com.google.protobuf.ByteString
      getMacAddrBytes() {
        java.lang.Object ref = macAddr_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          macAddr_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string mac_addr = 2;</code>
       */
      public Builder setMacAddr(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        macAddr_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string mac_addr = 2;</code>
       */
      public Builder clearMacAddr() {
        bitField0_ = (bitField0_ & ~0x00000002);
        macAddr_ = getDefaultInstance().getMacAddr();
        onChanged();
        return this;
      }
      /**
       * <code>required string mac_addr = 2;</code>
       */
      public Builder setMacAddrBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        macAddr_ = value;
        onChanged();
        return this;
      }

      private boolean repeat_ ;
      /**
       * <code>required bool repeat = 3;</code>
       */
      public boolean hasRepeat() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required bool repeat = 3;</code>
       */
      public boolean getRepeat() {
        return repeat_;
      }
      /**
       * <code>required bool repeat = 3;</code>
       */
      public Builder setRepeat(boolean value) {
        bitField0_ |= 0x00000004;
        repeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool repeat = 3;</code>
       */
      public Builder clearRepeat() {
        bitField0_ = (bitField0_ & ~0x00000004);
        repeat_ = false;
        onChanged();
        return this;
      }

      private com.hanschen.multidex.bean.TestBean7.RepeatMode repeatMode_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.RepeatMode, com.hanschen.multidex.bean.TestBean7.RepeatMode.Builder, com.hanschen.multidex.bean.TestBean7.RepeatModeOrBuilder> repeatModeBuilder_;
      /**
       * <code>optional .com.hanschen.multidex.bean.RepeatMode repeat_mode = 4;</code>
       */
      public boolean hasRepeatMode() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.RepeatMode repeat_mode = 4;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.RepeatMode getRepeatMode() {
        if (repeatModeBuilder_ == null) {
          return repeatMode_ == null ? com.hanschen.multidex.bean.TestBean7.RepeatMode.getDefaultInstance() : repeatMode_;
        } else {
          return repeatModeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.RepeatMode repeat_mode = 4;</code>
       */
      public Builder setRepeatMode(com.hanschen.multidex.bean.TestBean7.RepeatMode value) {
        if (repeatModeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          repeatMode_ = value;
          onChanged();
        } else {
          repeatModeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.RepeatMode repeat_mode = 4;</code>
       */
      public Builder setRepeatMode(
              com.hanschen.multidex.bean.TestBean7.RepeatMode.Builder builderForValue) {
        if (repeatModeBuilder_ == null) {
          repeatMode_ = builderForValue.build();
          onChanged();
        } else {
          repeatModeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.RepeatMode repeat_mode = 4;</code>
       */
      public Builder mergeRepeatMode(com.hanschen.multidex.bean.TestBean7.RepeatMode value) {
        if (repeatModeBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
                  repeatMode_ != null &&
                  repeatMode_ != com.hanschen.multidex.bean.TestBean7.RepeatMode.getDefaultInstance()) {
            repeatMode_ =
                    com.hanschen.multidex.bean.TestBean7.RepeatMode.newBuilder(repeatMode_).mergeFrom(value).buildPartial();
          } else {
            repeatMode_ = value;
          }
          onChanged();
        } else {
          repeatModeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.RepeatMode repeat_mode = 4;</code>
       */
      public Builder clearRepeatMode() {
        if (repeatModeBuilder_ == null) {
          repeatMode_ = null;
          onChanged();
        } else {
          repeatModeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.RepeatMode repeat_mode = 4;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.RepeatMode.Builder getRepeatModeBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getRepeatModeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.RepeatMode repeat_mode = 4;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.RepeatModeOrBuilder getRepeatModeOrBuilder() {
        if (repeatModeBuilder_ != null) {
          return repeatModeBuilder_.getMessageOrBuilder();
        } else {
          return repeatMode_ == null ?
                  com.hanschen.multidex.bean.TestBean7.RepeatMode.getDefaultInstance() : repeatMode_;
        }
      }
      /**
       * <code>optional .com.hanschen.multidex.bean.RepeatMode repeat_mode = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.RepeatMode, com.hanschen.multidex.bean.TestBean7.RepeatMode.Builder, com.hanschen.multidex.bean.TestBean7.RepeatModeOrBuilder>
      getRepeatModeFieldBuilder() {
        if (repeatModeBuilder_ == null) {
          repeatModeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.hanschen.multidex.bean.TestBean7.RepeatMode, com.hanschen.multidex.bean.TestBean7.RepeatMode.Builder, com.hanschen.multidex.bean.TestBean7.RepeatModeOrBuilder>(
                  getRepeatMode(),
                  getParentForChildren(),
                  isClean());
          repeatMode_ = null;
        }
        return repeatModeBuilder_;
      }

      private java.lang.Object startTime_ = "";
      /**
       * <code>required string start_time = 5;</code>
       */
      public boolean hasStartTime() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required string start_time = 5;</code>
       */
      public java.lang.String getStartTime() {
        java.lang.Object ref = startTime_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            startTime_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string start_time = 5;</code>
       */
      public com.google.protobuf.ByteString
      getStartTimeBytes() {
        java.lang.Object ref = startTime_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          startTime_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string start_time = 5;</code>
       */
      public Builder setStartTime(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        startTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string start_time = 5;</code>
       */
      public Builder clearStartTime() {
        bitField0_ = (bitField0_ & ~0x00000010);
        startTime_ = getDefaultInstance().getStartTime();
        onChanged();
        return this;
      }
      /**
       * <code>required string start_time = 5;</code>
       */
      public Builder setStartTimeBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        startTime_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object endTime_ = "";
      /**
       * <code>required string end_time = 6;</code>
       */
      public boolean hasEndTime() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required string end_time = 6;</code>
       */
      public java.lang.String getEndTime() {
        java.lang.Object ref = endTime_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            endTime_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string end_time = 6;</code>
       */
      public com.google.protobuf.ByteString
      getEndTimeBytes() {
        java.lang.Object ref = endTime_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          endTime_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string end_time = 6;</code>
       */
      public Builder setEndTime(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        endTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string end_time = 6;</code>
       */
      public Builder clearEndTime() {
        bitField0_ = (bitField0_ & ~0x00000020);
        endTime_ = getDefaultInstance().getEndTime();
        onChanged();
        return this;
      }
      /**
       * <code>required string end_time = 6;</code>
       */
      public Builder setEndTimeBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        endTime_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.hanschen.multidex.bean.ParentControlTask)
    }

    // @@protoc_insertion_point(class_scope:com.hanschen.multidex.bean.ParentControlTask)
    private static final com.hanschen.multidex.bean.TestBean7.ParentControlTask DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.hanschen.multidex.bean.TestBean7.ParentControlTask();
    }

    public static com.hanschen.multidex.bean.TestBean7.ParentControlTask getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ParentControlTask>
            PARSER = new com.google.protobuf.AbstractParser<ParentControlTask>() {
      public ParentControlTask parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return new ParentControlTask(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ParentControlTask> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ParentControlTask> getParserForType() {
      return PARSER;
    }

    public com.hanschen.multidex.bean.TestBean7.ParentControlTask getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SuperAdminOrBuilder extends
          // @@protoc_insertion_point(interface_extends:com.hanschen.multidex.bean.SuperAdmin)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string account = 1;</code>
     */
    boolean hasAccount();
    /**
     * <code>required string account = 1;</code>
     */
    java.lang.String getAccount();
    /**
     * <code>required string account = 1;</code>
     */
    com.google.protobuf.ByteString
    getAccountBytes();

    /**
     * <code>required string password = 2;</code>
     */
    boolean hasPassword();
    /**
     * <code>required string password = 2;</code>
     */
    java.lang.String getPassword();
    /**
     * <code>required string password = 2;</code>
     */
    com.google.protobuf.ByteString
    getPasswordBytes();
  }
  /**
   * Protobuf type {@code com.hanschen.multidex.bean.SuperAdmin}
   */
  public  static final class SuperAdmin extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:com.hanschen.multidex.bean.SuperAdmin)
          SuperAdminOrBuilder {
    // Use SuperAdmin.newBuilder() to construct.
    private SuperAdmin(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SuperAdmin() {
      account_ = "";
      password_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SuperAdmin(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                      extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              account_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              password_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_SuperAdmin_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_SuperAdmin_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      com.hanschen.multidex.bean.TestBean7.SuperAdmin.class, com.hanschen.multidex.bean.TestBean7.SuperAdmin.Builder.class);
    }

    private int bitField0_;
    public static final int ACCOUNT_FIELD_NUMBER = 1;
    private volatile java.lang.Object account_;
    /**
     * <code>required string account = 1;</code>
     */
    public boolean hasAccount() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string account = 1;</code>
     */
    public java.lang.String getAccount() {
      java.lang.Object ref = account_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          account_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string account = 1;</code>
     */
    public com.google.protobuf.ByteString
    getAccountBytes() {
      java.lang.Object ref = account_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        account_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PASSWORD_FIELD_NUMBER = 2;
    private volatile java.lang.Object password_;
    /**
     * <code>required string password = 2;</code>
     */
    public boolean hasPassword() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string password = 2;</code>
     */
    public java.lang.String getPassword() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          password_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string password = 2;</code>
     */
    public com.google.protobuf.ByteString
    getPasswordBytes() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        password_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasAccount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPassword()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, account_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, password_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, account_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, password_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.hanschen.multidex.bean.TestBean7.SuperAdmin)) {
        return super.equals(obj);
      }
      com.hanschen.multidex.bean.TestBean7.SuperAdmin other = (com.hanschen.multidex.bean.TestBean7.SuperAdmin) obj;

      boolean result = true;
      result = result && (hasAccount() == other.hasAccount());
      if (hasAccount()) {
        result = result && getAccount()
                .equals(other.getAccount());
      }
      result = result && (hasPassword() == other.hasPassword());
      if (hasPassword()) {
        result = result && getPassword()
                .equals(other.getPassword());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasAccount()) {
        hash = (37 * hash) + ACCOUNT_FIELD_NUMBER;
        hash = (53 * hash) + getAccount().hashCode();
      }
      if (hasPassword()) {
        hash = (37 * hash) + PASSWORD_FIELD_NUMBER;
        hash = (53 * hash) + getPassword().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.hanschen.multidex.bean.TestBean7.SuperAdmin parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hanschen.multidex.bean.TestBean7.SuperAdmin parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.SuperAdmin parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hanschen.multidex.bean.TestBean7.SuperAdmin parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.SuperAdmin parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.SuperAdmin parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.SuperAdmin parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.SuperAdmin parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.SuperAdmin parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.SuperAdmin parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.hanschen.multidex.bean.TestBean7.SuperAdmin prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.hanschen.multidex.bean.SuperAdmin}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:com.hanschen.multidex.bean.SuperAdmin)
            com.hanschen.multidex.bean.TestBean7.SuperAdminOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_SuperAdmin_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_SuperAdmin_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        com.hanschen.multidex.bean.TestBean7.SuperAdmin.class, com.hanschen.multidex.bean.TestBean7.SuperAdmin.Builder.class);
      }

      // Construct using com.hanschen.multidex.bean.TestBean7.SuperAdmin.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        account_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        password_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_SuperAdmin_descriptor;
      }

      public com.hanschen.multidex.bean.TestBean7.SuperAdmin getDefaultInstanceForType() {
        return com.hanschen.multidex.bean.TestBean7.SuperAdmin.getDefaultInstance();
      }

      public com.hanschen.multidex.bean.TestBean7.SuperAdmin build() {
        com.hanschen.multidex.bean.TestBean7.SuperAdmin result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hanschen.multidex.bean.TestBean7.SuperAdmin buildPartial() {
        com.hanschen.multidex.bean.TestBean7.SuperAdmin result = new com.hanschen.multidex.bean.TestBean7.SuperAdmin(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.account_ = account_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.password_ = password_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hanschen.multidex.bean.TestBean7.SuperAdmin) {
          return mergeFrom((com.hanschen.multidex.bean.TestBean7.SuperAdmin)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hanschen.multidex.bean.TestBean7.SuperAdmin other) {
        if (other == com.hanschen.multidex.bean.TestBean7.SuperAdmin.getDefaultInstance()) return this;
        if (other.hasAccount()) {
          bitField0_ |= 0x00000001;
          account_ = other.account_;
          onChanged();
        }
        if (other.hasPassword()) {
          bitField0_ |= 0x00000002;
          password_ = other.password_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasAccount()) {
          return false;
        }
        if (!hasPassword()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        com.hanschen.multidex.bean.TestBean7.SuperAdmin parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hanschen.multidex.bean.TestBean7.SuperAdmin) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object account_ = "";
      /**
       * <code>required string account = 1;</code>
       */
      public boolean hasAccount() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string account = 1;</code>
       */
      public java.lang.String getAccount() {
        java.lang.Object ref = account_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            account_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string account = 1;</code>
       */
      public com.google.protobuf.ByteString
      getAccountBytes() {
        java.lang.Object ref = account_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          account_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string account = 1;</code>
       */
      public Builder setAccount(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        account_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string account = 1;</code>
       */
      public Builder clearAccount() {
        bitField0_ = (bitField0_ & ~0x00000001);
        account_ = getDefaultInstance().getAccount();
        onChanged();
        return this;
      }
      /**
       * <code>required string account = 1;</code>
       */
      public Builder setAccountBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        account_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object password_ = "";
      /**
       * <code>required string password = 2;</code>
       */
      public boolean hasPassword() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string password = 2;</code>
       */
      public java.lang.String getPassword() {
        java.lang.Object ref = password_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            password_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string password = 2;</code>
       */
      public com.google.protobuf.ByteString
      getPasswordBytes() {
        java.lang.Object ref = password_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          password_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string password = 2;</code>
       */
      public Builder setPassword(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        password_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string password = 2;</code>
       */
      public Builder clearPassword() {
        bitField0_ = (bitField0_ & ~0x00000002);
        password_ = getDefaultInstance().getPassword();
        onChanged();
        return this;
      }
      /**
       * <code>required string password = 2;</code>
       */
      public Builder setPasswordBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        password_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.hanschen.multidex.bean.SuperAdmin)
    }

    // @@protoc_insertion_point(class_scope:com.hanschen.multidex.bean.SuperAdmin)
    private static final com.hanschen.multidex.bean.TestBean7.SuperAdmin DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.hanschen.multidex.bean.TestBean7.SuperAdmin();
    }

    public static com.hanschen.multidex.bean.TestBean7.SuperAdmin getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SuperAdmin>
            PARSER = new com.google.protobuf.AbstractParser<SuperAdmin>() {
      public SuperAdmin parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return new SuperAdmin(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SuperAdmin> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SuperAdmin> getParserForType() {
      return PARSER;
    }

    public com.hanschen.multidex.bean.TestBean7.SuperAdmin getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HardDiskInfoOrBuilder extends
          // @@protoc_insertion_point(interface_extends:com.hanschen.multidex.bean.HardDiskInfo)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .com.hanschen.multidex.bean.HardDiskState state = 1;</code>
     */
    boolean hasState();
    /**
     * <code>required .com.hanschen.multidex.bean.HardDiskState state = 1;</code>
     */
    com.hanschen.multidex.bean.TestBean7.HardDiskState getState();

    /**
     * <code>required int64 free_size = 2;</code>
     */
    boolean hasFreeSize();
    /**
     * <code>required int64 free_size = 2;</code>
     */
    long getFreeSize();

    /**
     * <code>required int64 total_size = 3;</code>
     */
    boolean hasTotalSize();
    /**
     * <code>required int64 total_size = 3;</code>
     */
    long getTotalSize();
  }
  /**
   * Protobuf type {@code com.hanschen.multidex.bean.HardDiskInfo}
   */
  public  static final class HardDiskInfo extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:com.hanschen.multidex.bean.HardDiskInfo)
          HardDiskInfoOrBuilder {
    // Use HardDiskInfo.newBuilder() to construct.
    private HardDiskInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HardDiskInfo() {
      state_ = 0;
      freeSize_ = 0L;
      totalSize_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private HardDiskInfo(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                      extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.hanschen.multidex.bean.TestBean7.HardDiskState value = com.hanschen.multidex.bean.TestBean7.HardDiskState.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                state_ = rawValue;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              freeSize_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              totalSize_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_HardDiskInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_HardDiskInfo_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      com.hanschen.multidex.bean.TestBean7.HardDiskInfo.class, com.hanschen.multidex.bean.TestBean7.HardDiskInfo.Builder.class);
    }

    private int bitField0_;
    public static final int STATE_FIELD_NUMBER = 1;
    private int state_;
    /**
     * <code>required .com.hanschen.multidex.bean.HardDiskState state = 1;</code>
     */
    public boolean hasState() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .com.hanschen.multidex.bean.HardDiskState state = 1;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.HardDiskState getState() {
      com.hanschen.multidex.bean.TestBean7.HardDiskState result = com.hanschen.multidex.bean.TestBean7.HardDiskState.valueOf(state_);
      return result == null ? com.hanschen.multidex.bean.TestBean7.HardDiskState.NO_HARD_DISK : result;
    }

    public static final int FREE_SIZE_FIELD_NUMBER = 2;
    private long freeSize_;
    /**
     * <code>required int64 free_size = 2;</code>
     */
    public boolean hasFreeSize() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 free_size = 2;</code>
     */
    public long getFreeSize() {
      return freeSize_;
    }

    public static final int TOTAL_SIZE_FIELD_NUMBER = 3;
    private long totalSize_;
    /**
     * <code>required int64 total_size = 3;</code>
     */
    public boolean hasTotalSize() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int64 total_size = 3;</code>
     */
    public long getTotalSize() {
      return totalSize_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasState()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFreeSize()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTotalSize()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, state_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, freeSize_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, totalSize_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
                .computeEnumSize(1, state_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt64Size(2, freeSize_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt64Size(3, totalSize_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.hanschen.multidex.bean.TestBean7.HardDiskInfo)) {
        return super.equals(obj);
      }
      com.hanschen.multidex.bean.TestBean7.HardDiskInfo other = (com.hanschen.multidex.bean.TestBean7.HardDiskInfo) obj;

      boolean result = true;
      result = result && (hasState() == other.hasState());
      if (hasState()) {
        result = result && state_ == other.state_;
      }
      result = result && (hasFreeSize() == other.hasFreeSize());
      if (hasFreeSize()) {
        result = result && (getFreeSize()
                == other.getFreeSize());
      }
      result = result && (hasTotalSize() == other.hasTotalSize());
      if (hasTotalSize()) {
        result = result && (getTotalSize()
                == other.getTotalSize());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasState()) {
        hash = (37 * hash) + STATE_FIELD_NUMBER;
        hash = (53 * hash) + state_;
      }
      if (hasFreeSize()) {
        hash = (37 * hash) + FREE_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                getFreeSize());
      }
      if (hasTotalSize()) {
        hash = (37 * hash) + TOTAL_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                getTotalSize());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.hanschen.multidex.bean.TestBean7.HardDiskInfo parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hanschen.multidex.bean.TestBean7.HardDiskInfo parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.HardDiskInfo parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hanschen.multidex.bean.TestBean7.HardDiskInfo parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.HardDiskInfo parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.HardDiskInfo parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.HardDiskInfo parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.HardDiskInfo parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.HardDiskInfo parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.HardDiskInfo parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.hanschen.multidex.bean.TestBean7.HardDiskInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.hanschen.multidex.bean.HardDiskInfo}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:com.hanschen.multidex.bean.HardDiskInfo)
            com.hanschen.multidex.bean.TestBean7.HardDiskInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_HardDiskInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_HardDiskInfo_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        com.hanschen.multidex.bean.TestBean7.HardDiskInfo.class, com.hanschen.multidex.bean.TestBean7.HardDiskInfo.Builder.class);
      }

      // Construct using com.hanschen.multidex.bean.TestBean7.HardDiskInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        state_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        freeSize_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        totalSize_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_HardDiskInfo_descriptor;
      }

      public com.hanschen.multidex.bean.TestBean7.HardDiskInfo getDefaultInstanceForType() {
        return com.hanschen.multidex.bean.TestBean7.HardDiskInfo.getDefaultInstance();
      }

      public com.hanschen.multidex.bean.TestBean7.HardDiskInfo build() {
        com.hanschen.multidex.bean.TestBean7.HardDiskInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hanschen.multidex.bean.TestBean7.HardDiskInfo buildPartial() {
        com.hanschen.multidex.bean.TestBean7.HardDiskInfo result = new com.hanschen.multidex.bean.TestBean7.HardDiskInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.state_ = state_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.freeSize_ = freeSize_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.totalSize_ = totalSize_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hanschen.multidex.bean.TestBean7.HardDiskInfo) {
          return mergeFrom((com.hanschen.multidex.bean.TestBean7.HardDiskInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hanschen.multidex.bean.TestBean7.HardDiskInfo other) {
        if (other == com.hanschen.multidex.bean.TestBean7.HardDiskInfo.getDefaultInstance()) return this;
        if (other.hasState()) {
          setState(other.getState());
        }
        if (other.hasFreeSize()) {
          setFreeSize(other.getFreeSize());
        }
        if (other.hasTotalSize()) {
          setTotalSize(other.getTotalSize());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasState()) {
          return false;
        }
        if (!hasFreeSize()) {
          return false;
        }
        if (!hasTotalSize()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        com.hanschen.multidex.bean.TestBean7.HardDiskInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hanschen.multidex.bean.TestBean7.HardDiskInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int state_ = 0;
      /**
       * <code>required .com.hanschen.multidex.bean.HardDiskState state = 1;</code>
       */
      public boolean hasState() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .com.hanschen.multidex.bean.HardDiskState state = 1;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.HardDiskState getState() {
        com.hanschen.multidex.bean.TestBean7.HardDiskState result = com.hanschen.multidex.bean.TestBean7.HardDiskState.valueOf(state_);
        return result == null ? com.hanschen.multidex.bean.TestBean7.HardDiskState.NO_HARD_DISK : result;
      }
      /**
       * <code>required .com.hanschen.multidex.bean.HardDiskState state = 1;</code>
       */
      public Builder setState(com.hanschen.multidex.bean.TestBean7.HardDiskState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        state_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .com.hanschen.multidex.bean.HardDiskState state = 1;</code>
       */
      public Builder clearState() {
        bitField0_ = (bitField0_ & ~0x00000001);
        state_ = 0;
        onChanged();
        return this;
      }

      private long freeSize_ ;
      /**
       * <code>required int64 free_size = 2;</code>
       */
      public boolean hasFreeSize() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 free_size = 2;</code>
       */
      public long getFreeSize() {
        return freeSize_;
      }
      /**
       * <code>required int64 free_size = 2;</code>
       */
      public Builder setFreeSize(long value) {
        bitField0_ |= 0x00000002;
        freeSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 free_size = 2;</code>
       */
      public Builder clearFreeSize() {
        bitField0_ = (bitField0_ & ~0x00000002);
        freeSize_ = 0L;
        onChanged();
        return this;
      }

      private long totalSize_ ;
      /**
       * <code>required int64 total_size = 3;</code>
       */
      public boolean hasTotalSize() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int64 total_size = 3;</code>
       */
      public long getTotalSize() {
        return totalSize_;
      }
      /**
       * <code>required int64 total_size = 3;</code>
       */
      public Builder setTotalSize(long value) {
        bitField0_ |= 0x00000004;
        totalSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 total_size = 3;</code>
       */
      public Builder clearTotalSize() {
        bitField0_ = (bitField0_ & ~0x00000004);
        totalSize_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.hanschen.multidex.bean.HardDiskInfo)
    }

    // @@protoc_insertion_point(class_scope:com.hanschen.multidex.bean.HardDiskInfo)
    private static final com.hanschen.multidex.bean.TestBean7.HardDiskInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.hanschen.multidex.bean.TestBean7.HardDiskInfo();
    }

    public static com.hanschen.multidex.bean.TestBean7.HardDiskInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<HardDiskInfo>
            PARSER = new com.google.protobuf.AbstractParser<HardDiskInfo>() {
      public HardDiskInfo parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return new HardDiskInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<HardDiskInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<HardDiskInfo> getParserForType() {
      return PARSER;
    }

    public com.hanschen.multidex.bean.TestBean7.HardDiskInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StaticIpSettingOrBuilder extends
          // @@protoc_insertion_point(interface_extends:com.hanschen.multidex.bean.StaticIpSetting)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string ip = 1;</code>
     */
    boolean hasIp();
    /**
     * <code>required string ip = 1;</code>
     */
    java.lang.String getIp();
    /**
     * <code>required string ip = 1;</code>
     */
    com.google.protobuf.ByteString
    getIpBytes();

    /**
     * <code>required string net_mask = 2;</code>
     */
    boolean hasNetMask();
    /**
     * <code>required string net_mask = 2;</code>
     */
    java.lang.String getNetMask();
    /**
     * <code>required string net_mask = 2;</code>
     */
    com.google.protobuf.ByteString
    getNetMaskBytes();

    /**
     * <code>required string gateway = 3;</code>
     */
    boolean hasGateway();
    /**
     * <code>required string gateway = 3;</code>
     */
    java.lang.String getGateway();
    /**
     * <code>required string gateway = 3;</code>
     */
    com.google.protobuf.ByteString
    getGatewayBytes();

    /**
     * <code>required string dns = 4;</code>
     */
    boolean hasDns();
    /**
     * <code>required string dns = 4;</code>
     */
    java.lang.String getDns();
    /**
     * <code>required string dns = 4;</code>
     */
    com.google.protobuf.ByteString
    getDnsBytes();
  }
  /**
   * Protobuf type {@code com.hanschen.multidex.bean.StaticIpSetting}
   */
  public  static final class StaticIpSetting extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:com.hanschen.multidex.bean.StaticIpSetting)
          StaticIpSettingOrBuilder {
    // Use StaticIpSetting.newBuilder() to construct.
    private StaticIpSetting(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StaticIpSetting() {
      ip_ = "";
      netMask_ = "";
      gateway_ = "";
      dns_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private StaticIpSetting(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                      extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              ip_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              netMask_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              gateway_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              dns_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_StaticIpSetting_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_StaticIpSetting_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      com.hanschen.multidex.bean.TestBean7.StaticIpSetting.class, com.hanschen.multidex.bean.TestBean7.StaticIpSetting.Builder.class);
    }

    private int bitField0_;
    public static final int IP_FIELD_NUMBER = 1;
    private volatile java.lang.Object ip_;
    /**
     * <code>required string ip = 1;</code>
     */
    public boolean hasIp() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string ip = 1;</code>
     */
    public java.lang.String getIp() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ip_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string ip = 1;</code>
     */
    public com.google.protobuf.ByteString
    getIpBytes() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        ip_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NET_MASK_FIELD_NUMBER = 2;
    private volatile java.lang.Object netMask_;
    /**
     * <code>required string net_mask = 2;</code>
     */
    public boolean hasNetMask() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string net_mask = 2;</code>
     */
    public java.lang.String getNetMask() {
      java.lang.Object ref = netMask_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          netMask_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string net_mask = 2;</code>
     */
    public com.google.protobuf.ByteString
    getNetMaskBytes() {
      java.lang.Object ref = netMask_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        netMask_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int GATEWAY_FIELD_NUMBER = 3;
    private volatile java.lang.Object gateway_;
    /**
     * <code>required string gateway = 3;</code>
     */
    public boolean hasGateway() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string gateway = 3;</code>
     */
    public java.lang.String getGateway() {
      java.lang.Object ref = gateway_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          gateway_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string gateway = 3;</code>
     */
    public com.google.protobuf.ByteString
    getGatewayBytes() {
      java.lang.Object ref = gateway_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        gateway_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DNS_FIELD_NUMBER = 4;
    private volatile java.lang.Object dns_;
    /**
     * <code>required string dns = 4;</code>
     */
    public boolean hasDns() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required string dns = 4;</code>
     */
    public java.lang.String getDns() {
      java.lang.Object ref = dns_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          dns_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string dns = 4;</code>
     */
    public com.google.protobuf.ByteString
    getDnsBytes() {
      java.lang.Object ref = dns_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        dns_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasIp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNetMask()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasGateway()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDns()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, ip_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, netMask_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, gateway_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, dns_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, ip_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, netMask_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, gateway_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, dns_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.hanschen.multidex.bean.TestBean7.StaticIpSetting)) {
        return super.equals(obj);
      }
      com.hanschen.multidex.bean.TestBean7.StaticIpSetting other = (com.hanschen.multidex.bean.TestBean7.StaticIpSetting) obj;

      boolean result = true;
      result = result && (hasIp() == other.hasIp());
      if (hasIp()) {
        result = result && getIp()
                .equals(other.getIp());
      }
      result = result && (hasNetMask() == other.hasNetMask());
      if (hasNetMask()) {
        result = result && getNetMask()
                .equals(other.getNetMask());
      }
      result = result && (hasGateway() == other.hasGateway());
      if (hasGateway()) {
        result = result && getGateway()
                .equals(other.getGateway());
      }
      result = result && (hasDns() == other.hasDns());
      if (hasDns()) {
        result = result && getDns()
                .equals(other.getDns());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasIp()) {
        hash = (37 * hash) + IP_FIELD_NUMBER;
        hash = (53 * hash) + getIp().hashCode();
      }
      if (hasNetMask()) {
        hash = (37 * hash) + NET_MASK_FIELD_NUMBER;
        hash = (53 * hash) + getNetMask().hashCode();
      }
      if (hasGateway()) {
        hash = (37 * hash) + GATEWAY_FIELD_NUMBER;
        hash = (53 * hash) + getGateway().hashCode();
      }
      if (hasDns()) {
        hash = (37 * hash) + DNS_FIELD_NUMBER;
        hash = (53 * hash) + getDns().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.hanschen.multidex.bean.TestBean7.StaticIpSetting parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hanschen.multidex.bean.TestBean7.StaticIpSetting parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.StaticIpSetting parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hanschen.multidex.bean.TestBean7.StaticIpSetting parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.StaticIpSetting parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.StaticIpSetting parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.StaticIpSetting parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.StaticIpSetting parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.StaticIpSetting parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.StaticIpSetting parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.hanschen.multidex.bean.TestBean7.StaticIpSetting prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.hanschen.multidex.bean.StaticIpSetting}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:com.hanschen.multidex.bean.StaticIpSetting)
            com.hanschen.multidex.bean.TestBean7.StaticIpSettingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_StaticIpSetting_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_StaticIpSetting_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        com.hanschen.multidex.bean.TestBean7.StaticIpSetting.class, com.hanschen.multidex.bean.TestBean7.StaticIpSetting.Builder.class);
      }

      // Construct using com.hanschen.multidex.bean.TestBean7.StaticIpSetting.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        ip_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        netMask_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        gateway_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        dns_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_StaticIpSetting_descriptor;
      }

      public com.hanschen.multidex.bean.TestBean7.StaticIpSetting getDefaultInstanceForType() {
        return com.hanschen.multidex.bean.TestBean7.StaticIpSetting.getDefaultInstance();
      }

      public com.hanschen.multidex.bean.TestBean7.StaticIpSetting build() {
        com.hanschen.multidex.bean.TestBean7.StaticIpSetting result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hanschen.multidex.bean.TestBean7.StaticIpSetting buildPartial() {
        com.hanschen.multidex.bean.TestBean7.StaticIpSetting result = new com.hanschen.multidex.bean.TestBean7.StaticIpSetting(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ip_ = ip_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.netMask_ = netMask_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.gateway_ = gateway_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.dns_ = dns_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hanschen.multidex.bean.TestBean7.StaticIpSetting) {
          return mergeFrom((com.hanschen.multidex.bean.TestBean7.StaticIpSetting)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hanschen.multidex.bean.TestBean7.StaticIpSetting other) {
        if (other == com.hanschen.multidex.bean.TestBean7.StaticIpSetting.getDefaultInstance()) return this;
        if (other.hasIp()) {
          bitField0_ |= 0x00000001;
          ip_ = other.ip_;
          onChanged();
        }
        if (other.hasNetMask()) {
          bitField0_ |= 0x00000002;
          netMask_ = other.netMask_;
          onChanged();
        }
        if (other.hasGateway()) {
          bitField0_ |= 0x00000004;
          gateway_ = other.gateway_;
          onChanged();
        }
        if (other.hasDns()) {
          bitField0_ |= 0x00000008;
          dns_ = other.dns_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasIp()) {
          return false;
        }
        if (!hasNetMask()) {
          return false;
        }
        if (!hasGateway()) {
          return false;
        }
        if (!hasDns()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        com.hanschen.multidex.bean.TestBean7.StaticIpSetting parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hanschen.multidex.bean.TestBean7.StaticIpSetting) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object ip_ = "";
      /**
       * <code>required string ip = 1;</code>
       */
      public boolean hasIp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string ip = 1;</code>
       */
      public java.lang.String getIp() {
        java.lang.Object ref = ip_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            ip_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string ip = 1;</code>
       */
      public com.google.protobuf.ByteString
      getIpBytes() {
        java.lang.Object ref = ip_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          ip_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string ip = 1;</code>
       */
      public Builder setIp(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        ip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string ip = 1;</code>
       */
      public Builder clearIp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ip_ = getDefaultInstance().getIp();
        onChanged();
        return this;
      }
      /**
       * <code>required string ip = 1;</code>
       */
      public Builder setIpBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        ip_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object netMask_ = "";
      /**
       * <code>required string net_mask = 2;</code>
       */
      public boolean hasNetMask() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string net_mask = 2;</code>
       */
      public java.lang.String getNetMask() {
        java.lang.Object ref = netMask_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            netMask_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string net_mask = 2;</code>
       */
      public com.google.protobuf.ByteString
      getNetMaskBytes() {
        java.lang.Object ref = netMask_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          netMask_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string net_mask = 2;</code>
       */
      public Builder setNetMask(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        netMask_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string net_mask = 2;</code>
       */
      public Builder clearNetMask() {
        bitField0_ = (bitField0_ & ~0x00000002);
        netMask_ = getDefaultInstance().getNetMask();
        onChanged();
        return this;
      }
      /**
       * <code>required string net_mask = 2;</code>
       */
      public Builder setNetMaskBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        netMask_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object gateway_ = "";
      /**
       * <code>required string gateway = 3;</code>
       */
      public boolean hasGateway() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string gateway = 3;</code>
       */
      public java.lang.String getGateway() {
        java.lang.Object ref = gateway_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            gateway_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string gateway = 3;</code>
       */
      public com.google.protobuf.ByteString
      getGatewayBytes() {
        java.lang.Object ref = gateway_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          gateway_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string gateway = 3;</code>
       */
      public Builder setGateway(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        gateway_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string gateway = 3;</code>
       */
      public Builder clearGateway() {
        bitField0_ = (bitField0_ & ~0x00000004);
        gateway_ = getDefaultInstance().getGateway();
        onChanged();
        return this;
      }
      /**
       * <code>required string gateway = 3;</code>
       */
      public Builder setGatewayBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        gateway_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object dns_ = "";
      /**
       * <code>required string dns = 4;</code>
       */
      public boolean hasDns() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required string dns = 4;</code>
       */
      public java.lang.String getDns() {
        java.lang.Object ref = dns_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            dns_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string dns = 4;</code>
       */
      public com.google.protobuf.ByteString
      getDnsBytes() {
        java.lang.Object ref = dns_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          dns_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string dns = 4;</code>
       */
      public Builder setDns(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        dns_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string dns = 4;</code>
       */
      public Builder clearDns() {
        bitField0_ = (bitField0_ & ~0x00000008);
        dns_ = getDefaultInstance().getDns();
        onChanged();
        return this;
      }
      /**
       * <code>required string dns = 4;</code>
       */
      public Builder setDnsBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        dns_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.hanschen.multidex.bean.StaticIpSetting)
    }

    // @@protoc_insertion_point(class_scope:com.hanschen.multidex.bean.StaticIpSetting)
    private static final com.hanschen.multidex.bean.TestBean7.StaticIpSetting DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.hanschen.multidex.bean.TestBean7.StaticIpSetting();
    }

    public static com.hanschen.multidex.bean.TestBean7.StaticIpSetting getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<StaticIpSetting>
            PARSER = new com.google.protobuf.AbstractParser<StaticIpSetting>() {
      public StaticIpSetting parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return new StaticIpSetting(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<StaticIpSetting> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StaticIpSetting> getParserForType() {
      return PARSER;
    }

    public com.hanschen.multidex.bean.TestBean7.StaticIpSetting getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PppoeSettingOrBuilder extends
          // @@protoc_insertion_point(interface_extends:com.hanschen.multidex.bean.PppoeSetting)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string pppoe_name = 1;</code>
     */
    boolean hasPppoeName();
    /**
     * <code>required string pppoe_name = 1;</code>
     */
    java.lang.String getPppoeName();
    /**
     * <code>required string pppoe_name = 1;</code>
     */
    com.google.protobuf.ByteString
    getPppoeNameBytes();

    /**
     * <code>required string pppoe_pwd = 2;</code>
     */
    boolean hasPppoePwd();
    /**
     * <code>required string pppoe_pwd = 2;</code>
     */
    java.lang.String getPppoePwd();
    /**
     * <code>required string pppoe_pwd = 2;</code>
     */
    com.google.protobuf.ByteString
    getPppoePwdBytes();
  }
  /**
   * Protobuf type {@code com.hanschen.multidex.bean.PppoeSetting}
   */
  public  static final class PppoeSetting extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:com.hanschen.multidex.bean.PppoeSetting)
          PppoeSettingOrBuilder {
    // Use PppoeSetting.newBuilder() to construct.
    private PppoeSetting(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PppoeSetting() {
      pppoeName_ = "";
      pppoePwd_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PppoeSetting(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                      extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              pppoeName_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              pppoePwd_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_PppoeSetting_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_PppoeSetting_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      com.hanschen.multidex.bean.TestBean7.PppoeSetting.class, com.hanschen.multidex.bean.TestBean7.PppoeSetting.Builder.class);
    }

    private int bitField0_;
    public static final int PPPOE_NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object pppoeName_;
    /**
     * <code>required string pppoe_name = 1;</code>
     */
    public boolean hasPppoeName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string pppoe_name = 1;</code>
     */
    public java.lang.String getPppoeName() {
      java.lang.Object ref = pppoeName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          pppoeName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string pppoe_name = 1;</code>
     */
    public com.google.protobuf.ByteString
    getPppoeNameBytes() {
      java.lang.Object ref = pppoeName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        pppoeName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PPPOE_PWD_FIELD_NUMBER = 2;
    private volatile java.lang.Object pppoePwd_;
    /**
     * <code>required string pppoe_pwd = 2;</code>
     */
    public boolean hasPppoePwd() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string pppoe_pwd = 2;</code>
     */
    public java.lang.String getPppoePwd() {
      java.lang.Object ref = pppoePwd_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          pppoePwd_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string pppoe_pwd = 2;</code>
     */
    public com.google.protobuf.ByteString
    getPppoePwdBytes() {
      java.lang.Object ref = pppoePwd_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        pppoePwd_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasPppoeName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPppoePwd()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, pppoeName_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, pppoePwd_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, pppoeName_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, pppoePwd_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.hanschen.multidex.bean.TestBean7.PppoeSetting)) {
        return super.equals(obj);
      }
      com.hanschen.multidex.bean.TestBean7.PppoeSetting other = (com.hanschen.multidex.bean.TestBean7.PppoeSetting) obj;

      boolean result = true;
      result = result && (hasPppoeName() == other.hasPppoeName());
      if (hasPppoeName()) {
        result = result && getPppoeName()
                .equals(other.getPppoeName());
      }
      result = result && (hasPppoePwd() == other.hasPppoePwd());
      if (hasPppoePwd()) {
        result = result && getPppoePwd()
                .equals(other.getPppoePwd());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasPppoeName()) {
        hash = (37 * hash) + PPPOE_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getPppoeName().hashCode();
      }
      if (hasPppoePwd()) {
        hash = (37 * hash) + PPPOE_PWD_FIELD_NUMBER;
        hash = (53 * hash) + getPppoePwd().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.hanschen.multidex.bean.TestBean7.PppoeSetting parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hanschen.multidex.bean.TestBean7.PppoeSetting parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.PppoeSetting parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hanschen.multidex.bean.TestBean7.PppoeSetting parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.PppoeSetting parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.PppoeSetting parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.PppoeSetting parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.PppoeSetting parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.PppoeSetting parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.PppoeSetting parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.hanschen.multidex.bean.TestBean7.PppoeSetting prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.hanschen.multidex.bean.PppoeSetting}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:com.hanschen.multidex.bean.PppoeSetting)
            com.hanschen.multidex.bean.TestBean7.PppoeSettingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_PppoeSetting_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_PppoeSetting_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        com.hanschen.multidex.bean.TestBean7.PppoeSetting.class, com.hanschen.multidex.bean.TestBean7.PppoeSetting.Builder.class);
      }

      // Construct using com.hanschen.multidex.bean.TestBean7.PppoeSetting.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        pppoeName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        pppoePwd_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_PppoeSetting_descriptor;
      }

      public com.hanschen.multidex.bean.TestBean7.PppoeSetting getDefaultInstanceForType() {
        return com.hanschen.multidex.bean.TestBean7.PppoeSetting.getDefaultInstance();
      }

      public com.hanschen.multidex.bean.TestBean7.PppoeSetting build() {
        com.hanschen.multidex.bean.TestBean7.PppoeSetting result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hanschen.multidex.bean.TestBean7.PppoeSetting buildPartial() {
        com.hanschen.multidex.bean.TestBean7.PppoeSetting result = new com.hanschen.multidex.bean.TestBean7.PppoeSetting(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.pppoeName_ = pppoeName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.pppoePwd_ = pppoePwd_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hanschen.multidex.bean.TestBean7.PppoeSetting) {
          return mergeFrom((com.hanschen.multidex.bean.TestBean7.PppoeSetting)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hanschen.multidex.bean.TestBean7.PppoeSetting other) {
        if (other == com.hanschen.multidex.bean.TestBean7.PppoeSetting.getDefaultInstance()) return this;
        if (other.hasPppoeName()) {
          bitField0_ |= 0x00000001;
          pppoeName_ = other.pppoeName_;
          onChanged();
        }
        if (other.hasPppoePwd()) {
          bitField0_ |= 0x00000002;
          pppoePwd_ = other.pppoePwd_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPppoeName()) {
          return false;
        }
        if (!hasPppoePwd()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        com.hanschen.multidex.bean.TestBean7.PppoeSetting parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hanschen.multidex.bean.TestBean7.PppoeSetting) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object pppoeName_ = "";
      /**
       * <code>required string pppoe_name = 1;</code>
       */
      public boolean hasPppoeName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string pppoe_name = 1;</code>
       */
      public java.lang.String getPppoeName() {
        java.lang.Object ref = pppoeName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            pppoeName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string pppoe_name = 1;</code>
       */
      public com.google.protobuf.ByteString
      getPppoeNameBytes() {
        java.lang.Object ref = pppoeName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          pppoeName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string pppoe_name = 1;</code>
       */
      public Builder setPppoeName(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        pppoeName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string pppoe_name = 1;</code>
       */
      public Builder clearPppoeName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        pppoeName_ = getDefaultInstance().getPppoeName();
        onChanged();
        return this;
      }
      /**
       * <code>required string pppoe_name = 1;</code>
       */
      public Builder setPppoeNameBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        pppoeName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object pppoePwd_ = "";
      /**
       * <code>required string pppoe_pwd = 2;</code>
       */
      public boolean hasPppoePwd() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string pppoe_pwd = 2;</code>
       */
      public java.lang.String getPppoePwd() {
        java.lang.Object ref = pppoePwd_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            pppoePwd_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string pppoe_pwd = 2;</code>
       */
      public com.google.protobuf.ByteString
      getPppoePwdBytes() {
        java.lang.Object ref = pppoePwd_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          pppoePwd_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string pppoe_pwd = 2;</code>
       */
      public Builder setPppoePwd(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        pppoePwd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string pppoe_pwd = 2;</code>
       */
      public Builder clearPppoePwd() {
        bitField0_ = (bitField0_ & ~0x00000002);
        pppoePwd_ = getDefaultInstance().getPppoePwd();
        onChanged();
        return this;
      }
      /**
       * <code>required string pppoe_pwd = 2;</code>
       */
      public Builder setPppoePwdBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        pppoePwd_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.hanschen.multidex.bean.PppoeSetting)
    }

    // @@protoc_insertion_point(class_scope:com.hanschen.multidex.bean.PppoeSetting)
    private static final com.hanschen.multidex.bean.TestBean7.PppoeSetting DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.hanschen.multidex.bean.TestBean7.PppoeSetting();
    }

    public static com.hanschen.multidex.bean.TestBean7.PppoeSetting getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<PppoeSetting>
            PARSER = new com.google.protobuf.AbstractParser<PppoeSetting>() {
      public PppoeSetting parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return new PppoeSetting(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PppoeSetting> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PppoeSetting> getParserForType() {
      return PARSER;
    }

    public com.hanschen.multidex.bean.TestBean7.PppoeSetting getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface WanSettingOrBuilder extends
          // @@protoc_insertion_point(interface_extends:com.hanschen.multidex.bean.WanSetting)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .com.hanschen.multidex.bean.WanType wan_type = 1;</code>
     */
    boolean hasWanType();
    /**
     * <code>required .com.hanschen.multidex.bean.WanType wan_type = 1;</code>
     */
    com.hanschen.multidex.bean.TestBean7.WanType getWanType();

    /**
     * <code>required .com.hanschen.multidex.bean.StaticIpSetting static_ip_setting = 2;</code>
     */
    boolean hasStaticIpSetting();
    /**
     * <code>required .com.hanschen.multidex.bean.StaticIpSetting static_ip_setting = 2;</code>
     */
    com.hanschen.multidex.bean.TestBean7.StaticIpSetting getStaticIpSetting();
    /**
     * <code>required .com.hanschen.multidex.bean.StaticIpSetting static_ip_setting = 2;</code>
     */
    com.hanschen.multidex.bean.TestBean7.StaticIpSettingOrBuilder getStaticIpSettingOrBuilder();

    /**
     * <code>required .com.hanschen.multidex.bean.PppoeSetting pppoe_setting = 3;</code>
     */
    boolean hasPppoeSetting();
    /**
     * <code>required .com.hanschen.multidex.bean.PppoeSetting pppoe_setting = 3;</code>
     */
    com.hanschen.multidex.bean.TestBean7.PppoeSetting getPppoeSetting();
    /**
     * <code>required .com.hanschen.multidex.bean.PppoeSetting pppoe_setting = 3;</code>
     */
    com.hanschen.multidex.bean.TestBean7.PppoeSettingOrBuilder getPppoeSettingOrBuilder();
  }
  /**
   * Protobuf type {@code com.hanschen.multidex.bean.WanSetting}
   */
  public  static final class WanSetting extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:com.hanschen.multidex.bean.WanSetting)
          WanSettingOrBuilder {
    // Use WanSetting.newBuilder() to construct.
    private WanSetting(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private WanSetting() {
      wanType_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private WanSetting(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                      extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.hanschen.multidex.bean.TestBean7.WanType value = com.hanschen.multidex.bean.TestBean7.WanType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                wanType_ = rawValue;
              }
              break;
            }
            case 18: {
              com.hanschen.multidex.bean.TestBean7.StaticIpSetting.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = staticIpSetting_.toBuilder();
              }
              staticIpSetting_ = input.readMessage(com.hanschen.multidex.bean.TestBean7.StaticIpSetting.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(staticIpSetting_);
                staticIpSetting_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              com.hanschen.multidex.bean.TestBean7.PppoeSetting.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = pppoeSetting_.toBuilder();
              }
              pppoeSetting_ = input.readMessage(com.hanschen.multidex.bean.TestBean7.PppoeSetting.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(pppoeSetting_);
                pppoeSetting_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_WanSetting_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_WanSetting_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      com.hanschen.multidex.bean.TestBean7.WanSetting.class, com.hanschen.multidex.bean.TestBean7.WanSetting.Builder.class);
    }

    private int bitField0_;
    public static final int WAN_TYPE_FIELD_NUMBER = 1;
    private int wanType_;
    /**
     * <code>required .com.hanschen.multidex.bean.WanType wan_type = 1;</code>
     */
    public boolean hasWanType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .com.hanschen.multidex.bean.WanType wan_type = 1;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.WanType getWanType() {
      com.hanschen.multidex.bean.TestBean7.WanType result = com.hanschen.multidex.bean.TestBean7.WanType.valueOf(wanType_);
      return result == null ? com.hanschen.multidex.bean.TestBean7.WanType.DHCP : result;
    }

    public static final int STATIC_IP_SETTING_FIELD_NUMBER = 2;
    private com.hanschen.multidex.bean.TestBean7.StaticIpSetting staticIpSetting_;
    /**
     * <code>required .com.hanschen.multidex.bean.StaticIpSetting static_ip_setting = 2;</code>
     */
    public boolean hasStaticIpSetting() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .com.hanschen.multidex.bean.StaticIpSetting static_ip_setting = 2;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.StaticIpSetting getStaticIpSetting() {
      return staticIpSetting_ == null ? com.hanschen.multidex.bean.TestBean7.StaticIpSetting.getDefaultInstance() : staticIpSetting_;
    }
    /**
     * <code>required .com.hanschen.multidex.bean.StaticIpSetting static_ip_setting = 2;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.StaticIpSettingOrBuilder getStaticIpSettingOrBuilder() {
      return staticIpSetting_ == null ? com.hanschen.multidex.bean.TestBean7.StaticIpSetting.getDefaultInstance() : staticIpSetting_;
    }

    public static final int PPPOE_SETTING_FIELD_NUMBER = 3;
    private com.hanschen.multidex.bean.TestBean7.PppoeSetting pppoeSetting_;
    /**
     * <code>required .com.hanschen.multidex.bean.PppoeSetting pppoe_setting = 3;</code>
     */
    public boolean hasPppoeSetting() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .com.hanschen.multidex.bean.PppoeSetting pppoe_setting = 3;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.PppoeSetting getPppoeSetting() {
      return pppoeSetting_ == null ? com.hanschen.multidex.bean.TestBean7.PppoeSetting.getDefaultInstance() : pppoeSetting_;
    }
    /**
     * <code>required .com.hanschen.multidex.bean.PppoeSetting pppoe_setting = 3;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.PppoeSettingOrBuilder getPppoeSettingOrBuilder() {
      return pppoeSetting_ == null ? com.hanschen.multidex.bean.TestBean7.PppoeSetting.getDefaultInstance() : pppoeSetting_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasWanType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStaticIpSetting()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPppoeSetting()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getStaticIpSetting().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getPppoeSetting().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, wanType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getStaticIpSetting());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, getPppoeSetting());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
                .computeEnumSize(1, wanType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(2, getStaticIpSetting());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(3, getPppoeSetting());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.hanschen.multidex.bean.TestBean7.WanSetting)) {
        return super.equals(obj);
      }
      com.hanschen.multidex.bean.TestBean7.WanSetting other = (com.hanschen.multidex.bean.TestBean7.WanSetting) obj;

      boolean result = true;
      result = result && (hasWanType() == other.hasWanType());
      if (hasWanType()) {
        result = result && wanType_ == other.wanType_;
      }
      result = result && (hasStaticIpSetting() == other.hasStaticIpSetting());
      if (hasStaticIpSetting()) {
        result = result && getStaticIpSetting()
                .equals(other.getStaticIpSetting());
      }
      result = result && (hasPppoeSetting() == other.hasPppoeSetting());
      if (hasPppoeSetting()) {
        result = result && getPppoeSetting()
                .equals(other.getPppoeSetting());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasWanType()) {
        hash = (37 * hash) + WAN_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + wanType_;
      }
      if (hasStaticIpSetting()) {
        hash = (37 * hash) + STATIC_IP_SETTING_FIELD_NUMBER;
        hash = (53 * hash) + getStaticIpSetting().hashCode();
      }
      if (hasPppoeSetting()) {
        hash = (37 * hash) + PPPOE_SETTING_FIELD_NUMBER;
        hash = (53 * hash) + getPppoeSetting().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.hanschen.multidex.bean.TestBean7.WanSetting parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hanschen.multidex.bean.TestBean7.WanSetting parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.WanSetting parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hanschen.multidex.bean.TestBean7.WanSetting parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.WanSetting parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.WanSetting parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.WanSetting parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.WanSetting parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.WanSetting parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.WanSetting parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.hanschen.multidex.bean.TestBean7.WanSetting prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.hanschen.multidex.bean.WanSetting}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:com.hanschen.multidex.bean.WanSetting)
            com.hanschen.multidex.bean.TestBean7.WanSettingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_WanSetting_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_WanSetting_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        com.hanschen.multidex.bean.TestBean7.WanSetting.class, com.hanschen.multidex.bean.TestBean7.WanSetting.Builder.class);
      }

      // Construct using com.hanschen.multidex.bean.TestBean7.WanSetting.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getStaticIpSettingFieldBuilder();
          getPppoeSettingFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        wanType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (staticIpSettingBuilder_ == null) {
          staticIpSetting_ = null;
        } else {
          staticIpSettingBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (pppoeSettingBuilder_ == null) {
          pppoeSetting_ = null;
        } else {
          pppoeSettingBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_WanSetting_descriptor;
      }

      public com.hanschen.multidex.bean.TestBean7.WanSetting getDefaultInstanceForType() {
        return com.hanschen.multidex.bean.TestBean7.WanSetting.getDefaultInstance();
      }

      public com.hanschen.multidex.bean.TestBean7.WanSetting build() {
        com.hanschen.multidex.bean.TestBean7.WanSetting result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hanschen.multidex.bean.TestBean7.WanSetting buildPartial() {
        com.hanschen.multidex.bean.TestBean7.WanSetting result = new com.hanschen.multidex.bean.TestBean7.WanSetting(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.wanType_ = wanType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (staticIpSettingBuilder_ == null) {
          result.staticIpSetting_ = staticIpSetting_;
        } else {
          result.staticIpSetting_ = staticIpSettingBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (pppoeSettingBuilder_ == null) {
          result.pppoeSetting_ = pppoeSetting_;
        } else {
          result.pppoeSetting_ = pppoeSettingBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hanschen.multidex.bean.TestBean7.WanSetting) {
          return mergeFrom((com.hanschen.multidex.bean.TestBean7.WanSetting)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hanschen.multidex.bean.TestBean7.WanSetting other) {
        if (other == com.hanschen.multidex.bean.TestBean7.WanSetting.getDefaultInstance()) return this;
        if (other.hasWanType()) {
          setWanType(other.getWanType());
        }
        if (other.hasStaticIpSetting()) {
          mergeStaticIpSetting(other.getStaticIpSetting());
        }
        if (other.hasPppoeSetting()) {
          mergePppoeSetting(other.getPppoeSetting());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasWanType()) {
          return false;
        }
        if (!hasStaticIpSetting()) {
          return false;
        }
        if (!hasPppoeSetting()) {
          return false;
        }
        if (!getStaticIpSetting().isInitialized()) {
          return false;
        }
        if (!getPppoeSetting().isInitialized()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        com.hanschen.multidex.bean.TestBean7.WanSetting parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hanschen.multidex.bean.TestBean7.WanSetting) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int wanType_ = 0;
      /**
       * <code>required .com.hanschen.multidex.bean.WanType wan_type = 1;</code>
       */
      public boolean hasWanType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .com.hanschen.multidex.bean.WanType wan_type = 1;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.WanType getWanType() {
        com.hanschen.multidex.bean.TestBean7.WanType result = com.hanschen.multidex.bean.TestBean7.WanType.valueOf(wanType_);
        return result == null ? com.hanschen.multidex.bean.TestBean7.WanType.DHCP : result;
      }
      /**
       * <code>required .com.hanschen.multidex.bean.WanType wan_type = 1;</code>
       */
      public Builder setWanType(com.hanschen.multidex.bean.TestBean7.WanType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        wanType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .com.hanschen.multidex.bean.WanType wan_type = 1;</code>
       */
      public Builder clearWanType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        wanType_ = 0;
        onChanged();
        return this;
      }

      private com.hanschen.multidex.bean.TestBean7.StaticIpSetting staticIpSetting_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.StaticIpSetting, com.hanschen.multidex.bean.TestBean7.StaticIpSetting.Builder, com.hanschen.multidex.bean.TestBean7.StaticIpSettingOrBuilder> staticIpSettingBuilder_;
      /**
       * <code>required .com.hanschen.multidex.bean.StaticIpSetting static_ip_setting = 2;</code>
       */
      public boolean hasStaticIpSetting() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .com.hanschen.multidex.bean.StaticIpSetting static_ip_setting = 2;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.StaticIpSetting getStaticIpSetting() {
        if (staticIpSettingBuilder_ == null) {
          return staticIpSetting_ == null ? com.hanschen.multidex.bean.TestBean7.StaticIpSetting.getDefaultInstance() : staticIpSetting_;
        } else {
          return staticIpSettingBuilder_.getMessage();
        }
      }
      /**
       * <code>required .com.hanschen.multidex.bean.StaticIpSetting static_ip_setting = 2;</code>
       */
      public Builder setStaticIpSetting(com.hanschen.multidex.bean.TestBean7.StaticIpSetting value) {
        if (staticIpSettingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          staticIpSetting_ = value;
          onChanged();
        } else {
          staticIpSettingBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .com.hanschen.multidex.bean.StaticIpSetting static_ip_setting = 2;</code>
       */
      public Builder setStaticIpSetting(
              com.hanschen.multidex.bean.TestBean7.StaticIpSetting.Builder builderForValue) {
        if (staticIpSettingBuilder_ == null) {
          staticIpSetting_ = builderForValue.build();
          onChanged();
        } else {
          staticIpSettingBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .com.hanschen.multidex.bean.StaticIpSetting static_ip_setting = 2;</code>
       */
      public Builder mergeStaticIpSetting(com.hanschen.multidex.bean.TestBean7.StaticIpSetting value) {
        if (staticIpSettingBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
                  staticIpSetting_ != null &&
                  staticIpSetting_ != com.hanschen.multidex.bean.TestBean7.StaticIpSetting.getDefaultInstance()) {
            staticIpSetting_ =
                    com.hanschen.multidex.bean.TestBean7.StaticIpSetting.newBuilder(staticIpSetting_).mergeFrom(value).buildPartial();
          } else {
            staticIpSetting_ = value;
          }
          onChanged();
        } else {
          staticIpSettingBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .com.hanschen.multidex.bean.StaticIpSetting static_ip_setting = 2;</code>
       */
      public Builder clearStaticIpSetting() {
        if (staticIpSettingBuilder_ == null) {
          staticIpSetting_ = null;
          onChanged();
        } else {
          staticIpSettingBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .com.hanschen.multidex.bean.StaticIpSetting static_ip_setting = 2;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.StaticIpSetting.Builder getStaticIpSettingBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getStaticIpSettingFieldBuilder().getBuilder();
      }
      /**
       * <code>required .com.hanschen.multidex.bean.StaticIpSetting static_ip_setting = 2;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.StaticIpSettingOrBuilder getStaticIpSettingOrBuilder() {
        if (staticIpSettingBuilder_ != null) {
          return staticIpSettingBuilder_.getMessageOrBuilder();
        } else {
          return staticIpSetting_ == null ?
                  com.hanschen.multidex.bean.TestBean7.StaticIpSetting.getDefaultInstance() : staticIpSetting_;
        }
      }
      /**
       * <code>required .com.hanschen.multidex.bean.StaticIpSetting static_ip_setting = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.StaticIpSetting, com.hanschen.multidex.bean.TestBean7.StaticIpSetting.Builder, com.hanschen.multidex.bean.TestBean7.StaticIpSettingOrBuilder>
      getStaticIpSettingFieldBuilder() {
        if (staticIpSettingBuilder_ == null) {
          staticIpSettingBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.hanschen.multidex.bean.TestBean7.StaticIpSetting, com.hanschen.multidex.bean.TestBean7.StaticIpSetting.Builder, com.hanschen.multidex.bean.TestBean7.StaticIpSettingOrBuilder>(
                  getStaticIpSetting(),
                  getParentForChildren(),
                  isClean());
          staticIpSetting_ = null;
        }
        return staticIpSettingBuilder_;
      }

      private com.hanschen.multidex.bean.TestBean7.PppoeSetting pppoeSetting_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.PppoeSetting, com.hanschen.multidex.bean.TestBean7.PppoeSetting.Builder, com.hanschen.multidex.bean.TestBean7.PppoeSettingOrBuilder> pppoeSettingBuilder_;
      /**
       * <code>required .com.hanschen.multidex.bean.PppoeSetting pppoe_setting = 3;</code>
       */
      public boolean hasPppoeSetting() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .com.hanschen.multidex.bean.PppoeSetting pppoe_setting = 3;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.PppoeSetting getPppoeSetting() {
        if (pppoeSettingBuilder_ == null) {
          return pppoeSetting_ == null ? com.hanschen.multidex.bean.TestBean7.PppoeSetting.getDefaultInstance() : pppoeSetting_;
        } else {
          return pppoeSettingBuilder_.getMessage();
        }
      }
      /**
       * <code>required .com.hanschen.multidex.bean.PppoeSetting pppoe_setting = 3;</code>
       */
      public Builder setPppoeSetting(com.hanschen.multidex.bean.TestBean7.PppoeSetting value) {
        if (pppoeSettingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          pppoeSetting_ = value;
          onChanged();
        } else {
          pppoeSettingBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .com.hanschen.multidex.bean.PppoeSetting pppoe_setting = 3;</code>
       */
      public Builder setPppoeSetting(
              com.hanschen.multidex.bean.TestBean7.PppoeSetting.Builder builderForValue) {
        if (pppoeSettingBuilder_ == null) {
          pppoeSetting_ = builderForValue.build();
          onChanged();
        } else {
          pppoeSettingBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .com.hanschen.multidex.bean.PppoeSetting pppoe_setting = 3;</code>
       */
      public Builder mergePppoeSetting(com.hanschen.multidex.bean.TestBean7.PppoeSetting value) {
        if (pppoeSettingBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
                  pppoeSetting_ != null &&
                  pppoeSetting_ != com.hanschen.multidex.bean.TestBean7.PppoeSetting.getDefaultInstance()) {
            pppoeSetting_ =
                    com.hanschen.multidex.bean.TestBean7.PppoeSetting.newBuilder(pppoeSetting_).mergeFrom(value).buildPartial();
          } else {
            pppoeSetting_ = value;
          }
          onChanged();
        } else {
          pppoeSettingBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .com.hanschen.multidex.bean.PppoeSetting pppoe_setting = 3;</code>
       */
      public Builder clearPppoeSetting() {
        if (pppoeSettingBuilder_ == null) {
          pppoeSetting_ = null;
          onChanged();
        } else {
          pppoeSettingBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>required .com.hanschen.multidex.bean.PppoeSetting pppoe_setting = 3;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.PppoeSetting.Builder getPppoeSettingBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getPppoeSettingFieldBuilder().getBuilder();
      }
      /**
       * <code>required .com.hanschen.multidex.bean.PppoeSetting pppoe_setting = 3;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.PppoeSettingOrBuilder getPppoeSettingOrBuilder() {
        if (pppoeSettingBuilder_ != null) {
          return pppoeSettingBuilder_.getMessageOrBuilder();
        } else {
          return pppoeSetting_ == null ?
                  com.hanschen.multidex.bean.TestBean7.PppoeSetting.getDefaultInstance() : pppoeSetting_;
        }
      }
      /**
       * <code>required .com.hanschen.multidex.bean.PppoeSetting pppoe_setting = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.PppoeSetting, com.hanschen.multidex.bean.TestBean7.PppoeSetting.Builder, com.hanschen.multidex.bean.TestBean7.PppoeSettingOrBuilder>
      getPppoeSettingFieldBuilder() {
        if (pppoeSettingBuilder_ == null) {
          pppoeSettingBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.hanschen.multidex.bean.TestBean7.PppoeSetting, com.hanschen.multidex.bean.TestBean7.PppoeSetting.Builder, com.hanschen.multidex.bean.TestBean7.PppoeSettingOrBuilder>(
                  getPppoeSetting(),
                  getParentForChildren(),
                  isClean());
          pppoeSetting_ = null;
        }
        return pppoeSettingBuilder_;
      }
      public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.hanschen.multidex.bean.WanSetting)
    }

    // @@protoc_insertion_point(class_scope:com.hanschen.multidex.bean.WanSetting)
    private static final com.hanschen.multidex.bean.TestBean7.WanSetting DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.hanschen.multidex.bean.TestBean7.WanSetting();
    }

    public static com.hanschen.multidex.bean.TestBean7.WanSetting getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<WanSetting>
            PARSER = new com.google.protobuf.AbstractParser<WanSetting>() {
      public WanSetting parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return new WanSetting(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<WanSetting> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<WanSetting> getParserForType() {
      return PARSER;
    }

    public com.hanschen.multidex.bean.TestBean7.WanSetting getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface WifiInfoOrBuilder extends
          // @@protoc_insertion_point(interface_extends:com.hanschen.multidex.bean.WifiInfo)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string ssid = 1;</code>
     */
    boolean hasSsid();
    /**
     * <code>required string ssid = 1;</code>
     */
    java.lang.String getSsid();
    /**
     * <code>required string ssid = 1;</code>
     */
    com.google.protobuf.ByteString
    getSsidBytes();

    /**
     * <code>required string password = 2;</code>
     */
    boolean hasPassword();
    /**
     * <code>required string password = 2;</code>
     */
    java.lang.String getPassword();
    /**
     * <code>required string password = 2;</code>
     */
    com.google.protobuf.ByteString
    getPasswordBytes();
  }
  /**
   * Protobuf type {@code com.hanschen.multidex.bean.WifiInfo}
   */
  public  static final class WifiInfo extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:com.hanschen.multidex.bean.WifiInfo)
          WifiInfoOrBuilder {
    // Use WifiInfo.newBuilder() to construct.
    private WifiInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private WifiInfo() {
      ssid_ = "";
      password_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private WifiInfo(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                      extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              ssid_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              password_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_WifiInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_WifiInfo_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      com.hanschen.multidex.bean.TestBean7.WifiInfo.class, com.hanschen.multidex.bean.TestBean7.WifiInfo.Builder.class);
    }

    private int bitField0_;
    public static final int SSID_FIELD_NUMBER = 1;
    private volatile java.lang.Object ssid_;
    /**
     * <code>required string ssid = 1;</code>
     */
    public boolean hasSsid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string ssid = 1;</code>
     */
    public java.lang.String getSsid() {
      java.lang.Object ref = ssid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ssid_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string ssid = 1;</code>
     */
    public com.google.protobuf.ByteString
    getSsidBytes() {
      java.lang.Object ref = ssid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        ssid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PASSWORD_FIELD_NUMBER = 2;
    private volatile java.lang.Object password_;
    /**
     * <code>required string password = 2;</code>
     */
    public boolean hasPassword() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string password = 2;</code>
     */
    public java.lang.String getPassword() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          password_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string password = 2;</code>
     */
    public com.google.protobuf.ByteString
    getPasswordBytes() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        password_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSsid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPassword()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, ssid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, password_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, ssid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, password_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.hanschen.multidex.bean.TestBean7.WifiInfo)) {
        return super.equals(obj);
      }
      com.hanschen.multidex.bean.TestBean7.WifiInfo other = (com.hanschen.multidex.bean.TestBean7.WifiInfo) obj;

      boolean result = true;
      result = result && (hasSsid() == other.hasSsid());
      if (hasSsid()) {
        result = result && getSsid()
                .equals(other.getSsid());
      }
      result = result && (hasPassword() == other.hasPassword());
      if (hasPassword()) {
        result = result && getPassword()
                .equals(other.getPassword());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasSsid()) {
        hash = (37 * hash) + SSID_FIELD_NUMBER;
        hash = (53 * hash) + getSsid().hashCode();
      }
      if (hasPassword()) {
        hash = (37 * hash) + PASSWORD_FIELD_NUMBER;
        hash = (53 * hash) + getPassword().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.hanschen.multidex.bean.TestBean7.WifiInfo parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hanschen.multidex.bean.TestBean7.WifiInfo parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.WifiInfo parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hanschen.multidex.bean.TestBean7.WifiInfo parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.WifiInfo parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.WifiInfo parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.WifiInfo parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.WifiInfo parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.WifiInfo parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.WifiInfo parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.hanschen.multidex.bean.TestBean7.WifiInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.hanschen.multidex.bean.WifiInfo}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:com.hanschen.multidex.bean.WifiInfo)
            com.hanschen.multidex.bean.TestBean7.WifiInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_WifiInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_WifiInfo_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        com.hanschen.multidex.bean.TestBean7.WifiInfo.class, com.hanschen.multidex.bean.TestBean7.WifiInfo.Builder.class);
      }

      // Construct using com.hanschen.multidex.bean.TestBean7.WifiInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        ssid_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        password_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_WifiInfo_descriptor;
      }

      public com.hanschen.multidex.bean.TestBean7.WifiInfo getDefaultInstanceForType() {
        return com.hanschen.multidex.bean.TestBean7.WifiInfo.getDefaultInstance();
      }

      public com.hanschen.multidex.bean.TestBean7.WifiInfo build() {
        com.hanschen.multidex.bean.TestBean7.WifiInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hanschen.multidex.bean.TestBean7.WifiInfo buildPartial() {
        com.hanschen.multidex.bean.TestBean7.WifiInfo result = new com.hanschen.multidex.bean.TestBean7.WifiInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ssid_ = ssid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.password_ = password_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hanschen.multidex.bean.TestBean7.WifiInfo) {
          return mergeFrom((com.hanschen.multidex.bean.TestBean7.WifiInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hanschen.multidex.bean.TestBean7.WifiInfo other) {
        if (other == com.hanschen.multidex.bean.TestBean7.WifiInfo.getDefaultInstance()) return this;
        if (other.hasSsid()) {
          bitField0_ |= 0x00000001;
          ssid_ = other.ssid_;
          onChanged();
        }
        if (other.hasPassword()) {
          bitField0_ |= 0x00000002;
          password_ = other.password_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSsid()) {
          return false;
        }
        if (!hasPassword()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        com.hanschen.multidex.bean.TestBean7.WifiInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hanschen.multidex.bean.TestBean7.WifiInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object ssid_ = "";
      /**
       * <code>required string ssid = 1;</code>
       */
      public boolean hasSsid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string ssid = 1;</code>
       */
      public java.lang.String getSsid() {
        java.lang.Object ref = ssid_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            ssid_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string ssid = 1;</code>
       */
      public com.google.protobuf.ByteString
      getSsidBytes() {
        java.lang.Object ref = ssid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          ssid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string ssid = 1;</code>
       */
      public Builder setSsid(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        ssid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string ssid = 1;</code>
       */
      public Builder clearSsid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ssid_ = getDefaultInstance().getSsid();
        onChanged();
        return this;
      }
      /**
       * <code>required string ssid = 1;</code>
       */
      public Builder setSsidBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        ssid_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object password_ = "";
      /**
       * <code>required string password = 2;</code>
       */
      public boolean hasPassword() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string password = 2;</code>
       */
      public java.lang.String getPassword() {
        java.lang.Object ref = password_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            password_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string password = 2;</code>
       */
      public com.google.protobuf.ByteString
      getPasswordBytes() {
        java.lang.Object ref = password_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          password_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string password = 2;</code>
       */
      public Builder setPassword(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        password_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string password = 2;</code>
       */
      public Builder clearPassword() {
        bitField0_ = (bitField0_ & ~0x00000002);
        password_ = getDefaultInstance().getPassword();
        onChanged();
        return this;
      }
      /**
       * <code>required string password = 2;</code>
       */
      public Builder setPasswordBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        password_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.hanschen.multidex.bean.WifiInfo)
    }

    // @@protoc_insertion_point(class_scope:com.hanschen.multidex.bean.WifiInfo)
    private static final com.hanschen.multidex.bean.TestBean7.WifiInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.hanschen.multidex.bean.TestBean7.WifiInfo();
    }

    public static com.hanschen.multidex.bean.TestBean7.WifiInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<WifiInfo>
            PARSER = new com.google.protobuf.AbstractParser<WifiInfo>() {
      public WifiInfo parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return new WifiInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<WifiInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<WifiInfo> getParserForType() {
      return PARSER;
    }

    public com.hanschen.multidex.bean.TestBean7.WifiInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface WifiSettingOrBuilder extends
          // @@protoc_insertion_point(interface_extends:com.hanschen.multidex.bean.WifiSetting)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .com.hanschen.multidex.bean.WifiInfo wifi_24g = 1;</code>
     */
    boolean hasWifi24G();
    /**
     * <code>required .com.hanschen.multidex.bean.WifiInfo wifi_24g = 1;</code>
     */
    com.hanschen.multidex.bean.TestBean7.WifiInfo getWifi24G();
    /**
     * <code>required .com.hanschen.multidex.bean.WifiInfo wifi_24g = 1;</code>
     */
    com.hanschen.multidex.bean.TestBean7.WifiInfoOrBuilder getWifi24GOrBuilder();

    /**
     * <code>required .com.hanschen.multidex.bean.WifiInfo wifi_58g = 2;</code>
     */
    boolean hasWifi58G();
    /**
     * <code>required .com.hanschen.multidex.bean.WifiInfo wifi_58g = 2;</code>
     */
    com.hanschen.multidex.bean.TestBean7.WifiInfo getWifi58G();
    /**
     * <code>required .com.hanschen.multidex.bean.WifiInfo wifi_58g = 2;</code>
     */
    com.hanschen.multidex.bean.TestBean7.WifiInfoOrBuilder getWifi58GOrBuilder();
  }
  /**
   * Protobuf type {@code com.hanschen.multidex.bean.WifiSetting}
   */
  public  static final class WifiSetting extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:com.hanschen.multidex.bean.WifiSetting)
          WifiSettingOrBuilder {
    // Use WifiSetting.newBuilder() to construct.
    private WifiSetting(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private WifiSetting() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private WifiSetting(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                      extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.hanschen.multidex.bean.TestBean7.WifiInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = wifi24G_.toBuilder();
              }
              wifi24G_ = input.readMessage(com.hanschen.multidex.bean.TestBean7.WifiInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(wifi24G_);
                wifi24G_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              com.hanschen.multidex.bean.TestBean7.WifiInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = wifi58G_.toBuilder();
              }
              wifi58G_ = input.readMessage(com.hanschen.multidex.bean.TestBean7.WifiInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(wifi58G_);
                wifi58G_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_WifiSetting_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_WifiSetting_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      com.hanschen.multidex.bean.TestBean7.WifiSetting.class, com.hanschen.multidex.bean.TestBean7.WifiSetting.Builder.class);
    }

    private int bitField0_;
    public static final int WIFI_24G_FIELD_NUMBER = 1;
    private com.hanschen.multidex.bean.TestBean7.WifiInfo wifi24G_;
    /**
     * <code>required .com.hanschen.multidex.bean.WifiInfo wifi_24g = 1;</code>
     */
    public boolean hasWifi24G() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .com.hanschen.multidex.bean.WifiInfo wifi_24g = 1;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.WifiInfo getWifi24G() {
      return wifi24G_ == null ? com.hanschen.multidex.bean.TestBean7.WifiInfo.getDefaultInstance() : wifi24G_;
    }
    /**
     * <code>required .com.hanschen.multidex.bean.WifiInfo wifi_24g = 1;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.WifiInfoOrBuilder getWifi24GOrBuilder() {
      return wifi24G_ == null ? com.hanschen.multidex.bean.TestBean7.WifiInfo.getDefaultInstance() : wifi24G_;
    }

    public static final int WIFI_58G_FIELD_NUMBER = 2;
    private com.hanschen.multidex.bean.TestBean7.WifiInfo wifi58G_;
    /**
     * <code>required .com.hanschen.multidex.bean.WifiInfo wifi_58g = 2;</code>
     */
    public boolean hasWifi58G() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .com.hanschen.multidex.bean.WifiInfo wifi_58g = 2;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.WifiInfo getWifi58G() {
      return wifi58G_ == null ? com.hanschen.multidex.bean.TestBean7.WifiInfo.getDefaultInstance() : wifi58G_;
    }
    /**
     * <code>required .com.hanschen.multidex.bean.WifiInfo wifi_58g = 2;</code>
     */
    public com.hanschen.multidex.bean.TestBean7.WifiInfoOrBuilder getWifi58GOrBuilder() {
      return wifi58G_ == null ? com.hanschen.multidex.bean.TestBean7.WifiInfo.getDefaultInstance() : wifi58G_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasWifi24G()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWifi58G()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getWifi24G().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getWifi58G().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getWifi24G());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getWifi58G());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(1, getWifi24G());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
                .computeMessageSize(2, getWifi58G());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.hanschen.multidex.bean.TestBean7.WifiSetting)) {
        return super.equals(obj);
      }
      com.hanschen.multidex.bean.TestBean7.WifiSetting other = (com.hanschen.multidex.bean.TestBean7.WifiSetting) obj;

      boolean result = true;
      result = result && (hasWifi24G() == other.hasWifi24G());
      if (hasWifi24G()) {
        result = result && getWifi24G()
                .equals(other.getWifi24G());
      }
      result = result && (hasWifi58G() == other.hasWifi58G());
      if (hasWifi58G()) {
        result = result && getWifi58G()
                .equals(other.getWifi58G());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasWifi24G()) {
        hash = (37 * hash) + WIFI_24G_FIELD_NUMBER;
        hash = (53 * hash) + getWifi24G().hashCode();
      }
      if (hasWifi58G()) {
        hash = (37 * hash) + WIFI_58G_FIELD_NUMBER;
        hash = (53 * hash) + getWifi58G().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.hanschen.multidex.bean.TestBean7.WifiSetting parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hanschen.multidex.bean.TestBean7.WifiSetting parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.WifiSetting parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hanschen.multidex.bean.TestBean7.WifiSetting parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.WifiSetting parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.WifiSetting parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.WifiSetting parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.WifiSetting parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.WifiSetting parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.WifiSetting parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.hanschen.multidex.bean.TestBean7.WifiSetting prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.hanschen.multidex.bean.WifiSetting}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:com.hanschen.multidex.bean.WifiSetting)
            com.hanschen.multidex.bean.TestBean7.WifiSettingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_WifiSetting_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_WifiSetting_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        com.hanschen.multidex.bean.TestBean7.WifiSetting.class, com.hanschen.multidex.bean.TestBean7.WifiSetting.Builder.class);
      }

      // Construct using com.hanschen.multidex.bean.TestBean7.WifiSetting.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getWifi24GFieldBuilder();
          getWifi58GFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (wifi24GBuilder_ == null) {
          wifi24G_ = null;
        } else {
          wifi24GBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (wifi58GBuilder_ == null) {
          wifi58G_ = null;
        } else {
          wifi58GBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_WifiSetting_descriptor;
      }

      public com.hanschen.multidex.bean.TestBean7.WifiSetting getDefaultInstanceForType() {
        return com.hanschen.multidex.bean.TestBean7.WifiSetting.getDefaultInstance();
      }

      public com.hanschen.multidex.bean.TestBean7.WifiSetting build() {
        com.hanschen.multidex.bean.TestBean7.WifiSetting result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hanschen.multidex.bean.TestBean7.WifiSetting buildPartial() {
        com.hanschen.multidex.bean.TestBean7.WifiSetting result = new com.hanschen.multidex.bean.TestBean7.WifiSetting(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (wifi24GBuilder_ == null) {
          result.wifi24G_ = wifi24G_;
        } else {
          result.wifi24G_ = wifi24GBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (wifi58GBuilder_ == null) {
          result.wifi58G_ = wifi58G_;
        } else {
          result.wifi58G_ = wifi58GBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hanschen.multidex.bean.TestBean7.WifiSetting) {
          return mergeFrom((com.hanschen.multidex.bean.TestBean7.WifiSetting)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hanschen.multidex.bean.TestBean7.WifiSetting other) {
        if (other == com.hanschen.multidex.bean.TestBean7.WifiSetting.getDefaultInstance()) return this;
        if (other.hasWifi24G()) {
          mergeWifi24G(other.getWifi24G());
        }
        if (other.hasWifi58G()) {
          mergeWifi58G(other.getWifi58G());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasWifi24G()) {
          return false;
        }
        if (!hasWifi58G()) {
          return false;
        }
        if (!getWifi24G().isInitialized()) {
          return false;
        }
        if (!getWifi58G().isInitialized()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        com.hanschen.multidex.bean.TestBean7.WifiSetting parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hanschen.multidex.bean.TestBean7.WifiSetting) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.hanschen.multidex.bean.TestBean7.WifiInfo wifi24G_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.WifiInfo, com.hanschen.multidex.bean.TestBean7.WifiInfo.Builder, com.hanschen.multidex.bean.TestBean7.WifiInfoOrBuilder> wifi24GBuilder_;
      /**
       * <code>required .com.hanschen.multidex.bean.WifiInfo wifi_24g = 1;</code>
       */
      public boolean hasWifi24G() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .com.hanschen.multidex.bean.WifiInfo wifi_24g = 1;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.WifiInfo getWifi24G() {
        if (wifi24GBuilder_ == null) {
          return wifi24G_ == null ? com.hanschen.multidex.bean.TestBean7.WifiInfo.getDefaultInstance() : wifi24G_;
        } else {
          return wifi24GBuilder_.getMessage();
        }
      }
      /**
       * <code>required .com.hanschen.multidex.bean.WifiInfo wifi_24g = 1;</code>
       */
      public Builder setWifi24G(com.hanschen.multidex.bean.TestBean7.WifiInfo value) {
        if (wifi24GBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          wifi24G_ = value;
          onChanged();
        } else {
          wifi24GBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .com.hanschen.multidex.bean.WifiInfo wifi_24g = 1;</code>
       */
      public Builder setWifi24G(
              com.hanschen.multidex.bean.TestBean7.WifiInfo.Builder builderForValue) {
        if (wifi24GBuilder_ == null) {
          wifi24G_ = builderForValue.build();
          onChanged();
        } else {
          wifi24GBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .com.hanschen.multidex.bean.WifiInfo wifi_24g = 1;</code>
       */
      public Builder mergeWifi24G(com.hanschen.multidex.bean.TestBean7.WifiInfo value) {
        if (wifi24GBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
                  wifi24G_ != null &&
                  wifi24G_ != com.hanschen.multidex.bean.TestBean7.WifiInfo.getDefaultInstance()) {
            wifi24G_ =
                    com.hanschen.multidex.bean.TestBean7.WifiInfo.newBuilder(wifi24G_).mergeFrom(value).buildPartial();
          } else {
            wifi24G_ = value;
          }
          onChanged();
        } else {
          wifi24GBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .com.hanschen.multidex.bean.WifiInfo wifi_24g = 1;</code>
       */
      public Builder clearWifi24G() {
        if (wifi24GBuilder_ == null) {
          wifi24G_ = null;
          onChanged();
        } else {
          wifi24GBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .com.hanschen.multidex.bean.WifiInfo wifi_24g = 1;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.WifiInfo.Builder getWifi24GBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getWifi24GFieldBuilder().getBuilder();
      }
      /**
       * <code>required .com.hanschen.multidex.bean.WifiInfo wifi_24g = 1;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.WifiInfoOrBuilder getWifi24GOrBuilder() {
        if (wifi24GBuilder_ != null) {
          return wifi24GBuilder_.getMessageOrBuilder();
        } else {
          return wifi24G_ == null ?
                  com.hanschen.multidex.bean.TestBean7.WifiInfo.getDefaultInstance() : wifi24G_;
        }
      }
      /**
       * <code>required .com.hanschen.multidex.bean.WifiInfo wifi_24g = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.WifiInfo, com.hanschen.multidex.bean.TestBean7.WifiInfo.Builder, com.hanschen.multidex.bean.TestBean7.WifiInfoOrBuilder>
      getWifi24GFieldBuilder() {
        if (wifi24GBuilder_ == null) {
          wifi24GBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.hanschen.multidex.bean.TestBean7.WifiInfo, com.hanschen.multidex.bean.TestBean7.WifiInfo.Builder, com.hanschen.multidex.bean.TestBean7.WifiInfoOrBuilder>(
                  getWifi24G(),
                  getParentForChildren(),
                  isClean());
          wifi24G_ = null;
        }
        return wifi24GBuilder_;
      }

      private com.hanschen.multidex.bean.TestBean7.WifiInfo wifi58G_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.WifiInfo, com.hanschen.multidex.bean.TestBean7.WifiInfo.Builder, com.hanschen.multidex.bean.TestBean7.WifiInfoOrBuilder> wifi58GBuilder_;
      /**
       * <code>required .com.hanschen.multidex.bean.WifiInfo wifi_58g = 2;</code>
       */
      public boolean hasWifi58G() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .com.hanschen.multidex.bean.WifiInfo wifi_58g = 2;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.WifiInfo getWifi58G() {
        if (wifi58GBuilder_ == null) {
          return wifi58G_ == null ? com.hanschen.multidex.bean.TestBean7.WifiInfo.getDefaultInstance() : wifi58G_;
        } else {
          return wifi58GBuilder_.getMessage();
        }
      }
      /**
       * <code>required .com.hanschen.multidex.bean.WifiInfo wifi_58g = 2;</code>
       */
      public Builder setWifi58G(com.hanschen.multidex.bean.TestBean7.WifiInfo value) {
        if (wifi58GBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          wifi58G_ = value;
          onChanged();
        } else {
          wifi58GBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .com.hanschen.multidex.bean.WifiInfo wifi_58g = 2;</code>
       */
      public Builder setWifi58G(
              com.hanschen.multidex.bean.TestBean7.WifiInfo.Builder builderForValue) {
        if (wifi58GBuilder_ == null) {
          wifi58G_ = builderForValue.build();
          onChanged();
        } else {
          wifi58GBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .com.hanschen.multidex.bean.WifiInfo wifi_58g = 2;</code>
       */
      public Builder mergeWifi58G(com.hanschen.multidex.bean.TestBean7.WifiInfo value) {
        if (wifi58GBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
                  wifi58G_ != null &&
                  wifi58G_ != com.hanschen.multidex.bean.TestBean7.WifiInfo.getDefaultInstance()) {
            wifi58G_ =
                    com.hanschen.multidex.bean.TestBean7.WifiInfo.newBuilder(wifi58G_).mergeFrom(value).buildPartial();
          } else {
            wifi58G_ = value;
          }
          onChanged();
        } else {
          wifi58GBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .com.hanschen.multidex.bean.WifiInfo wifi_58g = 2;</code>
       */
      public Builder clearWifi58G() {
        if (wifi58GBuilder_ == null) {
          wifi58G_ = null;
          onChanged();
        } else {
          wifi58GBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .com.hanschen.multidex.bean.WifiInfo wifi_58g = 2;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.WifiInfo.Builder getWifi58GBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getWifi58GFieldBuilder().getBuilder();
      }
      /**
       * <code>required .com.hanschen.multidex.bean.WifiInfo wifi_58g = 2;</code>
       */
      public com.hanschen.multidex.bean.TestBean7.WifiInfoOrBuilder getWifi58GOrBuilder() {
        if (wifi58GBuilder_ != null) {
          return wifi58GBuilder_.getMessageOrBuilder();
        } else {
          return wifi58G_ == null ?
                  com.hanschen.multidex.bean.TestBean7.WifiInfo.getDefaultInstance() : wifi58G_;
        }
      }
      /**
       * <code>required .com.hanschen.multidex.bean.WifiInfo wifi_58g = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.hanschen.multidex.bean.TestBean7.WifiInfo, com.hanschen.multidex.bean.TestBean7.WifiInfo.Builder, com.hanschen.multidex.bean.TestBean7.WifiInfoOrBuilder>
      getWifi58GFieldBuilder() {
        if (wifi58GBuilder_ == null) {
          wifi58GBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.hanschen.multidex.bean.TestBean7.WifiInfo, com.hanschen.multidex.bean.TestBean7.WifiInfo.Builder, com.hanschen.multidex.bean.TestBean7.WifiInfoOrBuilder>(
                  getWifi58G(),
                  getParentForChildren(),
                  isClean());
          wifi58G_ = null;
        }
        return wifi58GBuilder_;
      }
      public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.hanschen.multidex.bean.WifiSetting)
    }

    // @@protoc_insertion_point(class_scope:com.hanschen.multidex.bean.WifiSetting)
    private static final com.hanschen.multidex.bean.TestBean7.WifiSetting DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.hanschen.multidex.bean.TestBean7.WifiSetting();
    }

    public static com.hanschen.multidex.bean.TestBean7.WifiSetting getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<WifiSetting>
            PARSER = new com.google.protobuf.AbstractParser<WifiSetting>() {
      public WifiSetting parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return new WifiSetting(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<WifiSetting> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<WifiSetting> getParserForType() {
      return PARSER;
    }

    public com.hanschen.multidex.bean.TestBean7.WifiSetting getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SpeedLimitOrBuilder extends
          // @@protoc_insertion_point(interface_extends:com.hanschen.multidex.bean.SpeedLimit)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string mac = 1;</code>
     */
    boolean hasMac();
    /**
     * <code>required string mac = 1;</code>
     */
    java.lang.String getMac();
    /**
     * <code>required string mac = 1;</code>
     */
    com.google.protobuf.ByteString
    getMacBytes();

    /**
     * <code>required int32 limit = 2;</code>
     */
    boolean hasLimit();
    /**
     * <code>required int32 limit = 2;</code>
     */
    int getLimit();
  }
  /**
   * Protobuf type {@code com.hanschen.multidex.bean.SpeedLimit}
   */
  public  static final class SpeedLimit extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:com.hanschen.multidex.bean.SpeedLimit)
          SpeedLimitOrBuilder {
    // Use SpeedLimit.newBuilder() to construct.
    private SpeedLimit(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SpeedLimit() {
      mac_ = "";
      limit_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SpeedLimit(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                      extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              mac_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              limit_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_SpeedLimit_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_SpeedLimit_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      com.hanschen.multidex.bean.TestBean7.SpeedLimit.class, com.hanschen.multidex.bean.TestBean7.SpeedLimit.Builder.class);
    }

    private int bitField0_;
    public static final int MAC_FIELD_NUMBER = 1;
    private volatile java.lang.Object mac_;
    /**
     * <code>required string mac = 1;</code>
     */
    public boolean hasMac() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string mac = 1;</code>
     */
    public java.lang.String getMac() {
      java.lang.Object ref = mac_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          mac_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string mac = 1;</code>
     */
    public com.google.protobuf.ByteString
    getMacBytes() {
      java.lang.Object ref = mac_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        mac_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LIMIT_FIELD_NUMBER = 2;
    private int limit_;
    /**
     * <code>required int32 limit = 2;</code>
     */
    public boolean hasLimit() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 limit = 2;</code>
     */
    public int getLimit() {
      return limit_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasMac()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLimit()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, mac_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, limit_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, mac_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(2, limit_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.hanschen.multidex.bean.TestBean7.SpeedLimit)) {
        return super.equals(obj);
      }
      com.hanschen.multidex.bean.TestBean7.SpeedLimit other = (com.hanschen.multidex.bean.TestBean7.SpeedLimit) obj;

      boolean result = true;
      result = result && (hasMac() == other.hasMac());
      if (hasMac()) {
        result = result && getMac()
                .equals(other.getMac());
      }
      result = result && (hasLimit() == other.hasLimit());
      if (hasLimit()) {
        result = result && (getLimit()
                == other.getLimit());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasMac()) {
        hash = (37 * hash) + MAC_FIELD_NUMBER;
        hash = (53 * hash) + getMac().hashCode();
      }
      if (hasLimit()) {
        hash = (37 * hash) + LIMIT_FIELD_NUMBER;
        hash = (53 * hash) + getLimit();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.hanschen.multidex.bean.TestBean7.SpeedLimit parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hanschen.multidex.bean.TestBean7.SpeedLimit parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.SpeedLimit parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hanschen.multidex.bean.TestBean7.SpeedLimit parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.SpeedLimit parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.SpeedLimit parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.SpeedLimit parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.SpeedLimit parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.SpeedLimit parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.SpeedLimit parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.hanschen.multidex.bean.TestBean7.SpeedLimit prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.hanschen.multidex.bean.SpeedLimit}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:com.hanschen.multidex.bean.SpeedLimit)
            com.hanschen.multidex.bean.TestBean7.SpeedLimitOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_SpeedLimit_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_SpeedLimit_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        com.hanschen.multidex.bean.TestBean7.SpeedLimit.class, com.hanschen.multidex.bean.TestBean7.SpeedLimit.Builder.class);
      }

      // Construct using com.hanschen.multidex.bean.TestBean7.SpeedLimit.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        mac_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        limit_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_SpeedLimit_descriptor;
      }

      public com.hanschen.multidex.bean.TestBean7.SpeedLimit getDefaultInstanceForType() {
        return com.hanschen.multidex.bean.TestBean7.SpeedLimit.getDefaultInstance();
      }

      public com.hanschen.multidex.bean.TestBean7.SpeedLimit build() {
        com.hanschen.multidex.bean.TestBean7.SpeedLimit result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hanschen.multidex.bean.TestBean7.SpeedLimit buildPartial() {
        com.hanschen.multidex.bean.TestBean7.SpeedLimit result = new com.hanschen.multidex.bean.TestBean7.SpeedLimit(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.mac_ = mac_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.limit_ = limit_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hanschen.multidex.bean.TestBean7.SpeedLimit) {
          return mergeFrom((com.hanschen.multidex.bean.TestBean7.SpeedLimit)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hanschen.multidex.bean.TestBean7.SpeedLimit other) {
        if (other == com.hanschen.multidex.bean.TestBean7.SpeedLimit.getDefaultInstance()) return this;
        if (other.hasMac()) {
          bitField0_ |= 0x00000001;
          mac_ = other.mac_;
          onChanged();
        }
        if (other.hasLimit()) {
          setLimit(other.getLimit());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMac()) {
          return false;
        }
        if (!hasLimit()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        com.hanschen.multidex.bean.TestBean7.SpeedLimit parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hanschen.multidex.bean.TestBean7.SpeedLimit) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object mac_ = "";
      /**
       * <code>required string mac = 1;</code>
       */
      public boolean hasMac() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string mac = 1;</code>
       */
      public java.lang.String getMac() {
        java.lang.Object ref = mac_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            mac_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string mac = 1;</code>
       */
      public com.google.protobuf.ByteString
      getMacBytes() {
        java.lang.Object ref = mac_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          mac_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string mac = 1;</code>
       */
      public Builder setMac(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        mac_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string mac = 1;</code>
       */
      public Builder clearMac() {
        bitField0_ = (bitField0_ & ~0x00000001);
        mac_ = getDefaultInstance().getMac();
        onChanged();
        return this;
      }
      /**
       * <code>required string mac = 1;</code>
       */
      public Builder setMacBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        mac_ = value;
        onChanged();
        return this;
      }

      private int limit_ ;
      /**
       * <code>required int32 limit = 2;</code>
       */
      public boolean hasLimit() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 limit = 2;</code>
       */
      public int getLimit() {
        return limit_;
      }
      /**
       * <code>required int32 limit = 2;</code>
       */
      public Builder setLimit(int value) {
        bitField0_ |= 0x00000002;
        limit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 limit = 2;</code>
       */
      public Builder clearLimit() {
        bitField0_ = (bitField0_ & ~0x00000002);
        limit_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.hanschen.multidex.bean.SpeedLimit)
    }

    // @@protoc_insertion_point(class_scope:com.hanschen.multidex.bean.SpeedLimit)
    private static final com.hanschen.multidex.bean.TestBean7.SpeedLimit DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.hanschen.multidex.bean.TestBean7.SpeedLimit();
    }

    public static com.hanschen.multidex.bean.TestBean7.SpeedLimit getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SpeedLimit>
            PARSER = new com.google.protobuf.AbstractParser<SpeedLimit>() {
      public SpeedLimit parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return new SpeedLimit(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SpeedLimit> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SpeedLimit> getParserForType() {
      return PARSER;
    }

    public com.hanschen.multidex.bean.TestBean7.SpeedLimit getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RouterInfoOrBuilder extends
          // @@protoc_insertion_point(interface_extends:com.hanschen.multidex.bean.RouterInfo)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string model = 1;</code>
     */
    boolean hasModel();
    /**
     * <code>required string model = 1;</code>
     */
    java.lang.String getModel();
    /**
     * <code>required string model = 1;</code>
     */
    com.google.protobuf.ByteString
    getModelBytes();

    /**
     * <code>required string sn = 2;</code>
     */
    boolean hasSn();
    /**
     * <code>required string sn = 2;</code>
     */
    java.lang.String getSn();
    /**
     * <code>required string sn = 2;</code>
     */
    com.google.protobuf.ByteString
    getSnBytes();

    /**
     * <code>required string soft_version = 3;</code>
     */
    boolean hasSoftVersion();
    /**
     * <code>required string soft_version = 3;</code>
     */
    java.lang.String getSoftVersion();
    /**
     * <code>required string soft_version = 3;</code>
     */
    com.google.protobuf.ByteString
    getSoftVersionBytes();

    /**
     * <code>required string wan_ip = 4;</code>
     */
    boolean hasWanIp();
    /**
     * <code>required string wan_ip = 4;</code>
     */
    java.lang.String getWanIp();
    /**
     * <code>required string wan_ip = 4;</code>
     */
    com.google.protobuf.ByteString
    getWanIpBytes();

    /**
     * <code>required string dns = 5;</code>
     */
    boolean hasDns();
    /**
     * <code>required string dns = 5;</code>
     */
    java.lang.String getDns();
    /**
     * <code>required string dns = 5;</code>
     */
    com.google.protobuf.ByteString
    getDnsBytes();

    /**
     * <code>required string up_time = 6;</code>
     */
    boolean hasUpTime();
    /**
     * <code>required string up_time = 6;</code>
     */
    java.lang.String getUpTime();
    /**
     * <code>required string up_time = 6;</code>
     */
    com.google.protobuf.ByteString
    getUpTimeBytes();
  }
  /**
   * Protobuf type {@code com.hanschen.multidex.bean.RouterInfo}
   */
  public  static final class RouterInfo extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:com.hanschen.multidex.bean.RouterInfo)
          RouterInfoOrBuilder {
    // Use RouterInfo.newBuilder() to construct.
    private RouterInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RouterInfo() {
      model_ = "";
      sn_ = "";
      softVersion_ = "";
      wanIp_ = "";
      dns_ = "";
      upTime_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RouterInfo(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                      extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              model_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              sn_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              softVersion_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              wanIp_ = bs;
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              dns_ = bs;
              break;
            }
            case 50: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000020;
              upTime_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_RouterInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_RouterInfo_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      com.hanschen.multidex.bean.TestBean7.RouterInfo.class, com.hanschen.multidex.bean.TestBean7.RouterInfo.Builder.class);
    }

    private int bitField0_;
    public static final int MODEL_FIELD_NUMBER = 1;
    private volatile java.lang.Object model_;
    /**
     * <code>required string model = 1;</code>
     */
    public boolean hasModel() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string model = 1;</code>
     */
    public java.lang.String getModel() {
      java.lang.Object ref = model_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          model_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string model = 1;</code>
     */
    public com.google.protobuf.ByteString
    getModelBytes() {
      java.lang.Object ref = model_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        model_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SN_FIELD_NUMBER = 2;
    private volatile java.lang.Object sn_;
    /**
     * <code>required string sn = 2;</code>
     */
    public boolean hasSn() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string sn = 2;</code>
     */
    public java.lang.String getSn() {
      java.lang.Object ref = sn_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          sn_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string sn = 2;</code>
     */
    public com.google.protobuf.ByteString
    getSnBytes() {
      java.lang.Object ref = sn_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        sn_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SOFT_VERSION_FIELD_NUMBER = 3;
    private volatile java.lang.Object softVersion_;
    /**
     * <code>required string soft_version = 3;</code>
     */
    public boolean hasSoftVersion() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string soft_version = 3;</code>
     */
    public java.lang.String getSoftVersion() {
      java.lang.Object ref = softVersion_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          softVersion_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string soft_version = 3;</code>
     */
    public com.google.protobuf.ByteString
    getSoftVersionBytes() {
      java.lang.Object ref = softVersion_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        softVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int WAN_IP_FIELD_NUMBER = 4;
    private volatile java.lang.Object wanIp_;
    /**
     * <code>required string wan_ip = 4;</code>
     */
    public boolean hasWanIp() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required string wan_ip = 4;</code>
     */
    public java.lang.String getWanIp() {
      java.lang.Object ref = wanIp_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          wanIp_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string wan_ip = 4;</code>
     */
    public com.google.protobuf.ByteString
    getWanIpBytes() {
      java.lang.Object ref = wanIp_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        wanIp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DNS_FIELD_NUMBER = 5;
    private volatile java.lang.Object dns_;
    /**
     * <code>required string dns = 5;</code>
     */
    public boolean hasDns() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required string dns = 5;</code>
     */
    public java.lang.String getDns() {
      java.lang.Object ref = dns_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          dns_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string dns = 5;</code>
     */
    public com.google.protobuf.ByteString
    getDnsBytes() {
      java.lang.Object ref = dns_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        dns_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int UP_TIME_FIELD_NUMBER = 6;
    private volatile java.lang.Object upTime_;
    /**
     * <code>required string up_time = 6;</code>
     */
    public boolean hasUpTime() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required string up_time = 6;</code>
     */
    public java.lang.String getUpTime() {
      java.lang.Object ref = upTime_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          upTime_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string up_time = 6;</code>
     */
    public com.google.protobuf.ByteString
    getUpTimeBytes() {
      java.lang.Object ref = upTime_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        upTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasModel()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSn()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSoftVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWanIp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDns()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUpTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, model_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, sn_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, softVersion_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, wanIp_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, dns_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, upTime_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, model_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, sn_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, softVersion_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, wanIp_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, dns_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, upTime_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.hanschen.multidex.bean.TestBean7.RouterInfo)) {
        return super.equals(obj);
      }
      com.hanschen.multidex.bean.TestBean7.RouterInfo other = (com.hanschen.multidex.bean.TestBean7.RouterInfo) obj;

      boolean result = true;
      result = result && (hasModel() == other.hasModel());
      if (hasModel()) {
        result = result && getModel()
                .equals(other.getModel());
      }
      result = result && (hasSn() == other.hasSn());
      if (hasSn()) {
        result = result && getSn()
                .equals(other.getSn());
      }
      result = result && (hasSoftVersion() == other.hasSoftVersion());
      if (hasSoftVersion()) {
        result = result && getSoftVersion()
                .equals(other.getSoftVersion());
      }
      result = result && (hasWanIp() == other.hasWanIp());
      if (hasWanIp()) {
        result = result && getWanIp()
                .equals(other.getWanIp());
      }
      result = result && (hasDns() == other.hasDns());
      if (hasDns()) {
        result = result && getDns()
                .equals(other.getDns());
      }
      result = result && (hasUpTime() == other.hasUpTime());
      if (hasUpTime()) {
        result = result && getUpTime()
                .equals(other.getUpTime());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasModel()) {
        hash = (37 * hash) + MODEL_FIELD_NUMBER;
        hash = (53 * hash) + getModel().hashCode();
      }
      if (hasSn()) {
        hash = (37 * hash) + SN_FIELD_NUMBER;
        hash = (53 * hash) + getSn().hashCode();
      }
      if (hasSoftVersion()) {
        hash = (37 * hash) + SOFT_VERSION_FIELD_NUMBER;
        hash = (53 * hash) + getSoftVersion().hashCode();
      }
      if (hasWanIp()) {
        hash = (37 * hash) + WAN_IP_FIELD_NUMBER;
        hash = (53 * hash) + getWanIp().hashCode();
      }
      if (hasDns()) {
        hash = (37 * hash) + DNS_FIELD_NUMBER;
        hash = (53 * hash) + getDns().hashCode();
      }
      if (hasUpTime()) {
        hash = (37 * hash) + UP_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getUpTime().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.hanschen.multidex.bean.TestBean7.RouterInfo parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hanschen.multidex.bean.TestBean7.RouterInfo parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.RouterInfo parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hanschen.multidex.bean.TestBean7.RouterInfo parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.RouterInfo parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.RouterInfo parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.RouterInfo parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.RouterInfo parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.RouterInfo parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.RouterInfo parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.hanschen.multidex.bean.TestBean7.RouterInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.hanschen.multidex.bean.RouterInfo}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:com.hanschen.multidex.bean.RouterInfo)
            com.hanschen.multidex.bean.TestBean7.RouterInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_RouterInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_RouterInfo_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        com.hanschen.multidex.bean.TestBean7.RouterInfo.class, com.hanschen.multidex.bean.TestBean7.RouterInfo.Builder.class);
      }

      // Construct using com.hanschen.multidex.bean.TestBean7.RouterInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        model_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        sn_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        softVersion_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        wanIp_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        dns_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        upTime_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_RouterInfo_descriptor;
      }

      public com.hanschen.multidex.bean.TestBean7.RouterInfo getDefaultInstanceForType() {
        return com.hanschen.multidex.bean.TestBean7.RouterInfo.getDefaultInstance();
      }

      public com.hanschen.multidex.bean.TestBean7.RouterInfo build() {
        com.hanschen.multidex.bean.TestBean7.RouterInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hanschen.multidex.bean.TestBean7.RouterInfo buildPartial() {
        com.hanschen.multidex.bean.TestBean7.RouterInfo result = new com.hanschen.multidex.bean.TestBean7.RouterInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.model_ = model_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.sn_ = sn_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.softVersion_ = softVersion_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.wanIp_ = wanIp_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.dns_ = dns_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.upTime_ = upTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hanschen.multidex.bean.TestBean7.RouterInfo) {
          return mergeFrom((com.hanschen.multidex.bean.TestBean7.RouterInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hanschen.multidex.bean.TestBean7.RouterInfo other) {
        if (other == com.hanschen.multidex.bean.TestBean7.RouterInfo.getDefaultInstance()) return this;
        if (other.hasModel()) {
          bitField0_ |= 0x00000001;
          model_ = other.model_;
          onChanged();
        }
        if (other.hasSn()) {
          bitField0_ |= 0x00000002;
          sn_ = other.sn_;
          onChanged();
        }
        if (other.hasSoftVersion()) {
          bitField0_ |= 0x00000004;
          softVersion_ = other.softVersion_;
          onChanged();
        }
        if (other.hasWanIp()) {
          bitField0_ |= 0x00000008;
          wanIp_ = other.wanIp_;
          onChanged();
        }
        if (other.hasDns()) {
          bitField0_ |= 0x00000010;
          dns_ = other.dns_;
          onChanged();
        }
        if (other.hasUpTime()) {
          bitField0_ |= 0x00000020;
          upTime_ = other.upTime_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasModel()) {
          return false;
        }
        if (!hasSn()) {
          return false;
        }
        if (!hasSoftVersion()) {
          return false;
        }
        if (!hasWanIp()) {
          return false;
        }
        if (!hasDns()) {
          return false;
        }
        if (!hasUpTime()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        com.hanschen.multidex.bean.TestBean7.RouterInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hanschen.multidex.bean.TestBean7.RouterInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object model_ = "";
      /**
       * <code>required string model = 1;</code>
       */
      public boolean hasModel() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string model = 1;</code>
       */
      public java.lang.String getModel() {
        java.lang.Object ref = model_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            model_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string model = 1;</code>
       */
      public com.google.protobuf.ByteString
      getModelBytes() {
        java.lang.Object ref = model_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          model_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string model = 1;</code>
       */
      public Builder setModel(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        model_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string model = 1;</code>
       */
      public Builder clearModel() {
        bitField0_ = (bitField0_ & ~0x00000001);
        model_ = getDefaultInstance().getModel();
        onChanged();
        return this;
      }
      /**
       * <code>required string model = 1;</code>
       */
      public Builder setModelBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        model_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object sn_ = "";
      /**
       * <code>required string sn = 2;</code>
       */
      public boolean hasSn() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string sn = 2;</code>
       */
      public java.lang.String getSn() {
        java.lang.Object ref = sn_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            sn_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string sn = 2;</code>
       */
      public com.google.protobuf.ByteString
      getSnBytes() {
        java.lang.Object ref = sn_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          sn_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string sn = 2;</code>
       */
      public Builder setSn(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        sn_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string sn = 2;</code>
       */
      public Builder clearSn() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sn_ = getDefaultInstance().getSn();
        onChanged();
        return this;
      }
      /**
       * <code>required string sn = 2;</code>
       */
      public Builder setSnBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        sn_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object softVersion_ = "";
      /**
       * <code>required string soft_version = 3;</code>
       */
      public boolean hasSoftVersion() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string soft_version = 3;</code>
       */
      public java.lang.String getSoftVersion() {
        java.lang.Object ref = softVersion_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            softVersion_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string soft_version = 3;</code>
       */
      public com.google.protobuf.ByteString
      getSoftVersionBytes() {
        java.lang.Object ref = softVersion_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          softVersion_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string soft_version = 3;</code>
       */
      public Builder setSoftVersion(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        softVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string soft_version = 3;</code>
       */
      public Builder clearSoftVersion() {
        bitField0_ = (bitField0_ & ~0x00000004);
        softVersion_ = getDefaultInstance().getSoftVersion();
        onChanged();
        return this;
      }
      /**
       * <code>required string soft_version = 3;</code>
       */
      public Builder setSoftVersionBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        softVersion_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object wanIp_ = "";
      /**
       * <code>required string wan_ip = 4;</code>
       */
      public boolean hasWanIp() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required string wan_ip = 4;</code>
       */
      public java.lang.String getWanIp() {
        java.lang.Object ref = wanIp_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            wanIp_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string wan_ip = 4;</code>
       */
      public com.google.protobuf.ByteString
      getWanIpBytes() {
        java.lang.Object ref = wanIp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          wanIp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string wan_ip = 4;</code>
       */
      public Builder setWanIp(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        wanIp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string wan_ip = 4;</code>
       */
      public Builder clearWanIp() {
        bitField0_ = (bitField0_ & ~0x00000008);
        wanIp_ = getDefaultInstance().getWanIp();
        onChanged();
        return this;
      }
      /**
       * <code>required string wan_ip = 4;</code>
       */
      public Builder setWanIpBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        wanIp_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object dns_ = "";
      /**
       * <code>required string dns = 5;</code>
       */
      public boolean hasDns() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required string dns = 5;</code>
       */
      public java.lang.String getDns() {
        java.lang.Object ref = dns_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            dns_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string dns = 5;</code>
       */
      public com.google.protobuf.ByteString
      getDnsBytes() {
        java.lang.Object ref = dns_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          dns_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string dns = 5;</code>
       */
      public Builder setDns(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        dns_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string dns = 5;</code>
       */
      public Builder clearDns() {
        bitField0_ = (bitField0_ & ~0x00000010);
        dns_ = getDefaultInstance().getDns();
        onChanged();
        return this;
      }
      /**
       * <code>required string dns = 5;</code>
       */
      public Builder setDnsBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        dns_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object upTime_ = "";
      /**
       * <code>required string up_time = 6;</code>
       */
      public boolean hasUpTime() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required string up_time = 6;</code>
       */
      public java.lang.String getUpTime() {
        java.lang.Object ref = upTime_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            upTime_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string up_time = 6;</code>
       */
      public com.google.protobuf.ByteString
      getUpTimeBytes() {
        java.lang.Object ref = upTime_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          upTime_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string up_time = 6;</code>
       */
      public Builder setUpTime(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        upTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string up_time = 6;</code>
       */
      public Builder clearUpTime() {
        bitField0_ = (bitField0_ & ~0x00000020);
        upTime_ = getDefaultInstance().getUpTime();
        onChanged();
        return this;
      }
      /**
       * <code>required string up_time = 6;</code>
       */
      public Builder setUpTimeBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        upTime_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.hanschen.multidex.bean.RouterInfo)
    }

    // @@protoc_insertion_point(class_scope:com.hanschen.multidex.bean.RouterInfo)
    private static final com.hanschen.multidex.bean.TestBean7.RouterInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.hanschen.multidex.bean.TestBean7.RouterInfo();
    }

    public static com.hanschen.multidex.bean.TestBean7.RouterInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RouterInfo>
            PARSER = new com.google.protobuf.AbstractParser<RouterInfo>() {
      public RouterInfo parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return new RouterInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RouterInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RouterInfo> getParserForType() {
      return PARSER;
    }

    public com.hanschen.multidex.bean.TestBean7.RouterInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SmartSocketOrBuilder extends
          // @@protoc_insertion_point(interface_extends:com.hanschen.multidex.bean.SmartSocket)
          com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string alias = 1;</code>
     */
    boolean hasAlias();
    /**
     * <code>required string alias = 1;</code>
     */
    java.lang.String getAlias();
    /**
     * <code>required string alias = 1;</code>
     */
    com.google.protobuf.ByteString
    getAliasBytes();

    /**
     * <code>required string mac = 2;</code>
     */
    boolean hasMac();
    /**
     * <code>required string mac = 2;</code>
     */
    java.lang.String getMac();
    /**
     * <code>required string mac = 2;</code>
     */
    com.google.protobuf.ByteString
    getMacBytes();

    /**
     * <code>required bool online = 3;</code>
     */
    boolean hasOnline();
    /**
     * <code>required bool online = 3;</code>
     */
    boolean getOnline();

    /**
     * <code>required string ip = 4;</code>
     */
    boolean hasIp();
    /**
     * <code>required string ip = 4;</code>
     */
    java.lang.String getIp();
    /**
     * <code>required string ip = 4;</code>
     */
    com.google.protobuf.ByteString
    getIpBytes();

    /**
     * <code>required int32 port = 5;</code>
     */
    boolean hasPort();
    /**
     * <code>required int32 port = 5;</code>
     */
    int getPort();

    /**
     * <code>required string device_id = 6;</code>
     */
    boolean hasDeviceId();
    /**
     * <code>required string device_id = 6;</code>
     */
    java.lang.String getDeviceId();
    /**
     * <code>required string device_id = 6;</code>
     */
    com.google.protobuf.ByteString
    getDeviceIdBytes();

    /**
     * <code>required string encrypt_key = 7;</code>
     */
    boolean hasEncryptKey();
    /**
     * <code>required string encrypt_key = 7;</code>
     */
    java.lang.String getEncryptKey();
    /**
     * <code>required string encrypt_key = 7;</code>
     */
    com.google.protobuf.ByteString
    getEncryptKeyBytes();
  }
  /**
   * Protobuf type {@code com.hanschen.multidex.bean.SmartSocket}
   */
  public  static final class SmartSocket extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:com.hanschen.multidex.bean.SmartSocket)
          SmartSocketOrBuilder {
    // Use SmartSocket.newBuilder() to construct.
    private SmartSocket(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SmartSocket() {
      alias_ = "";
      mac_ = "";
      online_ = false;
      ip_ = "";
      port_ = 0;
      deviceId_ = "";
      encryptKey_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SmartSocket(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                      extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              alias_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              mac_ = bs;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              online_ = input.readBool();
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              ip_ = bs;
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              port_ = input.readInt32();
              break;
            }
            case 50: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000020;
              deviceId_ = bs;
              break;
            }
            case 58: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000040;
              encryptKey_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_SmartSocket_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_SmartSocket_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                      com.hanschen.multidex.bean.TestBean7.SmartSocket.class, com.hanschen.multidex.bean.TestBean7.SmartSocket.Builder.class);
    }

    private int bitField0_;
    public static final int ALIAS_FIELD_NUMBER = 1;
    private volatile java.lang.Object alias_;
    /**
     * <code>required string alias = 1;</code>
     */
    public boolean hasAlias() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string alias = 1;</code>
     */
    public java.lang.String getAlias() {
      java.lang.Object ref = alias_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          alias_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string alias = 1;</code>
     */
    public com.google.protobuf.ByteString
    getAliasBytes() {
      java.lang.Object ref = alias_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        alias_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MAC_FIELD_NUMBER = 2;
    private volatile java.lang.Object mac_;
    /**
     * <code>required string mac = 2;</code>
     */
    public boolean hasMac() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string mac = 2;</code>
     */
    public java.lang.String getMac() {
      java.lang.Object ref = mac_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          mac_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string mac = 2;</code>
     */
    public com.google.protobuf.ByteString
    getMacBytes() {
      java.lang.Object ref = mac_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        mac_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ONLINE_FIELD_NUMBER = 3;
    private boolean online_;
    /**
     * <code>required bool online = 3;</code>
     */
    public boolean hasOnline() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required bool online = 3;</code>
     */
    public boolean getOnline() {
      return online_;
    }

    public static final int IP_FIELD_NUMBER = 4;
    private volatile java.lang.Object ip_;
    /**
     * <code>required string ip = 4;</code>
     */
    public boolean hasIp() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required string ip = 4;</code>
     */
    public java.lang.String getIp() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ip_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string ip = 4;</code>
     */
    public com.google.protobuf.ByteString
    getIpBytes() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        ip_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PORT_FIELD_NUMBER = 5;
    private int port_;
    /**
     * <code>required int32 port = 5;</code>
     */
    public boolean hasPort() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 port = 5;</code>
     */
    public int getPort() {
      return port_;
    }

    public static final int DEVICE_ID_FIELD_NUMBER = 6;
    private volatile java.lang.Object deviceId_;
    /**
     * <code>required string device_id = 6;</code>
     */
    public boolean hasDeviceId() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required string device_id = 6;</code>
     */
    public java.lang.String getDeviceId() {
      java.lang.Object ref = deviceId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          deviceId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string device_id = 6;</code>
     */
    public com.google.protobuf.ByteString
    getDeviceIdBytes() {
      java.lang.Object ref = deviceId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        deviceId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ENCRYPT_KEY_FIELD_NUMBER = 7;
    private volatile java.lang.Object encryptKey_;
    /**
     * <code>required string encrypt_key = 7;</code>
     */
    public boolean hasEncryptKey() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required string encrypt_key = 7;</code>
     */
    public java.lang.String getEncryptKey() {
      java.lang.Object ref = encryptKey_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          encryptKey_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string encrypt_key = 7;</code>
     */
    public com.google.protobuf.ByteString
    getEncryptKeyBytes() {
      java.lang.Object ref = encryptKey_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
                com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
        encryptKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasAlias()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMac()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOnline()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPort()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDeviceId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEncryptKey()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, alias_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, mac_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, online_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, ip_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, port_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, deviceId_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, encryptKey_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, alias_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, mac_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
                .computeBoolSize(3, online_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, ip_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
                .computeInt32Size(5, port_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, deviceId_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, encryptKey_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.hanschen.multidex.bean.TestBean7.SmartSocket)) {
        return super.equals(obj);
      }
      com.hanschen.multidex.bean.TestBean7.SmartSocket other = (com.hanschen.multidex.bean.TestBean7.SmartSocket) obj;

      boolean result = true;
      result = result && (hasAlias() == other.hasAlias());
      if (hasAlias()) {
        result = result && getAlias()
                .equals(other.getAlias());
      }
      result = result && (hasMac() == other.hasMac());
      if (hasMac()) {
        result = result && getMac()
                .equals(other.getMac());
      }
      result = result && (hasOnline() == other.hasOnline());
      if (hasOnline()) {
        result = result && (getOnline()
                == other.getOnline());
      }
      result = result && (hasIp() == other.hasIp());
      if (hasIp()) {
        result = result && getIp()
                .equals(other.getIp());
      }
      result = result && (hasPort() == other.hasPort());
      if (hasPort()) {
        result = result && (getPort()
                == other.getPort());
      }
      result = result && (hasDeviceId() == other.hasDeviceId());
      if (hasDeviceId()) {
        result = result && getDeviceId()
                .equals(other.getDeviceId());
      }
      result = result && (hasEncryptKey() == other.hasEncryptKey());
      if (hasEncryptKey()) {
        result = result && getEncryptKey()
                .equals(other.getEncryptKey());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasAlias()) {
        hash = (37 * hash) + ALIAS_FIELD_NUMBER;
        hash = (53 * hash) + getAlias().hashCode();
      }
      if (hasMac()) {
        hash = (37 * hash) + MAC_FIELD_NUMBER;
        hash = (53 * hash) + getMac().hashCode();
      }
      if (hasOnline()) {
        hash = (37 * hash) + ONLINE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getOnline());
      }
      if (hasIp()) {
        hash = (37 * hash) + IP_FIELD_NUMBER;
        hash = (53 * hash) + getIp().hashCode();
      }
      if (hasPort()) {
        hash = (37 * hash) + PORT_FIELD_NUMBER;
        hash = (53 * hash) + getPort();
      }
      if (hasDeviceId()) {
        hash = (37 * hash) + DEVICE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getDeviceId().hashCode();
      }
      if (hasEncryptKey()) {
        hash = (37 * hash) + ENCRYPT_KEY_FIELD_NUMBER;
        hash = (53 * hash) + getEncryptKey().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.hanschen.multidex.bean.TestBean7.SmartSocket parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hanschen.multidex.bean.TestBean7.SmartSocket parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.SmartSocket parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hanschen.multidex.bean.TestBean7.SmartSocket parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.SmartSocket parseFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.SmartSocket parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.SmartSocket parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.SmartSocket parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hanschen.multidex.bean.TestBean7.SmartSocket parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
    }
    public static com.hanschen.multidex.bean.TestBean7.SmartSocket parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.hanschen.multidex.bean.TestBean7.SmartSocket prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.hanschen.multidex.bean.SmartSocket}
     */
    public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:com.hanschen.multidex.bean.SmartSocket)
            com.hanschen.multidex.bean.TestBean7.SmartSocketOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_SmartSocket_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_SmartSocket_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        com.hanschen.multidex.bean.TestBean7.SmartSocket.class, com.hanschen.multidex.bean.TestBean7.SmartSocket.Builder.class);
      }

      // Construct using com.hanschen.multidex.bean.TestBean7.SmartSocket.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        alias_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        mac_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        online_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        ip_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        port_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        deviceId_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        encryptKey_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return com.hanschen.multidex.bean.TestBean7.internal_static_com_hanschen_multidex_bean_SmartSocket_descriptor;
      }

      public com.hanschen.multidex.bean.TestBean7.SmartSocket getDefaultInstanceForType() {
        return com.hanschen.multidex.bean.TestBean7.SmartSocket.getDefaultInstance();
      }

      public com.hanschen.multidex.bean.TestBean7.SmartSocket build() {
        com.hanschen.multidex.bean.TestBean7.SmartSocket result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.hanschen.multidex.bean.TestBean7.SmartSocket buildPartial() {
        com.hanschen.multidex.bean.TestBean7.SmartSocket result = new com.hanschen.multidex.bean.TestBean7.SmartSocket(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.alias_ = alias_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.mac_ = mac_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.online_ = online_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.ip_ = ip_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.port_ = port_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.deviceId_ = deviceId_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.encryptKey_ = encryptKey_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hanschen.multidex.bean.TestBean7.SmartSocket) {
          return mergeFrom((com.hanschen.multidex.bean.TestBean7.SmartSocket)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hanschen.multidex.bean.TestBean7.SmartSocket other) {
        if (other == com.hanschen.multidex.bean.TestBean7.SmartSocket.getDefaultInstance()) return this;
        if (other.hasAlias()) {
          bitField0_ |= 0x00000001;
          alias_ = other.alias_;
          onChanged();
        }
        if (other.hasMac()) {
          bitField0_ |= 0x00000002;
          mac_ = other.mac_;
          onChanged();
        }
        if (other.hasOnline()) {
          setOnline(other.getOnline());
        }
        if (other.hasIp()) {
          bitField0_ |= 0x00000008;
          ip_ = other.ip_;
          onChanged();
        }
        if (other.hasPort()) {
          setPort(other.getPort());
        }
        if (other.hasDeviceId()) {
          bitField0_ |= 0x00000020;
          deviceId_ = other.deviceId_;
          onChanged();
        }
        if (other.hasEncryptKey()) {
          bitField0_ |= 0x00000040;
          encryptKey_ = other.encryptKey_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasAlias()) {
          return false;
        }
        if (!hasMac()) {
          return false;
        }
        if (!hasOnline()) {
          return false;
        }
        if (!hasIp()) {
          return false;
        }
        if (!hasPort()) {
          return false;
        }
        if (!hasDeviceId()) {
          return false;
        }
        if (!hasEncryptKey()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
        com.hanschen.multidex.bean.TestBean7.SmartSocket parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hanschen.multidex.bean.TestBean7.SmartSocket) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object alias_ = "";
      /**
       * <code>required string alias = 1;</code>
       */
      public boolean hasAlias() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string alias = 1;</code>
       */
      public java.lang.String getAlias() {
        java.lang.Object ref = alias_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            alias_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string alias = 1;</code>
       */
      public com.google.protobuf.ByteString
      getAliasBytes() {
        java.lang.Object ref = alias_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          alias_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string alias = 1;</code>
       */
      public Builder setAlias(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        alias_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string alias = 1;</code>
       */
      public Builder clearAlias() {
        bitField0_ = (bitField0_ & ~0x00000001);
        alias_ = getDefaultInstance().getAlias();
        onChanged();
        return this;
      }
      /**
       * <code>required string alias = 1;</code>
       */
      public Builder setAliasBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        alias_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object mac_ = "";
      /**
       * <code>required string mac = 2;</code>
       */
      public boolean hasMac() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string mac = 2;</code>
       */
      public java.lang.String getMac() {
        java.lang.Object ref = mac_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            mac_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string mac = 2;</code>
       */
      public com.google.protobuf.ByteString
      getMacBytes() {
        java.lang.Object ref = mac_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          mac_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string mac = 2;</code>
       */
      public Builder setMac(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        mac_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string mac = 2;</code>
       */
      public Builder clearMac() {
        bitField0_ = (bitField0_ & ~0x00000002);
        mac_ = getDefaultInstance().getMac();
        onChanged();
        return this;
      }
      /**
       * <code>required string mac = 2;</code>
       */
      public Builder setMacBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        mac_ = value;
        onChanged();
        return this;
      }

      private boolean online_ ;
      /**
       * <code>required bool online = 3;</code>
       */
      public boolean hasOnline() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required bool online = 3;</code>
       */
      public boolean getOnline() {
        return online_;
      }
      /**
       * <code>required bool online = 3;</code>
       */
      public Builder setOnline(boolean value) {
        bitField0_ |= 0x00000004;
        online_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool online = 3;</code>
       */
      public Builder clearOnline() {
        bitField0_ = (bitField0_ & ~0x00000004);
        online_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object ip_ = "";
      /**
       * <code>required string ip = 4;</code>
       */
      public boolean hasIp() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required string ip = 4;</code>
       */
      public java.lang.String getIp() {
        java.lang.Object ref = ip_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            ip_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string ip = 4;</code>
       */
      public com.google.protobuf.ByteString
      getIpBytes() {
        java.lang.Object ref = ip_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          ip_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string ip = 4;</code>
       */
      public Builder setIp(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        ip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string ip = 4;</code>
       */
      public Builder clearIp() {
        bitField0_ = (bitField0_ & ~0x00000008);
        ip_ = getDefaultInstance().getIp();
        onChanged();
        return this;
      }
      /**
       * <code>required string ip = 4;</code>
       */
      public Builder setIpBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        ip_ = value;
        onChanged();
        return this;
      }

      private int port_ ;
      /**
       * <code>required int32 port = 5;</code>
       */
      public boolean hasPort() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 port = 5;</code>
       */
      public int getPort() {
        return port_;
      }
      /**
       * <code>required int32 port = 5;</code>
       */
      public Builder setPort(int value) {
        bitField0_ |= 0x00000010;
        port_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 port = 5;</code>
       */
      public Builder clearPort() {
        bitField0_ = (bitField0_ & ~0x00000010);
        port_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object deviceId_ = "";
      /**
       * <code>required string device_id = 6;</code>
       */
      public boolean hasDeviceId() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required string device_id = 6;</code>
       */
      public java.lang.String getDeviceId() {
        java.lang.Object ref = deviceId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            deviceId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string device_id = 6;</code>
       */
      public com.google.protobuf.ByteString
      getDeviceIdBytes() {
        java.lang.Object ref = deviceId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          deviceId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string device_id = 6;</code>
       */
      public Builder setDeviceId(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        deviceId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string device_id = 6;</code>
       */
      public Builder clearDeviceId() {
        bitField0_ = (bitField0_ & ~0x00000020);
        deviceId_ = getDefaultInstance().getDeviceId();
        onChanged();
        return this;
      }
      /**
       * <code>required string device_id = 6;</code>
       */
      public Builder setDeviceIdBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        deviceId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object encryptKey_ = "";
      /**
       * <code>required string encrypt_key = 7;</code>
       */
      public boolean hasEncryptKey() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required string encrypt_key = 7;</code>
       */
      public java.lang.String getEncryptKey() {
        java.lang.Object ref = encryptKey_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            encryptKey_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string encrypt_key = 7;</code>
       */
      public com.google.protobuf.ByteString
      getEncryptKeyBytes() {
        java.lang.Object ref = encryptKey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
                  com.google.protobuf.ByteString.copyFromUtf8(
                          (java.lang.String) ref);
          encryptKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string encrypt_key = 7;</code>
       */
      public Builder setEncryptKey(
              java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000040;
        encryptKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string encrypt_key = 7;</code>
       */
      public Builder clearEncryptKey() {
        bitField0_ = (bitField0_ & ~0x00000040);
        encryptKey_ = getDefaultInstance().getEncryptKey();
        onChanged();
        return this;
      }
      /**
       * <code>required string encrypt_key = 7;</code>
       */
      public Builder setEncryptKeyBytes(
              com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000040;
        encryptKey_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.hanschen.multidex.bean.SmartSocket)
    }

    // @@protoc_insertion_point(class_scope:com.hanschen.multidex.bean.SmartSocket)
    private static final com.hanschen.multidex.bean.TestBean7.SmartSocket DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.hanschen.multidex.bean.TestBean7.SmartSocket();
    }

    public static com.hanschen.multidex.bean.TestBean7.SmartSocket getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SmartSocket>
            PARSER = new com.google.protobuf.AbstractParser<SmartSocket>() {
      public SmartSocket parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
        return new SmartSocket(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SmartSocket> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SmartSocket> getParserForType() {
      return PARSER;
    }

    public com.hanschen.multidex.bean.TestBean7.SmartSocket getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_com_hanschen_multidex_bean_Packet_descriptor;
  private static final
  com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_com_hanschen_multidex_bean_Packet_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_com_hanschen_multidex_bean_RequestParam_descriptor;
  private static final
  com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_com_hanschen_multidex_bean_RequestParam_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_com_hanschen_multidex_bean_Ack_descriptor;
  private static final
  com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_com_hanschen_multidex_bean_Ack_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_com_hanschen_multidex_bean_Notification_descriptor;
  private static final
  com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_com_hanschen_multidex_bean_Notification_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_com_hanschen_multidex_bean_RequestState_descriptor;
  private static final
  com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_com_hanschen_multidex_bean_RequestState_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_com_hanschen_multidex_bean_CloudAccount_descriptor;
  private static final
  com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_com_hanschen_multidex_bean_CloudAccount_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_com_hanschen_multidex_bean_Host_descriptor;
  private static final
  com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_com_hanschen_multidex_bean_Host_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_com_hanschen_multidex_bean_SystemInfo_descriptor;
  private static final
  com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_com_hanschen_multidex_bean_SystemInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_com_hanschen_multidex_bean_GuestWifi_descriptor;
  private static final
  com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_com_hanschen_multidex_bean_GuestWifi_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_com_hanschen_multidex_bean_RepeatMode_descriptor;
  private static final
  com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_com_hanschen_multidex_bean_RepeatMode_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_com_hanschen_multidex_bean_ParentControlTask_descriptor;
  private static final
  com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_com_hanschen_multidex_bean_ParentControlTask_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_com_hanschen_multidex_bean_SuperAdmin_descriptor;
  private static final
  com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_com_hanschen_multidex_bean_SuperAdmin_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_com_hanschen_multidex_bean_HardDiskInfo_descriptor;
  private static final
  com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_com_hanschen_multidex_bean_HardDiskInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_com_hanschen_multidex_bean_StaticIpSetting_descriptor;
  private static final
  com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_com_hanschen_multidex_bean_StaticIpSetting_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_com_hanschen_multidex_bean_PppoeSetting_descriptor;
  private static final
  com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_com_hanschen_multidex_bean_PppoeSetting_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_com_hanschen_multidex_bean_WanSetting_descriptor;
  private static final
  com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_com_hanschen_multidex_bean_WanSetting_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_com_hanschen_multidex_bean_WifiInfo_descriptor;
  private static final
  com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_com_hanschen_multidex_bean_WifiInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_com_hanschen_multidex_bean_WifiSetting_descriptor;
  private static final
  com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_com_hanschen_multidex_bean_WifiSetting_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_com_hanschen_multidex_bean_SpeedLimit_descriptor;
  private static final
  com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_com_hanschen_multidex_bean_SpeedLimit_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_com_hanschen_multidex_bean_RouterInfo_descriptor;
  private static final
  com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_com_hanschen_multidex_bean_RouterInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
          internal_static_com_hanschen_multidex_bean_SmartSocket_descriptor;
  private static final
  com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internal_static_com_hanschen_multidex_bean_SmartSocket_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
  getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
          descriptor;
  static {
    java.lang.String[] descriptorData = {
            "\n\rgateway.proto\022\032com.hanschen.multidex.b" +
                    "ean\"\312\002\n\006Packet\022\031\n\016packet_version\030\001 \002(\005:\001" +
                    "0\022=\n\014message_type\030\002 \002(\0162\'.com.hanschen.m" +
                    "ultidex.bean.MessageType\0227\n\tstream_to\030\003 " +
                    "\002(\0162$.com.hanschen.multidex.bean.StreamT" +
                    "o\022?\n\rrequest_param\030\004 \001(\0132(.com.hanschen." +
                    "multidex.bean.RequestParam\022,\n\003ack\030\005 \001(\0132" +
                    "\037.com.hanschen.multidex.bean.Ack\022>\n\014noti" +
                    "fication\030\006 \001(\0132(.com.hanschen.multidex.b" +
                    "ean.Notification\"\264\006\n\014RequestParam\022\032\n\022aut",
            "horization_list\030\001 \003(\t\0229\n\007account\030\002 \001(\0132(" +
                    ".com.hanschen.multidex.bean.CloudAccount" +
                    "\0227\n\twifi_mode\030\003 \001(\0162$.com.hanschen.multi" +
                    "dex.bean.WifiMode\0229\n\nguest_wifi\030\004 \001(\0132%." +
                    "com.hanschen.multidex.bean.GuestWifi\022\020\n\010" +
                    "mac_addr\030\005 \001(\t\022J\n\023parent_control_task\030\006 " +
                    "\001(\0132-.com.hanschen.multidex.bean.ParentC" +
                    "ontrolTask\022;\n\013super_admin\030\007 \001(\0132&.com.ha" +
                    "nschen.multidex.bean.SuperAdmin\022C\n\017smart" +
                    "_bandwidth\030\010 \001(\0162*.com.hanschen.multidex",
            ".bean.SmartBandwidth\022;\n\013wan_setting\030\t \001(" +
                    "\0132&.com.hanschen.multidex.bean.WanSettin" +
                    "g\022=\n\014wifi_setting\030\n \001(\0132\'.com.hanschen.m" +
                    "ultidex.bean.WifiSetting\022=\n\014power_status" +
                    "\030\013 \001(\0162\'.com.hanschen.multidex.bean.Powe" +
                    "rStatus\022;\n\013speed_limit\030\014 \001(\0132&.com.hansc" +
                    "hen.multidex.bean.SpeedLimit\022B\n\017home_sha" +
                    "re_mode\030\r \001(\0162).com.hanschen.multidex.be" +
                    "an.HomeShareMode\022=\n\014smart_socket\030\016 \001(\0132\'" +
                    ".com.hanschen.multidex.bean.SmartSocket\"",
            "\210\t\n\003Ack\0227\n\005state\030\001 \002(\0132(.com.hanschen.mu" +
                    "ltidex.bean.RequestState\022;\n\tbind_list\030\002 " +
                    "\003(\0132(.com.hanschen.multidex.bean.CloudAc" +
                    "count\0223\n\thost_list\030\003 \003(\0132 .com.hanschen." +
                    "multidex.bean.Host\022O\n\030parent_control_tas" +
                    "k_list\030\004 \003(\0132-.com.hanschen.multidex.bea" +
                    "n.ParentControlTask\022\020\n\010mac_list\030\005 \003(\t\022@\n" +
                    "\020speed_limit_list\030\006 \003(\0132&.com.hanschen.m" +
                    "ultidex.bean.SpeedLimit\022\032\n\022authorization" +
                    "_list\030\007 \003(\t\022>\n\rsmart_sockets\030\010 \003(\0132\'.com",
            ".hanschen.multidex.bean.SmartSocket\022;\n\013s" +
                    "ystem_info\030\t \001(\0132&.com.hanschen.multidex" +
                    ".bean.SystemInfo\0227\n\twifi_mode\030\n \001(\0162$.co" +
                    "m.hanschen.multidex.bean.WifiMode\0229\n\ngue" +
                    "st_wifi\030\013 \001(\0132%.com.hanschen.multidex.be" +
                    "an.GuestWifi\022;\n\013super_admin\030\014 \001(\0132&.com." +
                    "hanschen.multidex.bean.SuperAdmin\022C\n\017sma" +
                    "rt_bandwidth\030\r \001(\0162*.com.hanschen.multid" +
                    "ex.bean.SmartBandwidth\022@\n\016hard_disk_info" +
                    "\030\016 \001(\0132(.com.hanschen.multidex.bean.Hard",
            "DiskInfo\022;\n\013wan_setting\030\017 \001(\0132&.com.hans" +
                    "chen.multidex.bean.WanSetting\022=\n\014wifi_se" +
                    "tting\030\020 \001(\0132\'.com.hanschen.multidex.bean" +
                    ".WifiSetting\022=\n\014power_status\030\021 \001(\0162\'.com" +
                    ".hanschen.multidex.bean.PowerStatus\022;\n\013r" +
                    "outer_info\030\022 \001(\0132&.com.hanschen.multidex" +
                    ".bean.RouterInfo\022\026\n\016samba_password\030\023 \001(\t" +
                    "\022\014\n\004uuid\030\024 \001(\t\022B\n\017home_share_mode\030\025 \001(\0162" +
                    ").com.hanschen.multidex.bean.HomeShareMo" +
                    "de\"p\n\014Notification\022!\n\031hard_disk_format_p",
            "rogress\030\001 \001(\005\022=\n\014power_status\030\002 \001(\0162\'.co" +
                    "m.hanschen.multidex.bean.PowerStatus\"1\n\014" +
                    "RequestState\022\017\n\007success\030\001 \002(\010\022\020\n\010err_cod" +
                    "e\030\002 \001(\005\"7\n\014CloudAccount\022\021\n\tuser_name\030\001 \002" +
                    "(\t\022\024\n\014md5_password\030\002 \001(\t\"\340\001\n\004Host\0227\n\006onl" +
                    "ine\030\001 \002(\0162\'.com.hanschen.multidex.bean.O" +
                    "nlineState\0226\n\010LinkType\030\002 \002(\0162$.com.hansc" +
                    "hen.multidex.bean.LinkType\022\021\n\thost_name\030" +
                    "\003 \002(\t\022\n\n\002ip\030\004 \002(\t\022\013\n\003mac\030\005 \002(\t\022;\n\013device" +
                    "_type\030\006 \002(\0162&.com.hanschen.multidex.bean",
            ".DeviceType\"X\n\nSystemInfo\022\025\n\rcurrent_spe" +
                    "ed\030\001 \002(\005\022\021\n\tmax_speed\030\002 \002(\005\022\017\n\007mem_per\030\003" +
                    " \002(\005\022\017\n\007cpu_per\030\004 \002(\005\"|\n\tGuestWifi\022\016\n\006en" +
                    "able\030\001 \002(\010\022\014\n\004ssid\030\002 \002(\t\022\017\n\007encrypt\030\003 \002(" +
                    "\010\022\020\n\010password\030\004 \001(\t\022\027\n\017start_timestamp\030\005" +
                    " \002(\003\022\025\n\rend_timestamp\030\006 \002(\003\"\265\001\n\nRepeatMo" +
                    "de\022\025\n\006monday\030\001 \002(\010:\005false\022\026\n\007tuesday\030\002 \002" +
                    "(\010:\005false\022\030\n\twednesday\030\003 \002(\010:\005false\022\027\n\010t" +
                    "hursday\030\004 \002(\010:\005false\022\025\n\006friday\030\005 \002(\010:\005fa" +
                    "lse\022\027\n\010saturday\030\006 \002(\010:\005false\022\025\n\006sunday\030\007",
            " \002(\010:\005false\"\247\001\n\021ParentControlTask\022\r\n\005ind" +
                    "ex\030\001 \001(\005\022\020\n\010mac_addr\030\002 \002(\t\022\016\n\006repeat\030\003 \002" +
                    "(\010\022;\n\013repeat_mode\030\004 \001(\0132&.com.hanschen.m" +
                    "ultidex.bean.RepeatMode\022\022\n\nstart_time\030\005 " +
                    "\002(\t\022\020\n\010end_time\030\006 \002(\t\"/\n\nSuperAdmin\022\017\n\007a" +
                    "ccount\030\001 \002(\t\022\020\n\010password\030\002 \002(\t\"o\n\014HardDi" +
                    "skInfo\0228\n\005state\030\001 \002(\0162).com.hanschen.mul" +
                    "tidex.bean.HardDiskState\022\021\n\tfree_size\030\002 " +
                    "\002(\003\022\022\n\ntotal_size\030\003 \002(\003\"M\n\017StaticIpSetti" +
                    "ng\022\n\n\002ip\030\001 \002(\t\022\020\n\010net_mask\030\002 \002(\t\022\017\n\007gate",
            "way\030\003 \002(\t\022\013\n\003dns\030\004 \002(\t\"5\n\014PppoeSetting\022\022" +
                    "\n\npppoe_name\030\001 \002(\t\022\021\n\tpppoe_pwd\030\002 \002(\t\"\314\001" +
                    "\n\nWanSetting\0225\n\010wan_type\030\001 \002(\0162#.com.han" +
                    "schen.multidex.bean.WanType\022F\n\021static_ip" +
                    "_setting\030\002 \002(\0132+.com.hanschen.multidex.b" +
                    "ean.StaticIpSetting\022?\n\rpppoe_setting\030\003 \002" +
                    "(\0132(.com.hanschen.multidex.bean.PppoeSet" +
                    "ting\"*\n\010WifiInfo\022\014\n\004ssid\030\001 \002(\t\022\020\n\010passwo" +
                    "rd\030\002 \002(\t\"}\n\013WifiSetting\0226\n\010wifi_24g\030\001 \002(" +
                    "\0132$.com.hanschen.multidex.bean.WifiInfo\022",
            "6\n\010wifi_58g\030\002 \002(\0132$.com.hanschen.multide" +
                    "x.bean.WifiInfo\"(\n\nSpeedLimit\022\013\n\003mac\030\001 \002" +
                    "(\t\022\r\n\005limit\030\002 \002(\005\"k\n\nRouterInfo\022\r\n\005model" +
                    "\030\001 \002(\t\022\n\n\002sn\030\002 \002(\t\022\024\n\014soft_version\030\003 \002(\t" +
                    "\022\016\n\006wan_ip\030\004 \002(\t\022\013\n\003dns\030\005 \002(\t\022\017\n\007up_time" +
                    "\030\006 \002(\t\"{\n\013SmartSocket\022\r\n\005alias\030\001 \002(\t\022\013\n\003" +
                    "mac\030\002 \002(\t\022\016\n\006online\030\003 \002(\010\022\n\n\002ip\030\004 \002(\t\022\014\n" +
                    "\004port\030\005 \002(\005\022\021\n\tdevice_id\030\006 \002(\t\022\023\n\013encryp" +
                    "t_key\030\007 \002(\t*\356\030\n\013MessageType\022\t\n\005LOGIN\020\000\022\r" +
                    "\n\tLOGIN_ACK\020\001\022\n\n\006LOGOUT\020\002\022\016\n\nLOGOUT_ACK\020",
            "\003\022\024\n\020CHECK_USER_BOUND\020\004\022\030\n\024CHECK_USER_BO" +
                    "UND_ACK\020\005\022\022\n\016GET_BOUND_LIST\020\006\022\026\n\022GET_BOU" +
                    "ND_LIST_ACK\020\007\022\025\n\021REQUEST_HOST_LIST\020\010\022\031\n\025" +
                    "REQUEST_HOST_LIST_ACK\020\t\022\027\n\023REQUEST_SYSTE" +
                    "M_INFO\020\n\022\033\n\027REQUEST_SYSTEM_INFO_ACK\020\013\022\025\n" +
                    "\021REQUEST_WIFI_MODE\020\014\022\031\n\025REQUEST_WIFI_MOD" +
                    "E_ACK\020\r\022\021\n\rSET_WIFI_MODE\020\016\022\025\n\021SET_WIFI_M" +
                    "ODE_ACK\020\017\022\033\n\027REQUEST_GUEST_WIFI_INFO\020\020\022\037" +
                    "\n\033REQUEST_GUEST_WIFI_INFO_ACK\020\021\022\022\n\016SET_G" +
                    "UEST_WIFI\020\022\022\026\n\022SET_GUEST_WIFI_ACK\020\023\022!\n\035R",
            "EQUEST_PARENT_CONTROL_DEVICE\020\024\022%\n!REQUES" +
                    "T_PARENT_CONTROL_DEVICE_ACK\020\025\022\037\n\033REQUEST" +
                    "_PARENT_CONTROL_TASK\020\026\022#\n\037REQUEST_PARENT" +
                    "_CONTROL_TASK_ACK\020\027\022\033\n\027ADD_PARENT_CONTRO" +
                    "L_TASK\020\030\022\037\n\033ADD_PARENT_CONTROL_TASK_ACK\020" +
                    "\031\022\036\n\032DELETE_PARENT_CONTROL_TASK\020\032\022\"\n\036DEL" +
                    "ETE_PARENT_CONTROL_TASK_ACK\020\033\022\036\n\032MODIFY_" +
                    "PARENT_CONTROL_TASK\020\034\022\"\n\036MODIFY_PARENT_C" +
                    "ONTROL_TASK_ACK\020\035\022\034\n\030CHECK_INTERNET_REAC" +
                    "HABLE\020\036\022 \n\034CHECK_INTERNET_REACHABLE_ACK\020",
            "\037\022\031\n\025CHECK_FIREWALL_STATUS\020 \022\035\n\031CHECK_FI" +
                    "REWALL_STATUS_ACK\020!\022\030\n\024OPEN_FIREWALL_STA" +
                    "TUS\020\"\022\034\n\030OPEN_FIREWALL_STATUS_ACK\020#\022\034\n\030R" +
                    "EQUEST_SUPER_ADMIN_INFO\020$\022 \n\034REQUEST_SUP" +
                    "ER_ADMIN_INFO_ACK\020%\022\026\n\022VERIFY_SUPER_ADMI" +
                    "N\020&\022\032\n\026VERIFY_SUPER_ADMIN_ACK\020\'\022\023\n\017SET_S" +
                    "UPER_ADMIN\020(\022\027\n\023SET_SUPER_ADMIN_ACK\020)\022\033\n" +
                    "\027REQUEST_SMART_BANDWIDTH\020*\022\037\n\033REQUEST_SM" +
                    "ART_BANDWIDTH_ACK\020+\022\027\n\023SET_SMART_BANDWID" +
                    "TH\020,\022\033\n\027SET_SMART_BANDWIDTH_ACK\020-\022\032\n\026REQ",
            "UEST_HARD_DISK_INFO\020.\022\036\n\032REQUEST_HARD_DI" +
                    "SK_INFO_ACK\020/\022\024\n\020FORMAT_HARD_DISK\0200\022\030\n\024F" +
                    "ORMAT_HARD_DISK_ACK\0201\022\027\n\023REQUEST_WAN_SET" +
                    "TING\0202\022\033\n\027REQUEST_WAN_SETTING_ACK\0203\022\023\n\017S" +
                    "ET_WAN_SETTING\0204\022\027\n\023SET_WAN_SETTING_ACK\020" +
                    "5\022\034\n\030REQUEST_MASTER_WIFI_INFO\0206\022 \n\034REQUE" +
                    "ST_MASTER_WIFI_INFO_ACK\0207\022\023\n\017SET_MASTER_" +
                    "WIFI\0208\022\027\n\023SET_MASTER_WIFI_ACK\0209\022\026\n\022REQUE" +
                    "ST_STB_STATUS\020:\022\032\n\026REQUEST_STB_STATUS_AC" +
                    "K\020;\022\022\n\016SET_STB_STATUS\020<\022\026\n\022SET_STB_STATU",
            "S_ACK\020=\022\033\n\027REQUEST_MAC_FILTER_LIST\020>\022\037\n\033" +
                    "REQUEST_MAC_FILTER_LIST_ACK\020?\022\031\n\025ADD_MAC" +
                    "_FILTER_DEVICE\020@\022\035\n\031ADD_MAC_FILTER_DEVIC" +
                    "E_ACK\020A\022\034\n\030DELETE_MAC_FILTER_DEVICE\020B\022\037\n" +
                    "\033DLETE_MAC_FILTER_DEVICE_ACK\020C\022\034\n\030REQUES" +
                    "T_LIMIT_SPEED_LIST\020D\022 \n\034REQUEST_LIMIT_SP" +
                    "EED_LIST_ACK\020E\022\032\n\026ADD_LIMIT_SPEED_DEVICE" +
                    "\020F\022\036\n\032ADD_LIMIT_SPEED_DEVICE_ACK\020G\022\035\n\031DE" +
                    "LETE_LIMIT_SPEED_DEVICE\020H\022 \n\034DLETE_LIMIT" +
                    "_SPEED_DEVICE_ACK\020I\022\032\n\026REQUEST_AP_DEVICE",
            "_INFO\020J\022\036\n\032REQUEST_AP_DEVICE_INFO_ACK\020K\022" +
                    "\r\n\tREBOOT_AP\020L\022\021\n\rREBOOT_AP_ACK\020M\022\032\n\026REQ" +
                    "UEST_SAMBA_PASSWORD\020N\022\036\n\032REQUEST_SAMBA_P" +
                    "ASSWORD_ACK\020O\022\023\n\017REQUEST_AP_UUID\020P\022\027\n\023RE" +
                    "QUEST_AP_UUID_ACK\020Q\022\025\n\021NOTIFY_USER_BOUND" +
                    "\020R\022\031\n\025NOTIFY_USER_BOUND_ACK\020S\022\025\n\021UPDATE_" +
                    "HOME_SHARE\020T\022\031\n\025UPDATE_HOME_SHARE_ACK\020U\022" +
                    "\033\n\027REQUEST_HOME_SHARE_MODE\020V\022\037\n\033REQUEST_" +
                    "HOME_SHARE_MODE_ACK\020W\022\027\n\023SET_HOME_SHARE_" +
                    "MODE\020X\022\033\n\027SET_HOME_SHARE_MODE_ACK\020Y\022\036\n\032R",
            "EQUEST_AUTHORIZATION_LIST\020Z\022\"\n\036REQUEST_A" +
                    "UTHORIZATION_LIST_ACK\020[\022\032\n\026SET_AUTHORIZA" +
                    "TION_LIST\020\\\022\036\n\032SET_AUTHORIZATION_LIST_AC" +
                    "K\020]\022\030\n\024UPDATE_ALARM_MESSAGE\020^\022\034\n\030UPDATE_" +
                    "ALARM_MESSAGE_ACK\020_\022 \n\034REQUEST_SMART_SOC" +
                    "KET_DEVICES\020`\022$\n REQUEST_SMART_SOCKET_DE" +
                    "VICES_ACK\020a\022\033\n\027ADD_SMART_SOCKET_DEVICE\020b" +
                    "\022\037\n\033ADD_SMART_SOCKET_DEVICE_ACK\020c\022\036\n\032DEL" +
                    "ETE_SMART_SOCKET_DEVICE\020d\022\"\n\036DELETE_SMAR" +
                    "T_SOCKET_DEVICE_ACK\020e\022\036\n\032MODIFY_SMART_SO",
            "CKET_DEVICE\020f\022\"\n\036MODIFY_SMART_SOCKET_DEV" +
                    "ICE_ACK\020g\022+\n&NOTIFICATION_HARD_DISK_FORM" +
                    "AT_PROGRESS\020\350\007\022$\n\037NOTIFICATION_STB_STATU" +
                    "S_CHANGED\020\351\007\022#\n\036NOTIFICATION_AP_STATUS_C" +
                    "HANGED\020\352\007\022#\n\036NOTIFICATION_HOME_SHARE_UPD" +
                    "ATE\020\353\007\022&\n!NOTIFICATION_ALARM_MESSAGE_UPD" +
                    "ATE\020\354\007\022\036\n\031NOTIFICATION_RESTART_WIFI\020\355\007\022\017" +
                    "\n\nKEEP_ALIVE\020\320\017\022\023\n\016KEEP_ALIVE_ACK\020\321\017*S\n\010" +
                    "StreamTo\022\023\n\017PHONE_TO_SERVER\020\000\022\017\n\013PHONE_T" +
                    "O_AP\020\001\022\020\n\014AP_TO_SERVER\020\002\022\017\n\013AP_TO_PHONE\020",
            "\003*&\n\013OnlineState\022\n\n\006ONLINE\020\000\022\013\n\007OFFLINE\020" +
                    "\001*\"\n\010LinkType\022\010\n\004WIRE\020\000\022\014\n\010WIRELESS\020\001*)\n" +
                    "\nDeviceType\022\006\n\002PC\020\000\022\n\n\006MOBILE\020\001\022\007\n\003STB\020\002" +
                    "*>\n\010WifiMode\022\007\n\003OFF\020\000\022\t\n\005SLEEP\020\001\022\014\n\010STAN" +
                    "DARD\020\002\022\020\n\014THROUGH_WALL\020\003*R\n\016SmartBandwid" +
                    "th\022\014\n\010EQUALITY\020\000\022\016\n\nGAME_FIRST\020\001\022\017\n\013VIDE" +
                    "O_FIRST\020\002\022\021\n\rSURFING_FIRST\020\003*U\n\rHardDisk" +
                    "State\022\020\n\014NO_HARD_DISK\020\000\022\021\n\rNOT_PARTITION" +
                    "\020\001\022\n\n\006NORMAL\020\002\022\023\n\017MULTI_PARTITION\020\003**\n\007W" +
                    "anType\022\010\n\004DHCP\020\000\022\n\n\006STATIC\020\001\022\t\n\005PPPOE\020\002*",
            "*\n\013PowerStatus\022\r\n\tPOWER_OFF\020\000\022\014\n\010POWER_O" +
                    "N\020\001*%\n\rHomeShareMode\022\n\n\006MANUAL\020\000\022\010\n\004AUTO" +
                    "\020\001B)\n\032com.hanschen.multidex.beanB\tTestBe" +
                    "an7H\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
            new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
              public com.google.protobuf.ExtensionRegistry assignDescriptors(
                      com.google.protobuf.Descriptors.FileDescriptor root) {
                descriptor = root;
                return null;
              }
            };
    com.google.protobuf.Descriptors.FileDescriptor
            .internalBuildGeneratedFileFrom(descriptorData,
                    new com.google.protobuf.Descriptors.FileDescriptor[] {
                    }, assigner);
    internal_static_com_hanschen_multidex_bean_Packet_descriptor =
            getDescriptor().getMessageTypes().get(0);
    internal_static_com_hanschen_multidex_bean_Packet_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_com_hanschen_multidex_bean_Packet_descriptor,
            new java.lang.String[] { "PacketVersion", "MessageType", "StreamTo", "RequestParam", "Ack", "Notification", });
    internal_static_com_hanschen_multidex_bean_RequestParam_descriptor =
            getDescriptor().getMessageTypes().get(1);
    internal_static_com_hanschen_multidex_bean_RequestParam_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_com_hanschen_multidex_bean_RequestParam_descriptor,
            new java.lang.String[] { "AuthorizationList", "Account", "WifiMode", "GuestWifi", "MacAddr", "ParentControlTask", "SuperAdmin", "SmartBandwidth", "WanSetting", "WifiSetting", "PowerStatus", "SpeedLimit", "HomeShareMode", "SmartSocket", });
    internal_static_com_hanschen_multidex_bean_Ack_descriptor =
            getDescriptor().getMessageTypes().get(2);
    internal_static_com_hanschen_multidex_bean_Ack_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_com_hanschen_multidex_bean_Ack_descriptor,
            new java.lang.String[] { "State", "BindList", "HostList", "ParentControlTaskList", "MacList", "SpeedLimitList", "AuthorizationList", "SmartSockets", "SystemInfo", "WifiMode", "GuestWifi", "SuperAdmin", "SmartBandwidth", "HardDiskInfo", "WanSetting", "WifiSetting", "PowerStatus", "RouterInfo", "SambaPassword", "Uuid", "HomeShareMode", });
    internal_static_com_hanschen_multidex_bean_Notification_descriptor =
            getDescriptor().getMessageTypes().get(3);
    internal_static_com_hanschen_multidex_bean_Notification_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_com_hanschen_multidex_bean_Notification_descriptor,
            new java.lang.String[] { "HardDiskFormatProgress", "PowerStatus", });
    internal_static_com_hanschen_multidex_bean_RequestState_descriptor =
            getDescriptor().getMessageTypes().get(4);
    internal_static_com_hanschen_multidex_bean_RequestState_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_com_hanschen_multidex_bean_RequestState_descriptor,
            new java.lang.String[] { "Success", "ErrCode", });
    internal_static_com_hanschen_multidex_bean_CloudAccount_descriptor =
            getDescriptor().getMessageTypes().get(5);
    internal_static_com_hanschen_multidex_bean_CloudAccount_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_com_hanschen_multidex_bean_CloudAccount_descriptor,
            new java.lang.String[] { "UserName", "Md5Password", });
    internal_static_com_hanschen_multidex_bean_Host_descriptor =
            getDescriptor().getMessageTypes().get(6);
    internal_static_com_hanschen_multidex_bean_Host_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_com_hanschen_multidex_bean_Host_descriptor,
            new java.lang.String[] { "Online", "LinkType", "HostName", "Ip", "Mac", "DeviceType", });
    internal_static_com_hanschen_multidex_bean_SystemInfo_descriptor =
            getDescriptor().getMessageTypes().get(7);
    internal_static_com_hanschen_multidex_bean_SystemInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_com_hanschen_multidex_bean_SystemInfo_descriptor,
            new java.lang.String[] { "CurrentSpeed", "MaxSpeed", "MemPer", "CpuPer", });
    internal_static_com_hanschen_multidex_bean_GuestWifi_descriptor =
            getDescriptor().getMessageTypes().get(8);
    internal_static_com_hanschen_multidex_bean_GuestWifi_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_com_hanschen_multidex_bean_GuestWifi_descriptor,
            new java.lang.String[] { "Enable", "Ssid", "Encrypt", "Password", "StartTimestamp", "EndTimestamp", });
    internal_static_com_hanschen_multidex_bean_RepeatMode_descriptor =
            getDescriptor().getMessageTypes().get(9);
    internal_static_com_hanschen_multidex_bean_RepeatMode_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_com_hanschen_multidex_bean_RepeatMode_descriptor,
            new java.lang.String[] { "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday", });
    internal_static_com_hanschen_multidex_bean_ParentControlTask_descriptor =
            getDescriptor().getMessageTypes().get(10);
    internal_static_com_hanschen_multidex_bean_ParentControlTask_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_com_hanschen_multidex_bean_ParentControlTask_descriptor,
            new java.lang.String[] { "Index", "MacAddr", "Repeat", "RepeatMode", "StartTime", "EndTime", });
    internal_static_com_hanschen_multidex_bean_SuperAdmin_descriptor =
            getDescriptor().getMessageTypes().get(11);
    internal_static_com_hanschen_multidex_bean_SuperAdmin_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_com_hanschen_multidex_bean_SuperAdmin_descriptor,
            new java.lang.String[] { "Account", "Password", });
    internal_static_com_hanschen_multidex_bean_HardDiskInfo_descriptor =
            getDescriptor().getMessageTypes().get(12);
    internal_static_com_hanschen_multidex_bean_HardDiskInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_com_hanschen_multidex_bean_HardDiskInfo_descriptor,
            new java.lang.String[] { "State", "FreeSize", "TotalSize", });
    internal_static_com_hanschen_multidex_bean_StaticIpSetting_descriptor =
            getDescriptor().getMessageTypes().get(13);
    internal_static_com_hanschen_multidex_bean_StaticIpSetting_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_com_hanschen_multidex_bean_StaticIpSetting_descriptor,
            new java.lang.String[] { "Ip", "NetMask", "Gateway", "Dns", });
    internal_static_com_hanschen_multidex_bean_PppoeSetting_descriptor =
            getDescriptor().getMessageTypes().get(14);
    internal_static_com_hanschen_multidex_bean_PppoeSetting_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_com_hanschen_multidex_bean_PppoeSetting_descriptor,
            new java.lang.String[] { "PppoeName", "PppoePwd", });
    internal_static_com_hanschen_multidex_bean_WanSetting_descriptor =
            getDescriptor().getMessageTypes().get(15);
    internal_static_com_hanschen_multidex_bean_WanSetting_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_com_hanschen_multidex_bean_WanSetting_descriptor,
            new java.lang.String[] { "WanType", "StaticIpSetting", "PppoeSetting", });
    internal_static_com_hanschen_multidex_bean_WifiInfo_descriptor =
            getDescriptor().getMessageTypes().get(16);
    internal_static_com_hanschen_multidex_bean_WifiInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_com_hanschen_multidex_bean_WifiInfo_descriptor,
            new java.lang.String[] { "Ssid", "Password", });
    internal_static_com_hanschen_multidex_bean_WifiSetting_descriptor =
            getDescriptor().getMessageTypes().get(17);
    internal_static_com_hanschen_multidex_bean_WifiSetting_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_com_hanschen_multidex_bean_WifiSetting_descriptor,
            new java.lang.String[] { "Wifi24G", "Wifi58G", });
    internal_static_com_hanschen_multidex_bean_SpeedLimit_descriptor =
            getDescriptor().getMessageTypes().get(18);
    internal_static_com_hanschen_multidex_bean_SpeedLimit_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_com_hanschen_multidex_bean_SpeedLimit_descriptor,
            new java.lang.String[] { "Mac", "Limit", });
    internal_static_com_hanschen_multidex_bean_RouterInfo_descriptor =
            getDescriptor().getMessageTypes().get(19);
    internal_static_com_hanschen_multidex_bean_RouterInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_com_hanschen_multidex_bean_RouterInfo_descriptor,
            new java.lang.String[] { "Model", "Sn", "SoftVersion", "WanIp", "Dns", "UpTime", });
    internal_static_com_hanschen_multidex_bean_SmartSocket_descriptor =
            getDescriptor().getMessageTypes().get(20);
    internal_static_com_hanschen_multidex_bean_SmartSocket_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_com_hanschen_multidex_bean_SmartSocket_descriptor,
            new java.lang.String[] { "Alias", "Mac", "Online", "Ip", "Port", "DeviceId", "EncryptKey", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
