// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: qmessages.proto

package com.mktech.newprotocols.tcpserver.transfer.bean;

public final class Qmessages {
  private Qmessages() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code com.mktech.newprotocols.tcpserver.transfer.bean.PackType}
   */
  public enum PackType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>heartbeatReq = 4;</code>
     */
    heartbeatReq(0, 4),
    /**
     * <code>heartbeatAck = 5;</code>
     */
    heartbeatAck(1, 5),
    /**
     * <code>rpcMessage = 6;</code>
     */
    rpcMessage(2, 6),
    /**
     * <code>rpcAck = 7;</code>
     */
    rpcAck(3, 7),
    /**
     * <code>getAccountSessionidReq = 8;</code>
     */
    getAccountSessionidReq(4, 8),
    /**
     * <code>getAccountSessionidAck = 9;</code>
     */
    getAccountSessionidAck(5, 9),
    ;

    /**
     * <code>heartbeatReq = 4;</code>
     */
    public static final int heartbeatReq_VALUE = 4;
    /**
     * <code>heartbeatAck = 5;</code>
     */
    public static final int heartbeatAck_VALUE = 5;
    /**
     * <code>rpcMessage = 6;</code>
     */
    public static final int rpcMessage_VALUE = 6;
    /**
     * <code>rpcAck = 7;</code>
     */
    public static final int rpcAck_VALUE = 7;
    /**
     * <code>getAccountSessionidReq = 8;</code>
     */
    public static final int getAccountSessionidReq_VALUE = 8;
    /**
     * <code>getAccountSessionidAck = 9;</code>
     */
    public static final int getAccountSessionidAck_VALUE = 9;


    public final int getNumber() {
      return value;
    }

    public static PackType valueOf(int value) {
      switch (value) {
        case 4: return heartbeatReq;
        case 5: return heartbeatAck;
        case 6: return rpcMessage;
        case 7: return rpcAck;
        case 8: return getAccountSessionidReq;
        case 9: return getAccountSessionidAck;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PackType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PackType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PackType>() {
            public PackType findValueByNumber(int number) {
              return PackType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return Qmessages.getDescriptor().getEnumTypes().get(0);
    }

    private static final PackType[] VALUES = values();

    public static PackType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private PackType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.mktech.newprotocols.tcpserver.transfer.bean.PackType)
  }

  public interface QPackOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.mktech.newprotocols.tcpserver.transfer.bean.QPack)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 packet_version = 1 [default = 0];</code>
     */
    boolean hasPacketVersion();
    /**
     * <code>optional int32 packet_version = 1 [default = 0];</code>
     */
    int getPacketVersion();

    /**
     * <code>required .com.mktech.newprotocols.tcpserver.transfer.bean.PackType packet_type = 2;</code>
     */
    boolean hasPacketType();
    /**
     * <code>required .com.mktech.newprotocols.tcpserver.transfer.bean.PackType packet_type = 2;</code>
     */
    PackType getPacketType();

    /**
     * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.HeartbeatReq heartbeat_req = 4;</code>
     */
    boolean hasHeartbeatReq();
    /**
     * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.HeartbeatReq heartbeat_req = 4;</code>
     */
    HeartbeatReq getHeartbeatReq();
    /**
     * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.HeartbeatReq heartbeat_req = 4;</code>
     */
    HeartbeatReqOrBuilder getHeartbeatReqOrBuilder();

    /**
     * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.HeartbeatAck heartbeat_ack = 5;</code>
     */
    boolean hasHeartbeatAck();
    /**
     * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.HeartbeatAck heartbeat_ack = 5;</code>
     */
    HeartbeatAck getHeartbeatAck();
    /**
     * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.HeartbeatAck heartbeat_ack = 5;</code>
     */
    HeartbeatAckOrBuilder getHeartbeatAckOrBuilder();

    /**
     * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.RpcMessage rpc_req = 6;</code>
     *
     * <pre>
     *rpc消息请求
     * </pre>
     */
    boolean hasRpcReq();
    /**
     * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.RpcMessage rpc_req = 6;</code>
     *
     * <pre>
     *rpc消息请求
     * </pre>
     */
    RpcMessage getRpcReq();
    /**
     * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.RpcMessage rpc_req = 6;</code>
     *
     * <pre>
     *rpc消息请求
     * </pre>
     */
    RpcMessageOrBuilder getRpcReqOrBuilder();

    /**
     * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.RPCMessageAck rpc_ack = 7;</code>
     *
     * <pre>
     *rpc请求消息响应
     * </pre>
     */
    boolean hasRpcAck();
    /**
     * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.RPCMessageAck rpc_ack = 7;</code>
     *
     * <pre>
     *rpc请求消息响应
     * </pre>
     */
    RPCMessageAck getRpcAck();
    /**
     * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.RPCMessageAck rpc_ack = 7;</code>
     *
     * <pre>
     *rpc请求消息响应
     * </pre>
     */
    RPCMessageAckOrBuilder getRpcAckOrBuilder();

    /**
     * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.GetAccountSessionidReq get_account_sessionid_req = 8;</code>
     *
     * <pre>
     *获取一个账号的sessionid请求
     * </pre>
     */
    boolean hasGetAccountSessionidReq();
    /**
     * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.GetAccountSessionidReq get_account_sessionid_req = 8;</code>
     *
     * <pre>
     *获取一个账号的sessionid请求
     * </pre>
     */
    GetAccountSessionidReq getGetAccountSessionidReq();
    /**
     * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.GetAccountSessionidReq get_account_sessionid_req = 8;</code>
     *
     * <pre>
     *获取一个账号的sessionid请求
     * </pre>
     */
    GetAccountSessionidReqOrBuilder getGetAccountSessionidReqOrBuilder();

    /**
     * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.GetAccountSessionidAck get_account_sessionid_ack = 9;</code>
     *
     * <pre>
     *获取账号sessionid响应
     * </pre>
     */
    boolean hasGetAccountSessionidAck();
    /**
     * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.GetAccountSessionidAck get_account_sessionid_ack = 9;</code>
     *
     * <pre>
     *获取账号sessionid响应
     * </pre>
     */
    GetAccountSessionidAck getGetAccountSessionidAck();
    /**
     * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.GetAccountSessionidAck get_account_sessionid_ack = 9;</code>
     *
     * <pre>
     *获取账号sessionid响应
     * </pre>
     */
    GetAccountSessionidAckOrBuilder getGetAccountSessionidAckOrBuilder();
  }
  /**
   * Protobuf type {@code com.mktech.newprotocols.tcpserver.transfer.bean.QPack}
   */
  public  static final class QPack extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.mktech.newprotocols.tcpserver.transfer.bean.QPack)
      QPackOrBuilder {
    // Use QPack.newBuilder() to construct.
    private QPack(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private QPack() {
      packetVersion_ = 0;
      packetType_ = 4;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private QPack(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              packetVersion_ = input.readInt32();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              PackType value = PackType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                packetType_ = rawValue;
              }
              break;
            }
            case 34: {
              HeartbeatReq.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = heartbeatReq_.toBuilder();
              }
              heartbeatReq_ = input.readMessage(HeartbeatReq.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(heartbeatReq_);
                heartbeatReq_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 42: {
              HeartbeatAck.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = heartbeatAck_.toBuilder();
              }
              heartbeatAck_ = input.readMessage(HeartbeatAck.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(heartbeatAck_);
                heartbeatAck_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 50: {
              RpcMessage.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = rpcReq_.toBuilder();
              }
              rpcReq_ = input.readMessage(RpcMessage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(rpcReq_);
                rpcReq_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 58: {
              RPCMessageAck.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = rpcAck_.toBuilder();
              }
              rpcAck_ = input.readMessage(RPCMessageAck.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(rpcAck_);
                rpcAck_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 66: {
              GetAccountSessionidReq.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = getAccountSessionidReq_.toBuilder();
              }
              getAccountSessionidReq_ = input.readMessage(GetAccountSessionidReq.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(getAccountSessionidReq_);
                getAccountSessionidReq_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 74: {
              GetAccountSessionidAck.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = getAccountSessionidAck_.toBuilder();
              }
              getAccountSessionidAck_ = input.readMessage(GetAccountSessionidAck.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(getAccountSessionidAck_);
                getAccountSessionidAck_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Qmessages.internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_QPack_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Qmessages.internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_QPack_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              QPack.class, Builder.class);
    }

    private int bitField0_;
    public static final int PACKET_VERSION_FIELD_NUMBER = 1;
    private int packetVersion_;
    /**
     * <code>optional int32 packet_version = 1 [default = 0];</code>
     */
    public boolean hasPacketVersion() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 packet_version = 1 [default = 0];</code>
     */
    public int getPacketVersion() {
      return packetVersion_;
    }

    public static final int PACKET_TYPE_FIELD_NUMBER = 2;
    private int packetType_;
    /**
     * <code>required .com.mktech.newprotocols.tcpserver.transfer.bean.PackType packet_type = 2;</code>
     */
    public boolean hasPacketType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .com.mktech.newprotocols.tcpserver.transfer.bean.PackType packet_type = 2;</code>
     */
    public PackType getPacketType() {
      PackType result = PackType.valueOf(packetType_);
      return result == null ? PackType.heartbeatReq : result;
    }

    public static final int HEARTBEAT_REQ_FIELD_NUMBER = 4;
    private HeartbeatReq heartbeatReq_;
    /**
     * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.HeartbeatReq heartbeat_req = 4;</code>
     */
    public boolean hasHeartbeatReq() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.HeartbeatReq heartbeat_req = 4;</code>
     */
    public HeartbeatReq getHeartbeatReq() {
      return heartbeatReq_ == null ? HeartbeatReq.getDefaultInstance() : heartbeatReq_;
    }
    /**
     * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.HeartbeatReq heartbeat_req = 4;</code>
     */
    public HeartbeatReqOrBuilder getHeartbeatReqOrBuilder() {
      return heartbeatReq_ == null ? HeartbeatReq.getDefaultInstance() : heartbeatReq_;
    }

    public static final int HEARTBEAT_ACK_FIELD_NUMBER = 5;
    private HeartbeatAck heartbeatAck_;
    /**
     * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.HeartbeatAck heartbeat_ack = 5;</code>
     */
    public boolean hasHeartbeatAck() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.HeartbeatAck heartbeat_ack = 5;</code>
     */
    public HeartbeatAck getHeartbeatAck() {
      return heartbeatAck_ == null ? HeartbeatAck.getDefaultInstance() : heartbeatAck_;
    }
    /**
     * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.HeartbeatAck heartbeat_ack = 5;</code>
     */
    public HeartbeatAckOrBuilder getHeartbeatAckOrBuilder() {
      return heartbeatAck_ == null ? HeartbeatAck.getDefaultInstance() : heartbeatAck_;
    }

    public static final int RPC_REQ_FIELD_NUMBER = 6;
    private RpcMessage rpcReq_;
    /**
     * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.RpcMessage rpc_req = 6;</code>
     *
     * <pre>
     *rpc消息请求
     * </pre>
     */
    public boolean hasRpcReq() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.RpcMessage rpc_req = 6;</code>
     *
     * <pre>
     *rpc消息请求
     * </pre>
     */
    public RpcMessage getRpcReq() {
      return rpcReq_ == null ? RpcMessage.getDefaultInstance() : rpcReq_;
    }
    /**
     * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.RpcMessage rpc_req = 6;</code>
     *
     * <pre>
     *rpc消息请求
     * </pre>
     */
    public RpcMessageOrBuilder getRpcReqOrBuilder() {
      return rpcReq_ == null ? RpcMessage.getDefaultInstance() : rpcReq_;
    }

    public static final int RPC_ACK_FIELD_NUMBER = 7;
    private RPCMessageAck rpcAck_;
    /**
     * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.RPCMessageAck rpc_ack = 7;</code>
     *
     * <pre>
     *rpc请求消息响应
     * </pre>
     */
    public boolean hasRpcAck() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.RPCMessageAck rpc_ack = 7;</code>
     *
     * <pre>
     *rpc请求消息响应
     * </pre>
     */
    public RPCMessageAck getRpcAck() {
      return rpcAck_ == null ? RPCMessageAck.getDefaultInstance() : rpcAck_;
    }
    /**
     * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.RPCMessageAck rpc_ack = 7;</code>
     *
     * <pre>
     *rpc请求消息响应
     * </pre>
     */
    public RPCMessageAckOrBuilder getRpcAckOrBuilder() {
      return rpcAck_ == null ? RPCMessageAck.getDefaultInstance() : rpcAck_;
    }

    public static final int GET_ACCOUNT_SESSIONID_REQ_FIELD_NUMBER = 8;
    private GetAccountSessionidReq getAccountSessionidReq_;
    /**
     * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.GetAccountSessionidReq get_account_sessionid_req = 8;</code>
     *
     * <pre>
     *获取一个账号的sessionid请求
     * </pre>
     */
    public boolean hasGetAccountSessionidReq() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.GetAccountSessionidReq get_account_sessionid_req = 8;</code>
     *
     * <pre>
     *获取一个账号的sessionid请求
     * </pre>
     */
    public GetAccountSessionidReq getGetAccountSessionidReq() {
      return getAccountSessionidReq_ == null ? GetAccountSessionidReq.getDefaultInstance() : getAccountSessionidReq_;
    }
    /**
     * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.GetAccountSessionidReq get_account_sessionid_req = 8;</code>
     *
     * <pre>
     *获取一个账号的sessionid请求
     * </pre>
     */
    public GetAccountSessionidReqOrBuilder getGetAccountSessionidReqOrBuilder() {
      return getAccountSessionidReq_ == null ? GetAccountSessionidReq.getDefaultInstance() : getAccountSessionidReq_;
    }

    public static final int GET_ACCOUNT_SESSIONID_ACK_FIELD_NUMBER = 9;
    private GetAccountSessionidAck getAccountSessionidAck_;
    /**
     * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.GetAccountSessionidAck get_account_sessionid_ack = 9;</code>
     *
     * <pre>
     *获取账号sessionid响应
     * </pre>
     */
    public boolean hasGetAccountSessionidAck() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.GetAccountSessionidAck get_account_sessionid_ack = 9;</code>
     *
     * <pre>
     *获取账号sessionid响应
     * </pre>
     */
    public GetAccountSessionidAck getGetAccountSessionidAck() {
      return getAccountSessionidAck_ == null ? GetAccountSessionidAck.getDefaultInstance() : getAccountSessionidAck_;
    }
    /**
     * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.GetAccountSessionidAck get_account_sessionid_ack = 9;</code>
     *
     * <pre>
     *获取账号sessionid响应
     * </pre>
     */
    public GetAccountSessionidAckOrBuilder getGetAccountSessionidAckOrBuilder() {
      return getAccountSessionidAck_ == null ? GetAccountSessionidAck.getDefaultInstance() : getAccountSessionidAck_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasPacketType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, packetVersion_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, packetType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(4, getHeartbeatReq());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(5, getHeartbeatAck());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(6, getRpcReq());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(7, getRpcAck());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(8, getGetAccountSessionidReq());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(9, getGetAccountSessionidAck());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, packetVersion_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, packetType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getHeartbeatReq());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getHeartbeatAck());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getRpcReq());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getRpcAck());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getGetAccountSessionidReq());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getGetAccountSessionidAck());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static QPack parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static QPack parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static QPack parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static QPack parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static QPack parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static QPack parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static QPack parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static QPack parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static QPack parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static QPack parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(QPack prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.mktech.newprotocols.tcpserver.transfer.bean.QPack}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.mktech.newprotocols.tcpserver.transfer.bean.QPack)
        QPackOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Qmessages.internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_QPack_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Qmessages.internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_QPack_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                QPack.class, Builder.class);
      }

      // Construct using com.mktech.newprotocols.tcpserver.transfer.bean.Qmessages.QPack.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getHeartbeatReqFieldBuilder();
          getHeartbeatAckFieldBuilder();
          getRpcReqFieldBuilder();
          getRpcAckFieldBuilder();
          getGetAccountSessionidReqFieldBuilder();
          getGetAccountSessionidAckFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        packetVersion_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        packetType_ = 4;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (heartbeatReqBuilder_ == null) {
          heartbeatReq_ = null;
        } else {
          heartbeatReqBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (heartbeatAckBuilder_ == null) {
          heartbeatAck_ = null;
        } else {
          heartbeatAckBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (rpcReqBuilder_ == null) {
          rpcReq_ = null;
        } else {
          rpcReqBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (rpcAckBuilder_ == null) {
          rpcAck_ = null;
        } else {
          rpcAckBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (getAccountSessionidReqBuilder_ == null) {
          getAccountSessionidReq_ = null;
        } else {
          getAccountSessionidReqBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        if (getAccountSessionidAckBuilder_ == null) {
          getAccountSessionidAck_ = null;
        } else {
          getAccountSessionidAckBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Qmessages.internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_QPack_descriptor;
      }

      public QPack getDefaultInstanceForType() {
        return QPack.getDefaultInstance();
      }

      public QPack build() {
        QPack result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public QPack buildPartial() {
        QPack result = new QPack(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.packetVersion_ = packetVersion_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.packetType_ = packetType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (heartbeatReqBuilder_ == null) {
          result.heartbeatReq_ = heartbeatReq_;
        } else {
          result.heartbeatReq_ = heartbeatReqBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (heartbeatAckBuilder_ == null) {
          result.heartbeatAck_ = heartbeatAck_;
        } else {
          result.heartbeatAck_ = heartbeatAckBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (rpcReqBuilder_ == null) {
          result.rpcReq_ = rpcReq_;
        } else {
          result.rpcReq_ = rpcReqBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (rpcAckBuilder_ == null) {
          result.rpcAck_ = rpcAck_;
        } else {
          result.rpcAck_ = rpcAckBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (getAccountSessionidReqBuilder_ == null) {
          result.getAccountSessionidReq_ = getAccountSessionidReq_;
        } else {
          result.getAccountSessionidReq_ = getAccountSessionidReqBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        if (getAccountSessionidAckBuilder_ == null) {
          result.getAccountSessionidAck_ = getAccountSessionidAck_;
        } else {
          result.getAccountSessionidAck_ = getAccountSessionidAckBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof QPack) {
          return mergeFrom((QPack)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(QPack other) {
        if (other == QPack.getDefaultInstance()) return this;
        if (other.hasPacketVersion()) {
          setPacketVersion(other.getPacketVersion());
        }
        if (other.hasPacketType()) {
          setPacketType(other.getPacketType());
        }
        if (other.hasHeartbeatReq()) {
          mergeHeartbeatReq(other.getHeartbeatReq());
        }
        if (other.hasHeartbeatAck()) {
          mergeHeartbeatAck(other.getHeartbeatAck());
        }
        if (other.hasRpcReq()) {
          mergeRpcReq(other.getRpcReq());
        }
        if (other.hasRpcAck()) {
          mergeRpcAck(other.getRpcAck());
        }
        if (other.hasGetAccountSessionidReq()) {
          mergeGetAccountSessionidReq(other.getGetAccountSessionidReq());
        }
        if (other.hasGetAccountSessionidAck()) {
          mergeGetAccountSessionidAck(other.getGetAccountSessionidAck());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPacketType()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        QPack parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (QPack) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int packetVersion_ ;
      /**
       * <code>optional int32 packet_version = 1 [default = 0];</code>
       */
      public boolean hasPacketVersion() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 packet_version = 1 [default = 0];</code>
       */
      public int getPacketVersion() {
        return packetVersion_;
      }
      /**
       * <code>optional int32 packet_version = 1 [default = 0];</code>
       */
      public Builder setPacketVersion(int value) {
        bitField0_ |= 0x00000001;
        packetVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 packet_version = 1 [default = 0];</code>
       */
      public Builder clearPacketVersion() {
        bitField0_ = (bitField0_ & ~0x00000001);
        packetVersion_ = 0;
        onChanged();
        return this;
      }

      private int packetType_ = 4;
      /**
       * <code>required .com.mktech.newprotocols.tcpserver.transfer.bean.PackType packet_type = 2;</code>
       */
      public boolean hasPacketType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .com.mktech.newprotocols.tcpserver.transfer.bean.PackType packet_type = 2;</code>
       */
      public PackType getPacketType() {
        PackType result = PackType.valueOf(packetType_);
        return result == null ? PackType.heartbeatReq : result;
      }
      /**
       * <code>required .com.mktech.newprotocols.tcpserver.transfer.bean.PackType packet_type = 2;</code>
       */
      public Builder setPacketType(PackType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        packetType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .com.mktech.newprotocols.tcpserver.transfer.bean.PackType packet_type = 2;</code>
       */
      public Builder clearPacketType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        packetType_ = 4;
        onChanged();
        return this;
      }

      private HeartbeatReq heartbeatReq_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          HeartbeatReq, HeartbeatReq.Builder, HeartbeatReqOrBuilder> heartbeatReqBuilder_;
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.HeartbeatReq heartbeat_req = 4;</code>
       */
      public boolean hasHeartbeatReq() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.HeartbeatReq heartbeat_req = 4;</code>
       */
      public HeartbeatReq getHeartbeatReq() {
        if (heartbeatReqBuilder_ == null) {
          return heartbeatReq_ == null ? HeartbeatReq.getDefaultInstance() : heartbeatReq_;
        } else {
          return heartbeatReqBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.HeartbeatReq heartbeat_req = 4;</code>
       */
      public Builder setHeartbeatReq(HeartbeatReq value) {
        if (heartbeatReqBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          heartbeatReq_ = value;
          onChanged();
        } else {
          heartbeatReqBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.HeartbeatReq heartbeat_req = 4;</code>
       */
      public Builder setHeartbeatReq(
          HeartbeatReq.Builder builderForValue) {
        if (heartbeatReqBuilder_ == null) {
          heartbeatReq_ = builderForValue.build();
          onChanged();
        } else {
          heartbeatReqBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.HeartbeatReq heartbeat_req = 4;</code>
       */
      public Builder mergeHeartbeatReq(HeartbeatReq value) {
        if (heartbeatReqBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              heartbeatReq_ != null &&
              heartbeatReq_ != HeartbeatReq.getDefaultInstance()) {
            heartbeatReq_ =
              HeartbeatReq.newBuilder(heartbeatReq_).mergeFrom(value).buildPartial();
          } else {
            heartbeatReq_ = value;
          }
          onChanged();
        } else {
          heartbeatReqBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.HeartbeatReq heartbeat_req = 4;</code>
       */
      public Builder clearHeartbeatReq() {
        if (heartbeatReqBuilder_ == null) {
          heartbeatReq_ = null;
          onChanged();
        } else {
          heartbeatReqBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.HeartbeatReq heartbeat_req = 4;</code>
       */
      public HeartbeatReq.Builder getHeartbeatReqBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getHeartbeatReqFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.HeartbeatReq heartbeat_req = 4;</code>
       */
      public HeartbeatReqOrBuilder getHeartbeatReqOrBuilder() {
        if (heartbeatReqBuilder_ != null) {
          return heartbeatReqBuilder_.getMessageOrBuilder();
        } else {
          return heartbeatReq_ == null ?
              HeartbeatReq.getDefaultInstance() : heartbeatReq_;
        }
      }
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.HeartbeatReq heartbeat_req = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          HeartbeatReq, HeartbeatReq.Builder, HeartbeatReqOrBuilder>
          getHeartbeatReqFieldBuilder() {
        if (heartbeatReqBuilder_ == null) {
          heartbeatReqBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              HeartbeatReq, HeartbeatReq.Builder, HeartbeatReqOrBuilder>(
                  getHeartbeatReq(),
                  getParentForChildren(),
                  isClean());
          heartbeatReq_ = null;
        }
        return heartbeatReqBuilder_;
      }

      private HeartbeatAck heartbeatAck_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          HeartbeatAck, HeartbeatAck.Builder, HeartbeatAckOrBuilder> heartbeatAckBuilder_;
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.HeartbeatAck heartbeat_ack = 5;</code>
       */
      public boolean hasHeartbeatAck() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.HeartbeatAck heartbeat_ack = 5;</code>
       */
      public HeartbeatAck getHeartbeatAck() {
        if (heartbeatAckBuilder_ == null) {
          return heartbeatAck_ == null ? HeartbeatAck.getDefaultInstance() : heartbeatAck_;
        } else {
          return heartbeatAckBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.HeartbeatAck heartbeat_ack = 5;</code>
       */
      public Builder setHeartbeatAck(HeartbeatAck value) {
        if (heartbeatAckBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          heartbeatAck_ = value;
          onChanged();
        } else {
          heartbeatAckBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.HeartbeatAck heartbeat_ack = 5;</code>
       */
      public Builder setHeartbeatAck(
          HeartbeatAck.Builder builderForValue) {
        if (heartbeatAckBuilder_ == null) {
          heartbeatAck_ = builderForValue.build();
          onChanged();
        } else {
          heartbeatAckBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.HeartbeatAck heartbeat_ack = 5;</code>
       */
      public Builder mergeHeartbeatAck(HeartbeatAck value) {
        if (heartbeatAckBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              heartbeatAck_ != null &&
              heartbeatAck_ != HeartbeatAck.getDefaultInstance()) {
            heartbeatAck_ =
              HeartbeatAck.newBuilder(heartbeatAck_).mergeFrom(value).buildPartial();
          } else {
            heartbeatAck_ = value;
          }
          onChanged();
        } else {
          heartbeatAckBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.HeartbeatAck heartbeat_ack = 5;</code>
       */
      public Builder clearHeartbeatAck() {
        if (heartbeatAckBuilder_ == null) {
          heartbeatAck_ = null;
          onChanged();
        } else {
          heartbeatAckBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.HeartbeatAck heartbeat_ack = 5;</code>
       */
      public HeartbeatAck.Builder getHeartbeatAckBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getHeartbeatAckFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.HeartbeatAck heartbeat_ack = 5;</code>
       */
      public HeartbeatAckOrBuilder getHeartbeatAckOrBuilder() {
        if (heartbeatAckBuilder_ != null) {
          return heartbeatAckBuilder_.getMessageOrBuilder();
        } else {
          return heartbeatAck_ == null ?
              HeartbeatAck.getDefaultInstance() : heartbeatAck_;
        }
      }
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.HeartbeatAck heartbeat_ack = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          HeartbeatAck, HeartbeatAck.Builder, HeartbeatAckOrBuilder>
          getHeartbeatAckFieldBuilder() {
        if (heartbeatAckBuilder_ == null) {
          heartbeatAckBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              HeartbeatAck, HeartbeatAck.Builder, HeartbeatAckOrBuilder>(
                  getHeartbeatAck(),
                  getParentForChildren(),
                  isClean());
          heartbeatAck_ = null;
        }
        return heartbeatAckBuilder_;
      }

      private RpcMessage rpcReq_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          RpcMessage, RpcMessage.Builder, RpcMessageOrBuilder> rpcReqBuilder_;
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.RpcMessage rpc_req = 6;</code>
       *
       * <pre>
       *rpc消息请求
       * </pre>
       */
      public boolean hasRpcReq() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.RpcMessage rpc_req = 6;</code>
       *
       * <pre>
       *rpc消息请求
       * </pre>
       */
      public RpcMessage getRpcReq() {
        if (rpcReqBuilder_ == null) {
          return rpcReq_ == null ? RpcMessage.getDefaultInstance() : rpcReq_;
        } else {
          return rpcReqBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.RpcMessage rpc_req = 6;</code>
       *
       * <pre>
       *rpc消息请求
       * </pre>
       */
      public Builder setRpcReq(RpcMessage value) {
        if (rpcReqBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rpcReq_ = value;
          onChanged();
        } else {
          rpcReqBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.RpcMessage rpc_req = 6;</code>
       *
       * <pre>
       *rpc消息请求
       * </pre>
       */
      public Builder setRpcReq(
          RpcMessage.Builder builderForValue) {
        if (rpcReqBuilder_ == null) {
          rpcReq_ = builderForValue.build();
          onChanged();
        } else {
          rpcReqBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.RpcMessage rpc_req = 6;</code>
       *
       * <pre>
       *rpc消息请求
       * </pre>
       */
      public Builder mergeRpcReq(RpcMessage value) {
        if (rpcReqBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              rpcReq_ != null &&
              rpcReq_ != RpcMessage.getDefaultInstance()) {
            rpcReq_ =
              RpcMessage.newBuilder(rpcReq_).mergeFrom(value).buildPartial();
          } else {
            rpcReq_ = value;
          }
          onChanged();
        } else {
          rpcReqBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.RpcMessage rpc_req = 6;</code>
       *
       * <pre>
       *rpc消息请求
       * </pre>
       */
      public Builder clearRpcReq() {
        if (rpcReqBuilder_ == null) {
          rpcReq_ = null;
          onChanged();
        } else {
          rpcReqBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.RpcMessage rpc_req = 6;</code>
       *
       * <pre>
       *rpc消息请求
       * </pre>
       */
      public RpcMessage.Builder getRpcReqBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getRpcReqFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.RpcMessage rpc_req = 6;</code>
       *
       * <pre>
       *rpc消息请求
       * </pre>
       */
      public RpcMessageOrBuilder getRpcReqOrBuilder() {
        if (rpcReqBuilder_ != null) {
          return rpcReqBuilder_.getMessageOrBuilder();
        } else {
          return rpcReq_ == null ?
              RpcMessage.getDefaultInstance() : rpcReq_;
        }
      }
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.RpcMessage rpc_req = 6;</code>
       *
       * <pre>
       *rpc消息请求
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          RpcMessage, RpcMessage.Builder, RpcMessageOrBuilder>
          getRpcReqFieldBuilder() {
        if (rpcReqBuilder_ == null) {
          rpcReqBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              RpcMessage, RpcMessage.Builder, RpcMessageOrBuilder>(
                  getRpcReq(),
                  getParentForChildren(),
                  isClean());
          rpcReq_ = null;
        }
        return rpcReqBuilder_;
      }

      private RPCMessageAck rpcAck_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          RPCMessageAck, RPCMessageAck.Builder, RPCMessageAckOrBuilder> rpcAckBuilder_;
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.RPCMessageAck rpc_ack = 7;</code>
       *
       * <pre>
       *rpc请求消息响应
       * </pre>
       */
      public boolean hasRpcAck() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.RPCMessageAck rpc_ack = 7;</code>
       *
       * <pre>
       *rpc请求消息响应
       * </pre>
       */
      public RPCMessageAck getRpcAck() {
        if (rpcAckBuilder_ == null) {
          return rpcAck_ == null ? RPCMessageAck.getDefaultInstance() : rpcAck_;
        } else {
          return rpcAckBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.RPCMessageAck rpc_ack = 7;</code>
       *
       * <pre>
       *rpc请求消息响应
       * </pre>
       */
      public Builder setRpcAck(RPCMessageAck value) {
        if (rpcAckBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rpcAck_ = value;
          onChanged();
        } else {
          rpcAckBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.RPCMessageAck rpc_ack = 7;</code>
       *
       * <pre>
       *rpc请求消息响应
       * </pre>
       */
      public Builder setRpcAck(
          RPCMessageAck.Builder builderForValue) {
        if (rpcAckBuilder_ == null) {
          rpcAck_ = builderForValue.build();
          onChanged();
        } else {
          rpcAckBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.RPCMessageAck rpc_ack = 7;</code>
       *
       * <pre>
       *rpc请求消息响应
       * </pre>
       */
      public Builder mergeRpcAck(RPCMessageAck value) {
        if (rpcAckBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              rpcAck_ != null &&
              rpcAck_ != RPCMessageAck.getDefaultInstance()) {
            rpcAck_ =
              RPCMessageAck.newBuilder(rpcAck_).mergeFrom(value).buildPartial();
          } else {
            rpcAck_ = value;
          }
          onChanged();
        } else {
          rpcAckBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.RPCMessageAck rpc_ack = 7;</code>
       *
       * <pre>
       *rpc请求消息响应
       * </pre>
       */
      public Builder clearRpcAck() {
        if (rpcAckBuilder_ == null) {
          rpcAck_ = null;
          onChanged();
        } else {
          rpcAckBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.RPCMessageAck rpc_ack = 7;</code>
       *
       * <pre>
       *rpc请求消息响应
       * </pre>
       */
      public RPCMessageAck.Builder getRpcAckBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getRpcAckFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.RPCMessageAck rpc_ack = 7;</code>
       *
       * <pre>
       *rpc请求消息响应
       * </pre>
       */
      public RPCMessageAckOrBuilder getRpcAckOrBuilder() {
        if (rpcAckBuilder_ != null) {
          return rpcAckBuilder_.getMessageOrBuilder();
        } else {
          return rpcAck_ == null ?
              RPCMessageAck.getDefaultInstance() : rpcAck_;
        }
      }
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.RPCMessageAck rpc_ack = 7;</code>
       *
       * <pre>
       *rpc请求消息响应
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          RPCMessageAck, RPCMessageAck.Builder, RPCMessageAckOrBuilder>
          getRpcAckFieldBuilder() {
        if (rpcAckBuilder_ == null) {
          rpcAckBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              RPCMessageAck, RPCMessageAck.Builder, RPCMessageAckOrBuilder>(
                  getRpcAck(),
                  getParentForChildren(),
                  isClean());
          rpcAck_ = null;
        }
        return rpcAckBuilder_;
      }

      private GetAccountSessionidReq getAccountSessionidReq_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          GetAccountSessionidReq, GetAccountSessionidReq.Builder, GetAccountSessionidReqOrBuilder> getAccountSessionidReqBuilder_;
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.GetAccountSessionidReq get_account_sessionid_req = 8;</code>
       *
       * <pre>
       *获取一个账号的sessionid请求
       * </pre>
       */
      public boolean hasGetAccountSessionidReq() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.GetAccountSessionidReq get_account_sessionid_req = 8;</code>
       *
       * <pre>
       *获取一个账号的sessionid请求
       * </pre>
       */
      public GetAccountSessionidReq getGetAccountSessionidReq() {
        if (getAccountSessionidReqBuilder_ == null) {
          return getAccountSessionidReq_ == null ? GetAccountSessionidReq.getDefaultInstance() : getAccountSessionidReq_;
        } else {
          return getAccountSessionidReqBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.GetAccountSessionidReq get_account_sessionid_req = 8;</code>
       *
       * <pre>
       *获取一个账号的sessionid请求
       * </pre>
       */
      public Builder setGetAccountSessionidReq(GetAccountSessionidReq value) {
        if (getAccountSessionidReqBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          getAccountSessionidReq_ = value;
          onChanged();
        } else {
          getAccountSessionidReqBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.GetAccountSessionidReq get_account_sessionid_req = 8;</code>
       *
       * <pre>
       *获取一个账号的sessionid请求
       * </pre>
       */
      public Builder setGetAccountSessionidReq(
          GetAccountSessionidReq.Builder builderForValue) {
        if (getAccountSessionidReqBuilder_ == null) {
          getAccountSessionidReq_ = builderForValue.build();
          onChanged();
        } else {
          getAccountSessionidReqBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.GetAccountSessionidReq get_account_sessionid_req = 8;</code>
       *
       * <pre>
       *获取一个账号的sessionid请求
       * </pre>
       */
      public Builder mergeGetAccountSessionidReq(GetAccountSessionidReq value) {
        if (getAccountSessionidReqBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              getAccountSessionidReq_ != null &&
              getAccountSessionidReq_ != GetAccountSessionidReq.getDefaultInstance()) {
            getAccountSessionidReq_ =
              GetAccountSessionidReq.newBuilder(getAccountSessionidReq_).mergeFrom(value).buildPartial();
          } else {
            getAccountSessionidReq_ = value;
          }
          onChanged();
        } else {
          getAccountSessionidReqBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.GetAccountSessionidReq get_account_sessionid_req = 8;</code>
       *
       * <pre>
       *获取一个账号的sessionid请求
       * </pre>
       */
      public Builder clearGetAccountSessionidReq() {
        if (getAccountSessionidReqBuilder_ == null) {
          getAccountSessionidReq_ = null;
          onChanged();
        } else {
          getAccountSessionidReqBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.GetAccountSessionidReq get_account_sessionid_req = 8;</code>
       *
       * <pre>
       *获取一个账号的sessionid请求
       * </pre>
       */
      public GetAccountSessionidReq.Builder getGetAccountSessionidReqBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getGetAccountSessionidReqFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.GetAccountSessionidReq get_account_sessionid_req = 8;</code>
       *
       * <pre>
       *获取一个账号的sessionid请求
       * </pre>
       */
      public GetAccountSessionidReqOrBuilder getGetAccountSessionidReqOrBuilder() {
        if (getAccountSessionidReqBuilder_ != null) {
          return getAccountSessionidReqBuilder_.getMessageOrBuilder();
        } else {
          return getAccountSessionidReq_ == null ?
              GetAccountSessionidReq.getDefaultInstance() : getAccountSessionidReq_;
        }
      }
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.GetAccountSessionidReq get_account_sessionid_req = 8;</code>
       *
       * <pre>
       *获取一个账号的sessionid请求
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          GetAccountSessionidReq, GetAccountSessionidReq.Builder, GetAccountSessionidReqOrBuilder>
          getGetAccountSessionidReqFieldBuilder() {
        if (getAccountSessionidReqBuilder_ == null) {
          getAccountSessionidReqBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              GetAccountSessionidReq, GetAccountSessionidReq.Builder, GetAccountSessionidReqOrBuilder>(
                  getGetAccountSessionidReq(),
                  getParentForChildren(),
                  isClean());
          getAccountSessionidReq_ = null;
        }
        return getAccountSessionidReqBuilder_;
      }

      private GetAccountSessionidAck getAccountSessionidAck_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          GetAccountSessionidAck, GetAccountSessionidAck.Builder, GetAccountSessionidAckOrBuilder> getAccountSessionidAckBuilder_;
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.GetAccountSessionidAck get_account_sessionid_ack = 9;</code>
       *
       * <pre>
       *获取账号sessionid响应
       * </pre>
       */
      public boolean hasGetAccountSessionidAck() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.GetAccountSessionidAck get_account_sessionid_ack = 9;</code>
       *
       * <pre>
       *获取账号sessionid响应
       * </pre>
       */
      public GetAccountSessionidAck getGetAccountSessionidAck() {
        if (getAccountSessionidAckBuilder_ == null) {
          return getAccountSessionidAck_ == null ? GetAccountSessionidAck.getDefaultInstance() : getAccountSessionidAck_;
        } else {
          return getAccountSessionidAckBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.GetAccountSessionidAck get_account_sessionid_ack = 9;</code>
       *
       * <pre>
       *获取账号sessionid响应
       * </pre>
       */
      public Builder setGetAccountSessionidAck(GetAccountSessionidAck value) {
        if (getAccountSessionidAckBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          getAccountSessionidAck_ = value;
          onChanged();
        } else {
          getAccountSessionidAckBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.GetAccountSessionidAck get_account_sessionid_ack = 9;</code>
       *
       * <pre>
       *获取账号sessionid响应
       * </pre>
       */
      public Builder setGetAccountSessionidAck(
          GetAccountSessionidAck.Builder builderForValue) {
        if (getAccountSessionidAckBuilder_ == null) {
          getAccountSessionidAck_ = builderForValue.build();
          onChanged();
        } else {
          getAccountSessionidAckBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.GetAccountSessionidAck get_account_sessionid_ack = 9;</code>
       *
       * <pre>
       *获取账号sessionid响应
       * </pre>
       */
      public Builder mergeGetAccountSessionidAck(GetAccountSessionidAck value) {
        if (getAccountSessionidAckBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              getAccountSessionidAck_ != null &&
              getAccountSessionidAck_ != GetAccountSessionidAck.getDefaultInstance()) {
            getAccountSessionidAck_ =
              GetAccountSessionidAck.newBuilder(getAccountSessionidAck_).mergeFrom(value).buildPartial();
          } else {
            getAccountSessionidAck_ = value;
          }
          onChanged();
        } else {
          getAccountSessionidAckBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.GetAccountSessionidAck get_account_sessionid_ack = 9;</code>
       *
       * <pre>
       *获取账号sessionid响应
       * </pre>
       */
      public Builder clearGetAccountSessionidAck() {
        if (getAccountSessionidAckBuilder_ == null) {
          getAccountSessionidAck_ = null;
          onChanged();
        } else {
          getAccountSessionidAckBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.GetAccountSessionidAck get_account_sessionid_ack = 9;</code>
       *
       * <pre>
       *获取账号sessionid响应
       * </pre>
       */
      public GetAccountSessionidAck.Builder getGetAccountSessionidAckBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getGetAccountSessionidAckFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.GetAccountSessionidAck get_account_sessionid_ack = 9;</code>
       *
       * <pre>
       *获取账号sessionid响应
       * </pre>
       */
      public GetAccountSessionidAckOrBuilder getGetAccountSessionidAckOrBuilder() {
        if (getAccountSessionidAckBuilder_ != null) {
          return getAccountSessionidAckBuilder_.getMessageOrBuilder();
        } else {
          return getAccountSessionidAck_ == null ?
              GetAccountSessionidAck.getDefaultInstance() : getAccountSessionidAck_;
        }
      }
      /**
       * <code>optional .com.mktech.newprotocols.tcpserver.transfer.bean.GetAccountSessionidAck get_account_sessionid_ack = 9;</code>
       *
       * <pre>
       *获取账号sessionid响应
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          GetAccountSessionidAck, GetAccountSessionidAck.Builder, GetAccountSessionidAckOrBuilder>
          getGetAccountSessionidAckFieldBuilder() {
        if (getAccountSessionidAckBuilder_ == null) {
          getAccountSessionidAckBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              GetAccountSessionidAck, GetAccountSessionidAck.Builder, GetAccountSessionidAckOrBuilder>(
                  getGetAccountSessionidAck(),
                  getParentForChildren(),
                  isClean());
          getAccountSessionidAck_ = null;
        }
        return getAccountSessionidAckBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.mktech.newprotocols.tcpserver.transfer.bean.QPack)
    }

    // @@protoc_insertion_point(class_scope:com.mktech.newprotocols.tcpserver.transfer.bean.QPack)
    private static final QPack DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new QPack();
    }

    public static QPack getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @Deprecated public static final com.google.protobuf.Parser<QPack>
        PARSER = new com.google.protobuf.AbstractParser<QPack>() {
      public QPack parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new QPack(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<QPack> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<QPack> getParserForType() {
      return PARSER;
    }

    public QPack getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HeartbeatReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.mktech.newprotocols.tcpserver.transfer.bean.HeartbeatReq)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string session_id = 1;</code>
     */
    boolean hasSessionId();
    /**
     * <code>optional string session_id = 1;</code>
     */
    String getSessionId();
    /**
     * <code>optional string session_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getSessionIdBytes();
  }
  /**
   * Protobuf type {@code com.mktech.newprotocols.tcpserver.transfer.bean.HeartbeatReq}
   */
  public  static final class HeartbeatReq extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.mktech.newprotocols.tcpserver.transfer.bean.HeartbeatReq)
      HeartbeatReqOrBuilder {
    // Use HeartbeatReq.newBuilder() to construct.
    private HeartbeatReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private HeartbeatReq() {
      sessionId_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private HeartbeatReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              sessionId_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Qmessages.internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_HeartbeatReq_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Qmessages.internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_HeartbeatReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              HeartbeatReq.class, Builder.class);
    }

    private int bitField0_;
    public static final int SESSION_ID_FIELD_NUMBER = 1;
    private volatile Object sessionId_;
    /**
     * <code>optional string session_id = 1;</code>
     */
    public boolean hasSessionId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string session_id = 1;</code>
     */
    public String getSessionId() {
      Object ref = sessionId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          sessionId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string session_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getSessionIdBytes() {
      Object ref = sessionId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        sessionId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, sessionId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, sessionId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static HeartbeatReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static HeartbeatReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static HeartbeatReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static HeartbeatReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static HeartbeatReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static HeartbeatReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static HeartbeatReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static HeartbeatReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static HeartbeatReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static HeartbeatReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(HeartbeatReq prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.mktech.newprotocols.tcpserver.transfer.bean.HeartbeatReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.mktech.newprotocols.tcpserver.transfer.bean.HeartbeatReq)
        HeartbeatReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Qmessages.internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_HeartbeatReq_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Qmessages.internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_HeartbeatReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                HeartbeatReq.class, Builder.class);
      }

      // Construct using com.mktech.newprotocols.tcpserver.transfer.bean.Qmessages.HeartbeatReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        sessionId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Qmessages.internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_HeartbeatReq_descriptor;
      }

      public HeartbeatReq getDefaultInstanceForType() {
        return HeartbeatReq.getDefaultInstance();
      }

      public HeartbeatReq build() {
        HeartbeatReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public HeartbeatReq buildPartial() {
        HeartbeatReq result = new HeartbeatReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.sessionId_ = sessionId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof HeartbeatReq) {
          return mergeFrom((HeartbeatReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(HeartbeatReq other) {
        if (other == HeartbeatReq.getDefaultInstance()) return this;
        if (other.hasSessionId()) {
          bitField0_ |= 0x00000001;
          sessionId_ = other.sessionId_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        HeartbeatReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (HeartbeatReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Object sessionId_ = "";
      /**
       * <code>optional string session_id = 1;</code>
       */
      public boolean hasSessionId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string session_id = 1;</code>
       */
      public String getSessionId() {
        Object ref = sessionId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            sessionId_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string session_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getSessionIdBytes() {
        Object ref = sessionId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          sessionId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string session_id = 1;</code>
       */
      public Builder setSessionId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        sessionId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string session_id = 1;</code>
       */
      public Builder clearSessionId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        sessionId_ = getDefaultInstance().getSessionId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string session_id = 1;</code>
       */
      public Builder setSessionIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        sessionId_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.mktech.newprotocols.tcpserver.transfer.bean.HeartbeatReq)
    }

    // @@protoc_insertion_point(class_scope:com.mktech.newprotocols.tcpserver.transfer.bean.HeartbeatReq)
    private static final HeartbeatReq DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new HeartbeatReq();
    }

    public static HeartbeatReq getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @Deprecated public static final com.google.protobuf.Parser<HeartbeatReq>
        PARSER = new com.google.protobuf.AbstractParser<HeartbeatReq>() {
      public HeartbeatReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new HeartbeatReq(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<HeartbeatReq> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<HeartbeatReq> getParserForType() {
      return PARSER;
    }

    public HeartbeatReq getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HeartbeatAckOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.mktech.newprotocols.tcpserver.transfer.bean.HeartbeatAck)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 status = 1;</code>
     */
    boolean hasStatus();
    /**
     * <code>optional int32 status = 1;</code>
     */
    int getStatus();
  }
  /**
   * Protobuf type {@code com.mktech.newprotocols.tcpserver.transfer.bean.HeartbeatAck}
   */
  public  static final class HeartbeatAck extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.mktech.newprotocols.tcpserver.transfer.bean.HeartbeatAck)
      HeartbeatAckOrBuilder {
    // Use HeartbeatAck.newBuilder() to construct.
    private HeartbeatAck(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private HeartbeatAck() {
      status_ = 0;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private HeartbeatAck(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              status_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Qmessages.internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_HeartbeatAck_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Qmessages.internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_HeartbeatAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              HeartbeatAck.class, Builder.class);
    }

    private int bitField0_;
    public static final int STATUS_FIELD_NUMBER = 1;
    private int status_;
    /**
     * <code>optional int32 status = 1;</code>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 status = 1;</code>
     */
    public int getStatus() {
      return status_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, status_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, status_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static HeartbeatAck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static HeartbeatAck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static HeartbeatAck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static HeartbeatAck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static HeartbeatAck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static HeartbeatAck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static HeartbeatAck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static HeartbeatAck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static HeartbeatAck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static HeartbeatAck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(HeartbeatAck prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.mktech.newprotocols.tcpserver.transfer.bean.HeartbeatAck}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.mktech.newprotocols.tcpserver.transfer.bean.HeartbeatAck)
        HeartbeatAckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Qmessages.internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_HeartbeatAck_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Qmessages.internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_HeartbeatAck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                HeartbeatAck.class, Builder.class);
      }

      // Construct using com.mktech.newprotocols.tcpserver.transfer.bean.Qmessages.HeartbeatAck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Qmessages.internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_HeartbeatAck_descriptor;
      }

      public HeartbeatAck getDefaultInstanceForType() {
        return HeartbeatAck.getDefaultInstance();
      }

      public HeartbeatAck build() {
        HeartbeatAck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public HeartbeatAck buildPartial() {
        HeartbeatAck result = new HeartbeatAck(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.status_ = status_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof HeartbeatAck) {
          return mergeFrom((HeartbeatAck)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(HeartbeatAck other) {
        if (other == HeartbeatAck.getDefaultInstance()) return this;
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        HeartbeatAck parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (HeartbeatAck) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int status_ ;
      /**
       * <code>optional int32 status = 1;</code>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 status = 1;</code>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <code>optional int32 status = 1;</code>
       */
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000001;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 status = 1;</code>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.mktech.newprotocols.tcpserver.transfer.bean.HeartbeatAck)
    }

    // @@protoc_insertion_point(class_scope:com.mktech.newprotocols.tcpserver.transfer.bean.HeartbeatAck)
    private static final HeartbeatAck DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new HeartbeatAck();
    }

    public static HeartbeatAck getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @Deprecated public static final com.google.protobuf.Parser<HeartbeatAck>
        PARSER = new com.google.protobuf.AbstractParser<HeartbeatAck>() {
      public HeartbeatAck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new HeartbeatAck(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<HeartbeatAck> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<HeartbeatAck> getParserForType() {
      return PARSER;
    }

    public HeartbeatAck getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RpcMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.mktech.newprotocols.tcpserver.transfer.bean.RpcMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string src_session_id = 1;</code>
     *
     * <pre>
     * rpc发起者session_id
     * </pre>
     */
    boolean hasSrcSessionId();
    /**
     * <code>optional string src_session_id = 1;</code>
     *
     * <pre>
     * rpc发起者session_id
     * </pre>
     */
    String getSrcSessionId();
    /**
     * <code>optional string src_session_id = 1;</code>
     *
     * <pre>
     * rpc发起者session_id
     * </pre>
     */
    com.google.protobuf.ByteString
        getSrcSessionIdBytes();

    /**
     * <code>optional string dst_session_id = 2;</code>
     *
     * <pre>
     * rpc接受者session_id
     * </pre>
     */
    boolean hasDstSessionId();
    /**
     * <code>optional string dst_session_id = 2;</code>
     *
     * <pre>
     * rpc接受者session_id
     * </pre>
     */
    String getDstSessionId();
    /**
     * <code>optional string dst_session_id = 2;</code>
     *
     * <pre>
     * rpc接受者session_id
     * </pre>
     */
    com.google.protobuf.ByteString
        getDstSessionIdBytes();

    /**
     * <code>optional string message_id = 3;</code>
     */
    boolean hasMessageId();
    /**
     * <code>optional string message_id = 3;</code>
     */
    String getMessageId();
    /**
     * <code>optional string message_id = 3;</code>
     */
    com.google.protobuf.ByteString
        getMessageIdBytes();

    /**
     * <code>optional int32 req_type = 4;</code>
     *
     * <pre>
     *消息类型
     * </pre>
     */
    boolean hasReqType();
    /**
     * <code>optional int32 req_type = 4;</code>
     *
     * <pre>
     *消息类型
     * </pre>
     */
    int getReqType();

    /**
     * <code>optional bytes payload = 5;</code>
     *
     * <pre>
     * rpc请求包
     * </pre>
     */
    boolean hasPayload();
    /**
     * <code>optional bytes payload = 5;</code>
     *
     * <pre>
     * rpc请求包
     * </pre>
     */
    com.google.protobuf.ByteString getPayload();
  }
  /**
   * Protobuf type {@code com.mktech.newprotocols.tcpserver.transfer.bean.RpcMessage}
   */
  public  static final class RpcMessage extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.mktech.newprotocols.tcpserver.transfer.bean.RpcMessage)
      RpcMessageOrBuilder {
    // Use RpcMessage.newBuilder() to construct.
    private RpcMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private RpcMessage() {
      srcSessionId_ = "";
      dstSessionId_ = "";
      messageId_ = "";
      reqType_ = 0;
      payload_ = com.google.protobuf.ByteString.EMPTY;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RpcMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              srcSessionId_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              dstSessionId_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              messageId_ = bs;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              reqType_ = input.readInt32();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              payload_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Qmessages.internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_RpcMessage_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Qmessages.internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_RpcMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RpcMessage.class, Builder.class);
    }

    private int bitField0_;
    public static final int SRC_SESSION_ID_FIELD_NUMBER = 1;
    private volatile Object srcSessionId_;
    /**
     * <code>optional string src_session_id = 1;</code>
     *
     * <pre>
     * rpc发起者session_id
     * </pre>
     */
    public boolean hasSrcSessionId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string src_session_id = 1;</code>
     *
     * <pre>
     * rpc发起者session_id
     * </pre>
     */
    public String getSrcSessionId() {
      Object ref = srcSessionId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          srcSessionId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string src_session_id = 1;</code>
     *
     * <pre>
     * rpc发起者session_id
     * </pre>
     */
    public com.google.protobuf.ByteString
        getSrcSessionIdBytes() {
      Object ref = srcSessionId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        srcSessionId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DST_SESSION_ID_FIELD_NUMBER = 2;
    private volatile Object dstSessionId_;
    /**
     * <code>optional string dst_session_id = 2;</code>
     *
     * <pre>
     * rpc接受者session_id
     * </pre>
     */
    public boolean hasDstSessionId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string dst_session_id = 2;</code>
     *
     * <pre>
     * rpc接受者session_id
     * </pre>
     */
    public String getDstSessionId() {
      Object ref = dstSessionId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          dstSessionId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string dst_session_id = 2;</code>
     *
     * <pre>
     * rpc接受者session_id
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDstSessionIdBytes() {
      Object ref = dstSessionId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        dstSessionId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MESSAGE_ID_FIELD_NUMBER = 3;
    private volatile Object messageId_;
    /**
     * <code>optional string message_id = 3;</code>
     */
    public boolean hasMessageId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string message_id = 3;</code>
     */
    public String getMessageId() {
      Object ref = messageId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          messageId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string message_id = 3;</code>
     */
    public com.google.protobuf.ByteString
        getMessageIdBytes() {
      Object ref = messageId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        messageId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REQ_TYPE_FIELD_NUMBER = 4;
    private int reqType_;
    /**
     * <code>optional int32 req_type = 4;</code>
     *
     * <pre>
     *消息类型
     * </pre>
     */
    public boolean hasReqType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 req_type = 4;</code>
     *
     * <pre>
     *消息类型
     * </pre>
     */
    public int getReqType() {
      return reqType_;
    }

    public static final int PAYLOAD_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString payload_;
    /**
     * <code>optional bytes payload = 5;</code>
     *
     * <pre>
     * rpc请求包
     * </pre>
     */
    public boolean hasPayload() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bytes payload = 5;</code>
     *
     * <pre>
     * rpc请求包
     * </pre>
     */
    public com.google.protobuf.ByteString getPayload() {
      return payload_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, srcSessionId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, dstSessionId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, messageId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, reqType_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, payload_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, srcSessionId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, dstSessionId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(3, messageId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, reqType_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, payload_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static RpcMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RpcMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RpcMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RpcMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RpcMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static RpcMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static RpcMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static RpcMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static RpcMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static RpcMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(RpcMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.mktech.newprotocols.tcpserver.transfer.bean.RpcMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.mktech.newprotocols.tcpserver.transfer.bean.RpcMessage)
        RpcMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Qmessages.internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_RpcMessage_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Qmessages.internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_RpcMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RpcMessage.class, Builder.class);
      }

      // Construct using com.mktech.newprotocols.tcpserver.transfer.bean.Qmessages.RpcMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        srcSessionId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        dstSessionId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        messageId_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        reqType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        payload_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Qmessages.internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_RpcMessage_descriptor;
      }

      public RpcMessage getDefaultInstanceForType() {
        return RpcMessage.getDefaultInstance();
      }

      public RpcMessage build() {
        RpcMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public RpcMessage buildPartial() {
        RpcMessage result = new RpcMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.srcSessionId_ = srcSessionId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.dstSessionId_ = dstSessionId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.messageId_ = messageId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.reqType_ = reqType_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.payload_ = payload_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RpcMessage) {
          return mergeFrom((RpcMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RpcMessage other) {
        if (other == RpcMessage.getDefaultInstance()) return this;
        if (other.hasSrcSessionId()) {
          bitField0_ |= 0x00000001;
          srcSessionId_ = other.srcSessionId_;
          onChanged();
        }
        if (other.hasDstSessionId()) {
          bitField0_ |= 0x00000002;
          dstSessionId_ = other.dstSessionId_;
          onChanged();
        }
        if (other.hasMessageId()) {
          bitField0_ |= 0x00000004;
          messageId_ = other.messageId_;
          onChanged();
        }
        if (other.hasReqType()) {
          setReqType(other.getReqType());
        }
        if (other.hasPayload()) {
          setPayload(other.getPayload());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        RpcMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (RpcMessage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Object srcSessionId_ = "";
      /**
       * <code>optional string src_session_id = 1;</code>
       *
       * <pre>
       * rpc发起者session_id
       * </pre>
       */
      public boolean hasSrcSessionId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string src_session_id = 1;</code>
       *
       * <pre>
       * rpc发起者session_id
       * </pre>
       */
      public String getSrcSessionId() {
        Object ref = srcSessionId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            srcSessionId_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string src_session_id = 1;</code>
       *
       * <pre>
       * rpc发起者session_id
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSrcSessionIdBytes() {
        Object ref = srcSessionId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          srcSessionId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string src_session_id = 1;</code>
       *
       * <pre>
       * rpc发起者session_id
       * </pre>
       */
      public Builder setSrcSessionId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        srcSessionId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string src_session_id = 1;</code>
       *
       * <pre>
       * rpc发起者session_id
       * </pre>
       */
      public Builder clearSrcSessionId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        srcSessionId_ = getDefaultInstance().getSrcSessionId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string src_session_id = 1;</code>
       *
       * <pre>
       * rpc发起者session_id
       * </pre>
       */
      public Builder setSrcSessionIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        srcSessionId_ = value;
        onChanged();
        return this;
      }

      private Object dstSessionId_ = "";
      /**
       * <code>optional string dst_session_id = 2;</code>
       *
       * <pre>
       * rpc接受者session_id
       * </pre>
       */
      public boolean hasDstSessionId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string dst_session_id = 2;</code>
       *
       * <pre>
       * rpc接受者session_id
       * </pre>
       */
      public String getDstSessionId() {
        Object ref = dstSessionId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            dstSessionId_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string dst_session_id = 2;</code>
       *
       * <pre>
       * rpc接受者session_id
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDstSessionIdBytes() {
        Object ref = dstSessionId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          dstSessionId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string dst_session_id = 2;</code>
       *
       * <pre>
       * rpc接受者session_id
       * </pre>
       */
      public Builder setDstSessionId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        dstSessionId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string dst_session_id = 2;</code>
       *
       * <pre>
       * rpc接受者session_id
       * </pre>
       */
      public Builder clearDstSessionId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        dstSessionId_ = getDefaultInstance().getDstSessionId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string dst_session_id = 2;</code>
       *
       * <pre>
       * rpc接受者session_id
       * </pre>
       */
      public Builder setDstSessionIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        dstSessionId_ = value;
        onChanged();
        return this;
      }

      private Object messageId_ = "";
      /**
       * <code>optional string message_id = 3;</code>
       */
      public boolean hasMessageId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string message_id = 3;</code>
       */
      public String getMessageId() {
        Object ref = messageId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            messageId_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string message_id = 3;</code>
       */
      public com.google.protobuf.ByteString
          getMessageIdBytes() {
        Object ref = messageId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          messageId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string message_id = 3;</code>
       */
      public Builder setMessageId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        messageId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string message_id = 3;</code>
       */
      public Builder clearMessageId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        messageId_ = getDefaultInstance().getMessageId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string message_id = 3;</code>
       */
      public Builder setMessageIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        messageId_ = value;
        onChanged();
        return this;
      }

      private int reqType_ ;
      /**
       * <code>optional int32 req_type = 4;</code>
       *
       * <pre>
       *消息类型
       * </pre>
       */
      public boolean hasReqType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 req_type = 4;</code>
       *
       * <pre>
       *消息类型
       * </pre>
       */
      public int getReqType() {
        return reqType_;
      }
      /**
       * <code>optional int32 req_type = 4;</code>
       *
       * <pre>
       *消息类型
       * </pre>
       */
      public Builder setReqType(int value) {
        bitField0_ |= 0x00000008;
        reqType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 req_type = 4;</code>
       *
       * <pre>
       *消息类型
       * </pre>
       */
      public Builder clearReqType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        reqType_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString payload_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes payload = 5;</code>
       *
       * <pre>
       * rpc请求包
       * </pre>
       */
      public boolean hasPayload() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bytes payload = 5;</code>
       *
       * <pre>
       * rpc请求包
       * </pre>
       */
      public com.google.protobuf.ByteString getPayload() {
        return payload_;
      }
      /**
       * <code>optional bytes payload = 5;</code>
       *
       * <pre>
       * rpc请求包
       * </pre>
       */
      public Builder setPayload(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        payload_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes payload = 5;</code>
       *
       * <pre>
       * rpc请求包
       * </pre>
       */
      public Builder clearPayload() {
        bitField0_ = (bitField0_ & ~0x00000010);
        payload_ = getDefaultInstance().getPayload();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.mktech.newprotocols.tcpserver.transfer.bean.RpcMessage)
    }

    // @@protoc_insertion_point(class_scope:com.mktech.newprotocols.tcpserver.transfer.bean.RpcMessage)
    private static final RpcMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RpcMessage();
    }

    public static RpcMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @Deprecated public static final com.google.protobuf.Parser<RpcMessage>
        PARSER = new com.google.protobuf.AbstractParser<RpcMessage>() {
      public RpcMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new RpcMessage(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<RpcMessage> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<RpcMessage> getParserForType() {
      return PARSER;
    }

    public RpcMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RPCMessageAckOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.mktech.newprotocols.tcpserver.transfer.bean.RPCMessageAck)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string message_id = 1;</code>
     */
    boolean hasMessageId();
    /**
     * <code>optional string message_id = 1;</code>
     */
    String getMessageId();
    /**
     * <code>optional string message_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getMessageIdBytes();

    /**
     * <code>optional int32 status = 2;</code>
     *
     * <pre>
     *消息状态。0成功，1目标离线，2小Q异常
     * </pre>
     */
    boolean hasStatus();
    /**
     * <code>optional int32 status = 2;</code>
     *
     * <pre>
     *消息状态。0成功，1目标离线，2小Q异常
     * </pre>
     */
    int getStatus();
  }
  /**
   * Protobuf type {@code com.mktech.newprotocols.tcpserver.transfer.bean.RPCMessageAck}
   */
  public  static final class RPCMessageAck extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.mktech.newprotocols.tcpserver.transfer.bean.RPCMessageAck)
      RPCMessageAckOrBuilder {
    // Use RPCMessageAck.newBuilder() to construct.
    private RPCMessageAck(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private RPCMessageAck() {
      messageId_ = "";
      status_ = 0;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RPCMessageAck(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              messageId_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              status_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Qmessages.internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_RPCMessageAck_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Qmessages.internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_RPCMessageAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RPCMessageAck.class, Builder.class);
    }

    private int bitField0_;
    public static final int MESSAGE_ID_FIELD_NUMBER = 1;
    private volatile Object messageId_;
    /**
     * <code>optional string message_id = 1;</code>
     */
    public boolean hasMessageId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string message_id = 1;</code>
     */
    public String getMessageId() {
      Object ref = messageId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          messageId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string message_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getMessageIdBytes() {
      Object ref = messageId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        messageId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STATUS_FIELD_NUMBER = 2;
    private int status_;
    /**
     * <code>optional int32 status = 2;</code>
     *
     * <pre>
     *消息状态。0成功，1目标离线，2小Q异常
     * </pre>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 status = 2;</code>
     *
     * <pre>
     *消息状态。0成功，1目标离线，2小Q异常
     * </pre>
     */
    public int getStatus() {
      return status_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, messageId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, status_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, messageId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, status_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static RPCMessageAck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RPCMessageAck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RPCMessageAck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RPCMessageAck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RPCMessageAck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static RPCMessageAck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static RPCMessageAck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static RPCMessageAck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static RPCMessageAck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static RPCMessageAck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(RPCMessageAck prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.mktech.newprotocols.tcpserver.transfer.bean.RPCMessageAck}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.mktech.newprotocols.tcpserver.transfer.bean.RPCMessageAck)
        RPCMessageAckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Qmessages.internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_RPCMessageAck_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Qmessages.internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_RPCMessageAck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RPCMessageAck.class, Builder.class);
      }

      // Construct using com.mktech.newprotocols.tcpserver.transfer.bean.Qmessages.RPCMessageAck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        messageId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Qmessages.internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_RPCMessageAck_descriptor;
      }

      public RPCMessageAck getDefaultInstanceForType() {
        return RPCMessageAck.getDefaultInstance();
      }

      public RPCMessageAck build() {
        RPCMessageAck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public RPCMessageAck buildPartial() {
        RPCMessageAck result = new RPCMessageAck(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.messageId_ = messageId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.status_ = status_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RPCMessageAck) {
          return mergeFrom((RPCMessageAck)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RPCMessageAck other) {
        if (other == RPCMessageAck.getDefaultInstance()) return this;
        if (other.hasMessageId()) {
          bitField0_ |= 0x00000001;
          messageId_ = other.messageId_;
          onChanged();
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        RPCMessageAck parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (RPCMessageAck) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Object messageId_ = "";
      /**
       * <code>optional string message_id = 1;</code>
       */
      public boolean hasMessageId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string message_id = 1;</code>
       */
      public String getMessageId() {
        Object ref = messageId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            messageId_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string message_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getMessageIdBytes() {
        Object ref = messageId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          messageId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string message_id = 1;</code>
       */
      public Builder setMessageId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        messageId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string message_id = 1;</code>
       */
      public Builder clearMessageId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        messageId_ = getDefaultInstance().getMessageId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string message_id = 1;</code>
       */
      public Builder setMessageIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        messageId_ = value;
        onChanged();
        return this;
      }

      private int status_ ;
      /**
       * <code>optional int32 status = 2;</code>
       *
       * <pre>
       *消息状态。0成功，1目标离线，2小Q异常
       * </pre>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 status = 2;</code>
       *
       * <pre>
       *消息状态。0成功，1目标离线，2小Q异常
       * </pre>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <code>optional int32 status = 2;</code>
       *
       * <pre>
       *消息状态。0成功，1目标离线，2小Q异常
       * </pre>
       */
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000002;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 status = 2;</code>
       *
       * <pre>
       *消息状态。0成功，1目标离线，2小Q异常
       * </pre>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000002);
        status_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.mktech.newprotocols.tcpserver.transfer.bean.RPCMessageAck)
    }

    // @@protoc_insertion_point(class_scope:com.mktech.newprotocols.tcpserver.transfer.bean.RPCMessageAck)
    private static final RPCMessageAck DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RPCMessageAck();
    }

    public static RPCMessageAck getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @Deprecated public static final com.google.protobuf.Parser<RPCMessageAck>
        PARSER = new com.google.protobuf.AbstractParser<RPCMessageAck>() {
      public RPCMessageAck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new RPCMessageAck(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<RPCMessageAck> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<RPCMessageAck> getParserForType() {
      return PARSER;
    }

    public RPCMessageAck getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GetAccountSessionidReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.mktech.newprotocols.tcpserver.transfer.bean.GetAccountSessionidReq)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string account_id = 1;</code>
     *
     * <pre>
     *账号id或者设备id
     * </pre>
     */
    boolean hasAccountId();
    /**
     * <code>optional string account_id = 1;</code>
     *
     * <pre>
     *账号id或者设备id
     * </pre>
     */
    String getAccountId();
    /**
     * <code>optional string account_id = 1;</code>
     *
     * <pre>
     *账号id或者设备id
     * </pre>
     */
    com.google.protobuf.ByteString
        getAccountIdBytes();
  }
  /**
   * Protobuf type {@code com.mktech.newprotocols.tcpserver.transfer.bean.GetAccountSessionidReq}
   */
  public  static final class GetAccountSessionidReq extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.mktech.newprotocols.tcpserver.transfer.bean.GetAccountSessionidReq)
      GetAccountSessionidReqOrBuilder {
    // Use GetAccountSessionidReq.newBuilder() to construct.
    private GetAccountSessionidReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private GetAccountSessionidReq() {
      accountId_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GetAccountSessionidReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              accountId_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Qmessages.internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_GetAccountSessionidReq_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Qmessages.internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_GetAccountSessionidReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              GetAccountSessionidReq.class, Builder.class);
    }

    private int bitField0_;
    public static final int ACCOUNT_ID_FIELD_NUMBER = 1;
    private volatile Object accountId_;
    /**
     * <code>optional string account_id = 1;</code>
     *
     * <pre>
     *账号id或者设备id
     * </pre>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string account_id = 1;</code>
     *
     * <pre>
     *账号id或者设备id
     * </pre>
     */
    public String getAccountId() {
      Object ref = accountId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          accountId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string account_id = 1;</code>
     *
     * <pre>
     *账号id或者设备id
     * </pre>
     */
    public com.google.protobuf.ByteString
        getAccountIdBytes() {
      Object ref = accountId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        accountId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, accountId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, accountId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static GetAccountSessionidReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GetAccountSessionidReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GetAccountSessionidReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GetAccountSessionidReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GetAccountSessionidReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static GetAccountSessionidReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static GetAccountSessionidReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static GetAccountSessionidReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static GetAccountSessionidReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static GetAccountSessionidReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(GetAccountSessionidReq prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.mktech.newprotocols.tcpserver.transfer.bean.GetAccountSessionidReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.mktech.newprotocols.tcpserver.transfer.bean.GetAccountSessionidReq)
        GetAccountSessionidReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Qmessages.internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_GetAccountSessionidReq_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Qmessages.internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_GetAccountSessionidReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                GetAccountSessionidReq.class, Builder.class);
      }

      // Construct using com.mktech.newprotocols.tcpserver.transfer.bean.Qmessages.GetAccountSessionidReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        accountId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Qmessages.internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_GetAccountSessionidReq_descriptor;
      }

      public GetAccountSessionidReq getDefaultInstanceForType() {
        return GetAccountSessionidReq.getDefaultInstance();
      }

      public GetAccountSessionidReq build() {
        GetAccountSessionidReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public GetAccountSessionidReq buildPartial() {
        GetAccountSessionidReq result = new GetAccountSessionidReq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.accountId_ = accountId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof GetAccountSessionidReq) {
          return mergeFrom((GetAccountSessionidReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(GetAccountSessionidReq other) {
        if (other == GetAccountSessionidReq.getDefaultInstance()) return this;
        if (other.hasAccountId()) {
          bitField0_ |= 0x00000001;
          accountId_ = other.accountId_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        GetAccountSessionidReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (GetAccountSessionidReq) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Object accountId_ = "";
      /**
       * <code>optional string account_id = 1;</code>
       *
       * <pre>
       *账号id或者设备id
       * </pre>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string account_id = 1;</code>
       *
       * <pre>
       *账号id或者设备id
       * </pre>
       */
      public String getAccountId() {
        Object ref = accountId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            accountId_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string account_id = 1;</code>
       *
       * <pre>
       *账号id或者设备id
       * </pre>
       */
      public com.google.protobuf.ByteString
          getAccountIdBytes() {
        Object ref = accountId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          accountId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string account_id = 1;</code>
       *
       * <pre>
       *账号id或者设备id
       * </pre>
       */
      public Builder setAccountId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        accountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string account_id = 1;</code>
       *
       * <pre>
       *账号id或者设备id
       * </pre>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountId_ = getDefaultInstance().getAccountId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string account_id = 1;</code>
       *
       * <pre>
       *账号id或者设备id
       * </pre>
       */
      public Builder setAccountIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        accountId_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.mktech.newprotocols.tcpserver.transfer.bean.GetAccountSessionidReq)
    }

    // @@protoc_insertion_point(class_scope:com.mktech.newprotocols.tcpserver.transfer.bean.GetAccountSessionidReq)
    private static final GetAccountSessionidReq DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new GetAccountSessionidReq();
    }

    public static GetAccountSessionidReq getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @Deprecated public static final com.google.protobuf.Parser<GetAccountSessionidReq>
        PARSER = new com.google.protobuf.AbstractParser<GetAccountSessionidReq>() {
      public GetAccountSessionidReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new GetAccountSessionidReq(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<GetAccountSessionidReq> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<GetAccountSessionidReq> getParserForType() {
      return PARSER;
    }

    public GetAccountSessionidReq getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GetAccountSessionidAckOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.mktech.newprotocols.tcpserver.transfer.bean.GetAccountSessionidAck)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 status = 1;</code>
     *
     * <pre>
     *获取状态,0成功，1未找到账号对应的sessionid，2系统异常
     * </pre>
     */
    boolean hasStatus();
    /**
     * <code>optional int32 status = 1;</code>
     *
     * <pre>
     *获取状态,0成功，1未找到账号对应的sessionid，2系统异常
     * </pre>
     */
    int getStatus();

    /**
     * <code>optional string session_id = 2;</code>
     *
     * <pre>
     *正常状态获取的sessionid
     * </pre>
     */
    boolean hasSessionId();
    /**
     * <code>optional string session_id = 2;</code>
     *
     * <pre>
     *正常状态获取的sessionid
     * </pre>
     */
    String getSessionId();
    /**
     * <code>optional string session_id = 2;</code>
     *
     * <pre>
     *正常状态获取的sessionid
     * </pre>
     */
    com.google.protobuf.ByteString
        getSessionIdBytes();
  }
  /**
   * Protobuf type {@code com.mktech.newprotocols.tcpserver.transfer.bean.GetAccountSessionidAck}
   */
  public  static final class GetAccountSessionidAck extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:com.mktech.newprotocols.tcpserver.transfer.bean.GetAccountSessionidAck)
      GetAccountSessionidAckOrBuilder {
    // Use GetAccountSessionidAck.newBuilder() to construct.
    private GetAccountSessionidAck(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private GetAccountSessionidAck() {
      status_ = 0;
      sessionId_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GetAccountSessionidAck(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              status_ = input.readInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              sessionId_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Qmessages.internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_GetAccountSessionidAck_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Qmessages.internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_GetAccountSessionidAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              GetAccountSessionidAck.class, Builder.class);
    }

    private int bitField0_;
    public static final int STATUS_FIELD_NUMBER = 1;
    private int status_;
    /**
     * <code>optional int32 status = 1;</code>
     *
     * <pre>
     *获取状态,0成功，1未找到账号对应的sessionid，2系统异常
     * </pre>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 status = 1;</code>
     *
     * <pre>
     *获取状态,0成功，1未找到账号对应的sessionid，2系统异常
     * </pre>
     */
    public int getStatus() {
      return status_;
    }

    public static final int SESSION_ID_FIELD_NUMBER = 2;
    private volatile Object sessionId_;
    /**
     * <code>optional string session_id = 2;</code>
     *
     * <pre>
     *正常状态获取的sessionid
     * </pre>
     */
    public boolean hasSessionId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string session_id = 2;</code>
     *
     * <pre>
     *正常状态获取的sessionid
     * </pre>
     */
    public String getSessionId() {
      Object ref = sessionId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          sessionId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string session_id = 2;</code>
     *
     * <pre>
     *正常状态获取的sessionid
     * </pre>
     */
    public com.google.protobuf.ByteString
        getSessionIdBytes() {
      Object ref = sessionId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        sessionId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, status_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, sessionId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, status_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, sessionId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static GetAccountSessionidAck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GetAccountSessionidAck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GetAccountSessionidAck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GetAccountSessionidAck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GetAccountSessionidAck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static GetAccountSessionidAck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static GetAccountSessionidAck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static GetAccountSessionidAck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static GetAccountSessionidAck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static GetAccountSessionidAck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(GetAccountSessionidAck prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.mktech.newprotocols.tcpserver.transfer.bean.GetAccountSessionidAck}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.mktech.newprotocols.tcpserver.transfer.bean.GetAccountSessionidAck)
        GetAccountSessionidAckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Qmessages.internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_GetAccountSessionidAck_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Qmessages.internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_GetAccountSessionidAck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                GetAccountSessionidAck.class, Builder.class);
      }

      // Construct using com.mktech.newprotocols.tcpserver.transfer.bean.Qmessages.GetAccountSessionidAck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        sessionId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Qmessages.internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_GetAccountSessionidAck_descriptor;
      }

      public GetAccountSessionidAck getDefaultInstanceForType() {
        return GetAccountSessionidAck.getDefaultInstance();
      }

      public GetAccountSessionidAck build() {
        GetAccountSessionidAck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public GetAccountSessionidAck buildPartial() {
        GetAccountSessionidAck result = new GetAccountSessionidAck(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.sessionId_ = sessionId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof GetAccountSessionidAck) {
          return mergeFrom((GetAccountSessionidAck)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(GetAccountSessionidAck other) {
        if (other == GetAccountSessionidAck.getDefaultInstance()) return this;
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasSessionId()) {
          bitField0_ |= 0x00000002;
          sessionId_ = other.sessionId_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        GetAccountSessionidAck parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (GetAccountSessionidAck) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int status_ ;
      /**
       * <code>optional int32 status = 1;</code>
       *
       * <pre>
       *获取状态,0成功，1未找到账号对应的sessionid，2系统异常
       * </pre>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 status = 1;</code>
       *
       * <pre>
       *获取状态,0成功，1未找到账号对应的sessionid，2系统异常
       * </pre>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <code>optional int32 status = 1;</code>
       *
       * <pre>
       *获取状态,0成功，1未找到账号对应的sessionid，2系统异常
       * </pre>
       */
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000001;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 status = 1;</code>
       *
       * <pre>
       *获取状态,0成功，1未找到账号对应的sessionid，2系统异常
       * </pre>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = 0;
        onChanged();
        return this;
      }

      private Object sessionId_ = "";
      /**
       * <code>optional string session_id = 2;</code>
       *
       * <pre>
       *正常状态获取的sessionid
       * </pre>
       */
      public boolean hasSessionId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string session_id = 2;</code>
       *
       * <pre>
       *正常状态获取的sessionid
       * </pre>
       */
      public String getSessionId() {
        Object ref = sessionId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            sessionId_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string session_id = 2;</code>
       *
       * <pre>
       *正常状态获取的sessionid
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSessionIdBytes() {
        Object ref = sessionId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          sessionId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string session_id = 2;</code>
       *
       * <pre>
       *正常状态获取的sessionid
       * </pre>
       */
      public Builder setSessionId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        sessionId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string session_id = 2;</code>
       *
       * <pre>
       *正常状态获取的sessionid
       * </pre>
       */
      public Builder clearSessionId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sessionId_ = getDefaultInstance().getSessionId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string session_id = 2;</code>
       *
       * <pre>
       *正常状态获取的sessionid
       * </pre>
       */
      public Builder setSessionIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        sessionId_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.mktech.newprotocols.tcpserver.transfer.bean.GetAccountSessionidAck)
    }

    // @@protoc_insertion_point(class_scope:com.mktech.newprotocols.tcpserver.transfer.bean.GetAccountSessionidAck)
    private static final GetAccountSessionidAck DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new GetAccountSessionidAck();
    }

    public static GetAccountSessionidAck getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @Deprecated public static final com.google.protobuf.Parser<GetAccountSessionidAck>
        PARSER = new com.google.protobuf.AbstractParser<GetAccountSessionidAck>() {
      public GetAccountSessionidAck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new GetAccountSessionidAck(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<GetAccountSessionidAck> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<GetAccountSessionidAck> getParserForType() {
      return PARSER;
    }

    public GetAccountSessionidAck getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_QPack_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_QPack_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_HeartbeatReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_HeartbeatReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_HeartbeatAck_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_HeartbeatAck_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_RpcMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_RpcMessage_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_RPCMessageAck_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_RPCMessageAck_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_GetAccountSessionidReq_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_GetAccountSessionidReq_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_GetAccountSessionidAck_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_GetAccountSessionidAck_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\017qmessages.proto\022/com.mktech.newprotoco" +
      "ls.tcpserver.transfer.bean\"\225\005\n\005QPack\022\031\n\016" +
      "packet_version\030\001 \001(\005:\0010\022N\n\013packet_type\030\002" +
      " \002(\01629.com.mktech.newprotocols.tcpserver" +
      ".transfer.bean.PackType\022T\n\rheartbeat_req" +
      "\030\004 \001(\0132=.com.mktech.newprotocols.tcpserv" +
      "er.transfer.bean.HeartbeatReq\022T\n\rheartbe" +
      "at_ack\030\005 \001(\0132=.com.mktech.newprotocols.t" +
      "cpserver.transfer.bean.HeartbeatAck\022L\n\007r" +
      "pc_req\030\006 \001(\0132;.com.mktech.newprotocols.t",
      "cpserver.transfer.bean.RpcMessage\022O\n\007rpc" +
      "_ack\030\007 \001(\0132>.com.mktech.newprotocols.tcp" +
      "server.transfer.bean.RPCMessageAck\022j\n\031ge" +
      "t_account_sessionid_req\030\010 \001(\0132G.com.mkte" +
      "ch.newprotocols.tcpserver.transfer.bean." +
      "GetAccountSessionidReq\022j\n\031get_account_se" +
      "ssionid_ack\030\t \001(\0132G.com.mktech.newprotoc" +
      "ols.tcpserver.transfer.bean.GetAccountSe" +
      "ssionidAck\"\"\n\014HeartbeatReq\022\022\n\nsession_id" +
      "\030\001 \001(\t\"\036\n\014HeartbeatAck\022\016\n\006status\030\001 \001(\005\"s",
      "\n\nRpcMessage\022\026\n\016src_session_id\030\001 \001(\t\022\026\n\016" +
      "dst_session_id\030\002 \001(\t\022\022\n\nmessage_id\030\003 \001(\t" +
      "\022\020\n\010req_type\030\004 \001(\005\022\017\n\007payload\030\005 \001(\014\"3\n\rR" +
      "PCMessageAck\022\022\n\nmessage_id\030\001 \001(\t\022\016\n\006stat" +
      "us\030\002 \001(\005\",\n\026GetAccountSessionidReq\022\022\n\nac" +
      "count_id\030\001 \001(\t\"<\n\026GetAccountSessionidAck" +
      "\022\016\n\006status\030\001 \001(\005\022\022\n\nsession_id\030\002 \001(\t*\202\001\n" +
      "\010PackType\022\020\n\014heartbeatReq\020\004\022\020\n\014heartbeat" +
      "Ack\020\005\022\016\n\nrpcMessage\020\006\022\n\n\006rpcAck\020\007\022\032\n\026get" +
      "AccountSessionidReq\020\010\022\032\n\026getAccountSessi",
      "onidAck\020\tB\002H\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_QPack_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_QPack_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_QPack_descriptor,
        new String[] { "PacketVersion", "PacketType", "HeartbeatReq", "HeartbeatAck", "RpcReq", "RpcAck", "GetAccountSessionidReq", "GetAccountSessionidAck", });
    internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_HeartbeatReq_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_HeartbeatReq_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_HeartbeatReq_descriptor,
        new String[] { "SessionId", });
    internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_HeartbeatAck_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_HeartbeatAck_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_HeartbeatAck_descriptor,
        new String[] { "Status", });
    internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_RpcMessage_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_RpcMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_RpcMessage_descriptor,
        new String[] { "SrcSessionId", "DstSessionId", "MessageId", "ReqType", "Payload", });
    internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_RPCMessageAck_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_RPCMessageAck_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_RPCMessageAck_descriptor,
        new String[] { "MessageId", "Status", });
    internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_GetAccountSessionidReq_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_GetAccountSessionidReq_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_GetAccountSessionidReq_descriptor,
        new String[] { "AccountId", });
    internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_GetAccountSessionidAck_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_GetAccountSessionidAck_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_com_mktech_newprotocols_tcpserver_transfer_bean_GetAccountSessionidAck_descriptor,
        new String[] { "Status", "SessionId", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
